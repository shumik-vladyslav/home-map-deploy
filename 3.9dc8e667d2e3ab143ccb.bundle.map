{"version":3,"sources":["webpack:///3.9dc8e667d2e3ab143ccb.chunk.js","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/charts/chart-js/chart-js.module.ts?a69c","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/charts/chart-js/chart-js.component.ts?8cfe","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/charts/chart-js/chart-js.routes.ts?c0b4","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/ng2-charts/components/charts/charts.js?b941","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/ng2-charts/ng2-charts.js?01f8","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/charts/chart-js/chart-js.component.scss?b4b7","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/charts/chart-js/chart-js.component.html?de29"],"names":["webpackJsonp","688","module","exports","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0__angular_core__","__WEBPACK_IMPORTED_MODULE_1__angular_common__","__WEBPACK_IMPORTED_MODULE_2_ng2_charts_ng2_charts__","__WEBPACK_IMPORTED_MODULE_3__chart_js_component__","n","__WEBPACK_IMPORTED_MODULE_4__chart_js_routes__","__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","ChartJsModule","imports","declarations","743","ChartJsComponent","lineChartData","data","label","lineChartLabels","lineChartOptions","animation","responsive","lineChartLegend","lineChartType","barChartOptions","scaleShowVerticalLines","barChartLabels","barChartType","barChartLegend","barChartData","doughnutChartLabels","doughnutChartData","doughnutChartType","radarChartLabels","radarChartData","radarChartType","pieChartLabels","pieChartData","pieChartType","polarAreaChartLabels","polarAreaChartData","polarAreaLegend","polarAreaChartType","prototype","chartClicked","e","console","log","chartHovered","selector","template","styles","810","__WEBPACK_IMPORTED_MODULE_0__angular_router__","__WEBPACK_IMPORTED_MODULE_1__chart_js_component__","chartJsRoutes","path","component","forChild","869","rgba","colour","alpha","concat","join","getRandomInt","min","max","Math","floor","random","formatLineColor","colors","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","formatBarColor","hoverBackgroundColor","hoverBorderColor","formatPieColors","map","color","formatPolarAreaColors","getRandomColor","generateColor","index","BaseChartDirective","defaultColors","generateColors","count","colorsArr","Array","getColors","chartType","core_1","element","labels","options","chartClick","EventEmitter","chartHover","initFlag","ngOnInit","ctx","nativeElement","getContext","cvs","datasets","refresh","ngOnChanges","changes","hasOwnProperty","chart","getDatasets","update","ngOnDestroy","destroy","getChartBuilder","_this","assign","legend","display","hover","onHover","active","emit","onClick","event","opts","type","Chart","Error","isArray","elm","newElm","Directive","args","ctorParameters","ElementRef","propDecorators","Input","Output","ChartsModule","NgModule","870","__export","m","p","894","920"],"mappings":"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","file":"3.9dc8e667d2e3ab143ccb.chunk.js","sourcesContent":["webpackJsonp([3,30],{\n\n/***/ 688:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(101);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ng2_charts_ng2_charts__ = __webpack_require__(870);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ng2_charts_ng2_charts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_ng2_charts_ng2_charts__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__chart_js_component__ = __webpack_require__(743);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__chart_js_routes__ = __webpack_require__(810);\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\n\r\n\r\n\r\n\r\n\r\nvar ChartJsModule = (function () {\r\n    function ChartJsModule() {\r\n    }\r\n    ChartJsModule = __decorate([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"])({\r\n            imports: [\r\n                __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"CommonModule\"],\r\n                __WEBPACK_IMPORTED_MODULE_2_ng2_charts_ng2_charts__[\"ChartsModule\"],\r\n                __WEBPACK_IMPORTED_MODULE_4__chart_js_routes__[\"a\" /* default */]\r\n            ],\r\n            declarations: [__WEBPACK_IMPORTED_MODULE_3__chart_js_component__[\"a\" /* ChartJsComponent */]]\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], ChartJsModule);\r\n    return ChartJsModule;\r\n}());\r\n/* harmony default export */ exports[\"default\"] = ChartJsModule;\r\n\n\n/***/ },\n\n/***/ 743:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return ChartJsComponent; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\n\r\nvar ChartJsComponent = (function () {\r\n    function ChartJsComponent() {\r\n        // lineChart\r\n        this.lineChartData = [\r\n            { data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A' },\r\n            { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' },\r\n            { data: [18, 48, 77, 9, 100, 27, 40], label: 'Series C' }\r\n        ];\r\n        this.lineChartLabels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n        this.lineChartOptions = {\r\n            animation: false,\r\n            responsive: true\r\n        };\r\n        this.lineChartLegend = true;\r\n        this.lineChartType = 'line';\r\n        // bar chart\r\n        this.barChartOptions = {\r\n            scaleShowVerticalLines: false,\r\n            responsive: true\r\n        };\r\n        this.barChartLabels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\r\n        this.barChartType = 'bar';\r\n        this.barChartLegend = true;\r\n        this.barChartData = [\r\n            { data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A' },\r\n            { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' }\r\n        ];\r\n        // Doughnut chart\r\n        this.doughnutChartLabels = ['Download Sales', 'In-Store Sales', 'Mail-Order Sales'];\r\n        this.doughnutChartData = [350, 450, 100];\r\n        this.doughnutChartType = 'doughnut';\r\n        // Radar\r\n        this.radarChartLabels = ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'];\r\n        this.radarChartData = [\r\n            { data: [65, 59, 90, 81, 56, 55, 40], label: 'Series A' },\r\n            { data: [28, 48, 40, 19, 96, 27, 100], label: 'Series B' }\r\n        ];\r\n        this.radarChartType = 'radar';\r\n        // Pie\r\n        this.pieChartLabels = ['Download Sales', 'In-Store Sales', 'Mail Sales'];\r\n        this.pieChartData = [300, 500, 100];\r\n        this.pieChartType = 'pie';\r\n        // PolarArea\r\n        this.polarAreaChartLabels = ['Download Sales', 'In-Store Sales', 'Mail Sales', 'Telesales', 'Corporate Sales'];\r\n        this.polarAreaChartData = [300, 500, 100, 40, 120];\r\n        this.polarAreaLegend = true;\r\n        this.polarAreaChartType = 'polarArea';\r\n    }\r\n    // common events for all type of chart\r\n    ChartJsComponent.prototype.chartClicked = function (e) {\r\n        console.log(e);\r\n    };\r\n    ChartJsComponent.prototype.chartHovered = function (e) {\r\n        console.log(e);\r\n    };\r\n    ChartJsComponent = __decorate([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"])({\r\n            selector: 'app-chart-js',\r\n            template: __webpack_require__(920),\r\n            styles: [__webpack_require__(894)]\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], ChartJsComponent);\r\n    return ChartJsComponent;\r\n}());\r\n\n\n/***/ },\n\n/***/ 810:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_router__ = __webpack_require__(388);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__chart_js_component__ = __webpack_require__(743);\n\r\n\r\nvar chartJsRoutes = [\r\n    { path: '', component: __WEBPACK_IMPORTED_MODULE_1__chart_js_component__[\"a\" /* ChartJsComponent */] }\r\n];\r\n/* harmony default export */ exports[\"a\"] = __WEBPACK_IMPORTED_MODULE_0__angular_router__[\"b\" /* RouterModule */].forChild(chartJsRoutes);\r\n\n\n/***/ },\n\n/***/ 869:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar core_1 = __webpack_require__(0);\n/* tslint:disable-next-line */\nvar BaseChartDirective = (function () {\n    function BaseChartDirective(element) {\n        this.labels = [];\n        this.options = {};\n        this.chartClick = new core_1.EventEmitter();\n        this.chartHover = new core_1.EventEmitter();\n        this.initFlag = false;\n        this.element = element;\n    }\n    BaseChartDirective.prototype.ngOnInit = function () {\n        this.ctx = this.element.nativeElement.getContext('2d');\n        this.cvs = this.element.nativeElement;\n        this.initFlag = true;\n        if (this.data || this.datasets) {\n            this.refresh();\n        }\n    };\n    BaseChartDirective.prototype.ngOnChanges = function (changes) {\n        if (this.initFlag) {\n            // Check if the changes are in the data or datasets\n            if (changes.hasOwnProperty('data') || changes.hasOwnProperty('datasets')) {\n                this.chart.data.datasets = this.getDatasets();\n                if (changes.hasOwnProperty('labels')) {\n                    this.chart.data.labels = this.labels;\n                }\n                this.chart.update();\n            }\n            else {\n                this.refresh();\n            }\n        }\n    };\n    BaseChartDirective.prototype.ngOnDestroy = function () {\n        if (this.chart) {\n            this.chart.destroy();\n            this.chart = void 0;\n        }\n    };\n    BaseChartDirective.prototype.getChartBuilder = function (ctx /*, data:Array<any>, options:any*/) {\n        var _this = this;\n        var datasets = this.getDatasets();\n        var options = Object.assign({}, this.options);\n        if (this.legend === false) {\n            options.legend = { display: false };\n        }\n        // hock for onHover and onClick events\n        options.hover = options.hover || {};\n        if (!options.hover.onHover) {\n            options.hover.onHover = function (active) {\n                if (active && !active.length) {\n                    return;\n                }\n                _this.chartHover.emit({ active: active });\n            };\n        }\n        if (!options.onClick) {\n            options.onClick = function (event, active) {\n                _this.chartClick.emit({ event: event, active: active });\n            };\n        }\n        var opts = {\n            type: this.chartType,\n            data: {\n                labels: this.labels,\n                datasets: datasets\n            },\n            options: options\n        };\n        if (typeof Chart === 'undefined') {\n            throw new Error('ng2-charts configuration issue: Embedding Chart.js lib is mandatory');\n        }\n        return new Chart(ctx, opts);\n    };\n    BaseChartDirective.prototype.getDatasets = function () {\n        var _this = this;\n        var datasets = void 0;\n        // in case if datasets is not provided, but data is present\n        if (!this.datasets || !this.datasets.length && (this.data && this.data.length)) {\n            if (Array.isArray(this.data[0])) {\n                datasets = this.data.map(function (data, index) {\n                    return { data: data, label: _this.labels[index] || \"Label \" + index };\n                });\n            }\n            else {\n                datasets = [{ data: this.data, label: \"Label 0\" }];\n            }\n        }\n        if (this.datasets && this.datasets.length ||\n            (datasets && datasets.length)) {\n            datasets = (this.datasets || datasets)\n                .map(function (elm, index) {\n                var newElm = Object.assign({}, elm);\n                if (_this.colors && _this.colors.length) {\n                    Object.assign(newElm, _this.colors[index]);\n                }\n                else {\n                    Object.assign(newElm, getColors(_this.chartType, index, newElm.data.length));\n                }\n                return newElm;\n            });\n        }\n        if (!datasets) {\n            throw new Error(\"ng-charts configuration error, \\n      data or datasets field are required to render char \" + this.chartType);\n        }\n        return datasets;\n    };\n    BaseChartDirective.prototype.refresh = function () {\n        // if (this.options && this.options.responsive) {\n        //   setTimeout(() => this.refresh(), 50);\n        // }\n        // todo: remove this line, it is producing flickering\n        this.ngOnDestroy();\n        this.chart = this.getChartBuilder(this.ctx /*, data, this.options*/);\n    };\n    BaseChartDirective.defaultColors = [\n        [255, 99, 132],\n        [54, 162, 235],\n        [255, 206, 86],\n        [231, 233, 237],\n        [75, 192, 192],\n        [151, 187, 205],\n        [220, 220, 220],\n        [247, 70, 74],\n        [70, 191, 189],\n        [253, 180, 92],\n        [148, 159, 177],\n        [77, 83, 96]\n    ];\n    BaseChartDirective.decorators = [\n        { type: core_1.Directive, args: [{ selector: 'canvas[baseChart]' },] },\n    ];\n    /** @nocollapse */\n    BaseChartDirective.ctorParameters = [\n        { type: core_1.ElementRef, },\n    ];\n    BaseChartDirective.propDecorators = {\n        'data': [{ type: core_1.Input },],\n        'datasets': [{ type: core_1.Input },],\n        'labels': [{ type: core_1.Input },],\n        'options': [{ type: core_1.Input },],\n        'chartType': [{ type: core_1.Input },],\n        'colors': [{ type: core_1.Input },],\n        'legend': [{ type: core_1.Input },],\n        'chartClick': [{ type: core_1.Output },],\n        'chartHover': [{ type: core_1.Output },],\n    };\n    return BaseChartDirective;\n}());\nexports.BaseChartDirective = BaseChartDirective;\nfunction rgba(colour, alpha) {\n    return 'rgba(' + colour.concat(alpha).join(',') + ')';\n}\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfunction formatLineColor(colors) {\n    return {\n        backgroundColor: rgba(colors, 0.4),\n        borderColor: rgba(colors, 1),\n        pointBackgroundColor: rgba(colors, 1),\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: rgba(colors, 0.8)\n    };\n}\nfunction formatBarColor(colors) {\n    return {\n        backgroundColor: rgba(colors, 0.6),\n        borderColor: rgba(colors, 1),\n        hoverBackgroundColor: rgba(colors, 0.8),\n        hoverBorderColor: rgba(colors, 1)\n    };\n}\nfunction formatPieColors(colors) {\n    return {\n        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),\n        borderColor: colors.map(function () { return '#fff'; }),\n        pointBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),\n        pointBorderColor: colors.map(function () { return '#fff'; }),\n        pointHoverBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),\n        pointHoverBorderColor: colors.map(function (color) { return rgba(color, 1); })\n    };\n}\nfunction formatPolarAreaColors(colors) {\n    return {\n        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),\n        borderColor: colors.map(function (color) { return rgba(color, 1); }),\n        hoverBackgroundColor: colors.map(function (color) { return rgba(color, 0.8); }),\n        hoverBorderColor: colors.map(function (color) { return rgba(color, 1); })\n    };\n}\nfunction getRandomColor() {\n    return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n}\n/**\n * Generate colors for line|bar charts\n * @param index\n * @returns {number[]|Color}\n */\nfunction generateColor(index) {\n    return BaseChartDirective.defaultColors[index] || getRandomColor();\n}\n/**\n * Generate colors for pie|doughnut charts\n * @param count\n * @returns {Colors}\n */\nfunction generateColors(count) {\n    var colorsArr = new Array(count);\n    for (var i = 0; i < count; i++) {\n        colorsArr[i] = BaseChartDirective.defaultColors[i] || getRandomColor();\n    }\n    return colorsArr;\n}\n/**\n * Generate colors by chart type\n * @param chartType\n * @param index\n * @param count\n * @returns {Color}\n */\nfunction getColors(chartType, index, count) {\n    if (chartType === 'pie' || chartType === 'doughnut') {\n        return formatPieColors(generateColors(count));\n    }\n    if (chartType === 'polarArea') {\n        return formatPolarAreaColors(generateColors(count));\n    }\n    if (chartType === 'line' || chartType === 'radar') {\n        return formatLineColor(generateColor(index));\n    }\n    if (chartType === 'bar' || chartType === 'horizontalBar') {\n        return formatBarColor(generateColor(index));\n    }\n    return generateColor(index);\n}\nvar ChartsModule = (function () {\n    function ChartsModule() {\n    }\n    ChartsModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    declarations: [\n                        BaseChartDirective\n                    ],\n                    exports: [\n                        BaseChartDirective\n                    ],\n                    imports: []\n                },] },\n    ];\n    /** @nocollapse */\n    ChartsModule.ctorParameters = [];\n    return ChartsModule;\n}());\nexports.ChartsModule = ChartsModule;\n\n\n/***/ },\n\n/***/ 870:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(__webpack_require__(869));\n\n\n/***/ },\n\n/***/ 894:\n/***/ function(module, exports) {\n\nmodule.exports = \"\"\n\n/***/ },\n\n/***/ 920:\n/***/ function(module, exports) {\n\nmodule.exports = \"<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-6\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-header card-primary card-inverse\\\">\\n\\t\\t\\t\\t<h3 class=\\\"card-title\\\">Line Chart</h3>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t<canvas baseChart\\n\\t\\t\\t\\t\\t[datasets]=\\\"lineChartData\\\"\\n\\t\\t\\t\\t\\t[labels]=\\\"lineChartLabels\\\"\\n\\t\\t\\t\\t\\t[options]=\\\"lineChartOptions\\\"\\n\\t\\t\\t\\t\\t[legend]=\\\"lineChartLegend\\\"\\n\\t\\t\\t\\t\\t[chartType]=\\\"lineChartType\\\"\\n\\t\\t\\t\\t\\t(chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t\\t\\t\\t(chartClick)=\\\"chartClicked($event)\\\"\\n\\t\\t\\t\\t\\theight=\\\"140\\\" >\\n\\t\\t\\t\\t</canvas>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-header card-primary card-inverse\\\">\\n\\t\\t\\t\\t<h3 class=\\\"card-title\\\">Bar Chart</h3>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t<canvas baseChart\\n\\t\\t            [datasets]=\\\"barChartData\\\"\\n\\t\\t            [labels]=\\\"barChartLabels\\\"\\n\\t\\t            [options]=\\\"barChartOptions\\\"\\n\\t\\t            [legend]=\\\"barChartLegend\\\"\\n\\t\\t            [chartType]=\\\"barChartType\\\"\\n\\t\\t            (chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t            (chartClick)=\\\"chartClicked($event)\\\"\\n\\t\\t            height=\\\"140\\\" >\\n\\t\\t        </canvas>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-6\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-header card-primary card-inverse\\\">\\n\\t\\t\\t\\t<h3 class=\\\"card-title\\\">Doughnut Chart</h3>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t<canvas baseChart\\n\\t\\t\\t\\t\\t[data]=\\\"doughnutChartData\\\"\\n\\t\\t\\t\\t\\t[labels]=\\\"doughnutChartLabels\\\"\\n\\t\\t\\t\\t\\t[chartType]=\\\"doughnutChartType\\\"\\n\\t\\t\\t\\t\\t(chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t\\t\\t\\t(chartClick)=\\\"chartClicked($event)\\\" \\n\\t\\t\\t\\t\\theight=\\\"140\\\" >\\n\\t\\t\\t\\t</canvas>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-header card-primary card-inverse\\\">\\n\\t\\t\\t\\t<h3 class=\\\"card-title\\\">Radar Chart</h3>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t<canvas baseChart\\n\\t\\t\\t\\t\\t[datasets]=\\\"radarChartData\\\"\\n\\t\\t\\t\\t\\t[labels]=\\\"radarChartLabels\\\"\\n\\t\\t\\t\\t\\t[chartType]=\\\"radarChartType\\\"\\n\\t\\t\\t\\t\\t(chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t\\t\\t\\t(chartClick)=\\\"chartClicked($event)\\\"\\n\\t\\t\\t\\t\\theight=\\\"140\\\" >\\n\\t\\t\\t\\t</canvas>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-6\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-header card-primary card-inverse\\\">\\n\\t\\t\\t\\t<h3 class=\\\"card-title\\\">Pie Chart</h3>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t<canvas baseChart\\n\\t\\t\\t\\t\\t[data]=\\\"pieChartData\\\"\\n\\t\\t\\t\\t\\t[labels]=\\\"pieChartLabels\\\"\\n\\t\\t\\t\\t\\t[chartType]=\\\"pieChartType\\\"\\n\\t\\t\\t\\t\\t(chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t\\t\\t\\t(chartClick)=\\\"chartClicked($event)\\\"\\n\\t\\t\\t\\t\\theight=\\\"140\\\" >\\n\\t\\t\\t\\t</canvas>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-header card-primary card-inverse\\\">\\n\\t\\t\\t\\t<h3 class=\\\"card-title\\\">Polar Area Chart</h3>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t<canvas baseChart\\n\\t\\t\\t\\t\\t[data]=\\\"polarAreaChartData\\\"\\n\\t\\t\\t\\t\\t[labels]=\\\"polarAreaChartLabels\\\"\\n\\t\\t\\t\\t\\t[legend]=\\\"polarAreaLegend\\\"\\n\\t\\t\\t\\t\\t[chartType]=\\\"polarAreaChartType\\\"\\n\\t\\t\\t\\t\\t(chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t\\t\\t\\t(chartClick)=\\\"chartClicked($event)\\\"\\n\\t\\t\\t\\t\\theight=\\\"140\\\" >\\n\\t\\t\\t\\t</canvas>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n    </div>\\n</div>\"\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// 3.9dc8e667d2e3ab143ccb.chunk.js","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChartsModule as Chart} from 'ng2-charts/ng2-charts';\nimport { ChartJsComponent } from './chart-js.component';\nimport chartJsRoutes from './chart-js.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    Chart,\n    chartJsRoutes\n  ],\n  declarations: [ChartJsComponent]\n})\nexport default class ChartJsModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/angular2-template-loader!C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/charts/chart-js/chart-js.module.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-chart-js',\n  template: require('./chart-js.component.html'),\n  styles: [require('./chart-js.component.scss')]\n})\n\nexport class ChartJsComponent {\n\t// lineChart\n    public lineChartData: Array<any> = [\n        {data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A'},\n        {data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B'},\n        {data: [18, 48, 77, 9, 100, 27, 40], label: 'Series C'}\n    ];\n    public lineChartLabels: Array<any> = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n    public lineChartOptions: any = {\n        animation: false,\n        responsive: true\n    };\n    public lineChartLegend: boolean = true;\n    public lineChartType: string = 'line';\n\n    // bar chart\n    public barChartOptions: any = {\n        scaleShowVerticalLines: false,\n        responsive: true\n    };\n    public barChartLabels: string[] = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n    public barChartType: string = 'bar';\n    public barChartLegend: boolean = true;\n    public barChartData: any[] = [\n        {data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A'},\n        {data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B'}\n    ];\n\n    // Doughnut chart\n    public doughnutChartLabels: string[] = ['Download Sales', 'In-Store Sales', 'Mail-Order Sales'];\n    public doughnutChartData: number[] = [350, 450, 100];\n    public doughnutChartType: string = 'doughnut';\n\n    // Radar\n    public radarChartLabels: string[] = ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'];\n    public radarChartData: any = [\n        {data: [65, 59, 90, 81, 56, 55, 40], label: 'Series A'},\n        {data: [28, 48, 40, 19, 96, 27, 100], label: 'Series B'}\n    ];\n    public radarChartType: string = 'radar';\n\n    // Pie\n    public pieChartLabels: string[] = ['Download Sales', 'In-Store Sales', 'Mail Sales'];\n    public pieChartData: number[] = [300, 500, 100];\n    public pieChartType: string = 'pie';\n\n    // PolarArea\n    public polarAreaChartLabels: string[] = ['Download Sales', 'In-Store Sales', 'Mail Sales', 'Telesales', 'Corporate Sales'];\n    public polarAreaChartData: number[] = [300, 500, 100, 40, 120];\n    public polarAreaLegend: boolean = true;\n    public polarAreaChartType: string = 'polarArea';\n\n    // common events for all type of chart\n    public chartClicked(e: any): void {\n        console.log(e);\n    }\n\n    public chartHovered(e: any): void {\n        console.log(e);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/angular2-template-loader!C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/charts/chart-js/chart-js.component.ts","import { Route, RouterModule } from '@angular/router';\nimport { ChartJsComponent } from './chart-js.component';\n\nconst chartJsRoutes: Route[] = [\n    { path: '', component: ChartJsComponent }\n];\n\nexport default RouterModule.forChild(chartJsRoutes);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/angular2-template-loader!C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/charts/chart-js/chart-js.routes.ts","\"use strict\";\nvar core_1 = require('@angular/core');\n/* tslint:disable-next-line */\nvar BaseChartDirective = (function () {\n    function BaseChartDirective(element) {\n        this.labels = [];\n        this.options = {};\n        this.chartClick = new core_1.EventEmitter();\n        this.chartHover = new core_1.EventEmitter();\n        this.initFlag = false;\n        this.element = element;\n    }\n    BaseChartDirective.prototype.ngOnInit = function () {\n        this.ctx = this.element.nativeElement.getContext('2d');\n        this.cvs = this.element.nativeElement;\n        this.initFlag = true;\n        if (this.data || this.datasets) {\n            this.refresh();\n        }\n    };\n    BaseChartDirective.prototype.ngOnChanges = function (changes) {\n        if (this.initFlag) {\n            // Check if the changes are in the data or datasets\n            if (changes.hasOwnProperty('data') || changes.hasOwnProperty('datasets')) {\n                this.chart.data.datasets = this.getDatasets();\n                if (changes.hasOwnProperty('labels')) {\n                    this.chart.data.labels = this.labels;\n                }\n                this.chart.update();\n            }\n            else {\n                this.refresh();\n            }\n        }\n    };\n    BaseChartDirective.prototype.ngOnDestroy = function () {\n        if (this.chart) {\n            this.chart.destroy();\n            this.chart = void 0;\n        }\n    };\n    BaseChartDirective.prototype.getChartBuilder = function (ctx /*, data:Array<any>, options:any*/) {\n        var _this = this;\n        var datasets = this.getDatasets();\n        var options = Object.assign({}, this.options);\n        if (this.legend === false) {\n            options.legend = { display: false };\n        }\n        // hock for onHover and onClick events\n        options.hover = options.hover || {};\n        if (!options.hover.onHover) {\n            options.hover.onHover = function (active) {\n                if (active && !active.length) {\n                    return;\n                }\n                _this.chartHover.emit({ active: active });\n            };\n        }\n        if (!options.onClick) {\n            options.onClick = function (event, active) {\n                _this.chartClick.emit({ event: event, active: active });\n            };\n        }\n        var opts = {\n            type: this.chartType,\n            data: {\n                labels: this.labels,\n                datasets: datasets\n            },\n            options: options\n        };\n        if (typeof Chart === 'undefined') {\n            throw new Error('ng2-charts configuration issue: Embedding Chart.js lib is mandatory');\n        }\n        return new Chart(ctx, opts);\n    };\n    BaseChartDirective.prototype.getDatasets = function () {\n        var _this = this;\n        var datasets = void 0;\n        // in case if datasets is not provided, but data is present\n        if (!this.datasets || !this.datasets.length && (this.data && this.data.length)) {\n            if (Array.isArray(this.data[0])) {\n                datasets = this.data.map(function (data, index) {\n                    return { data: data, label: _this.labels[index] || \"Label \" + index };\n                });\n            }\n            else {\n                datasets = [{ data: this.data, label: \"Label 0\" }];\n            }\n        }\n        if (this.datasets && this.datasets.length ||\n            (datasets && datasets.length)) {\n            datasets = (this.datasets || datasets)\n                .map(function (elm, index) {\n                var newElm = Object.assign({}, elm);\n                if (_this.colors && _this.colors.length) {\n                    Object.assign(newElm, _this.colors[index]);\n                }\n                else {\n                    Object.assign(newElm, getColors(_this.chartType, index, newElm.data.length));\n                }\n                return newElm;\n            });\n        }\n        if (!datasets) {\n            throw new Error(\"ng-charts configuration error, \\n      data or datasets field are required to render char \" + this.chartType);\n        }\n        return datasets;\n    };\n    BaseChartDirective.prototype.refresh = function () {\n        // if (this.options && this.options.responsive) {\n        //   setTimeout(() => this.refresh(), 50);\n        // }\n        // todo: remove this line, it is producing flickering\n        this.ngOnDestroy();\n        this.chart = this.getChartBuilder(this.ctx /*, data, this.options*/);\n    };\n    BaseChartDirective.defaultColors = [\n        [255, 99, 132],\n        [54, 162, 235],\n        [255, 206, 86],\n        [231, 233, 237],\n        [75, 192, 192],\n        [151, 187, 205],\n        [220, 220, 220],\n        [247, 70, 74],\n        [70, 191, 189],\n        [253, 180, 92],\n        [148, 159, 177],\n        [77, 83, 96]\n    ];\n    BaseChartDirective.decorators = [\n        { type: core_1.Directive, args: [{ selector: 'canvas[baseChart]' },] },\n    ];\n    /** @nocollapse */\n    BaseChartDirective.ctorParameters = [\n        { type: core_1.ElementRef, },\n    ];\n    BaseChartDirective.propDecorators = {\n        'data': [{ type: core_1.Input },],\n        'datasets': [{ type: core_1.Input },],\n        'labels': [{ type: core_1.Input },],\n        'options': [{ type: core_1.Input },],\n        'chartType': [{ type: core_1.Input },],\n        'colors': [{ type: core_1.Input },],\n        'legend': [{ type: core_1.Input },],\n        'chartClick': [{ type: core_1.Output },],\n        'chartHover': [{ type: core_1.Output },],\n    };\n    return BaseChartDirective;\n}());\nexports.BaseChartDirective = BaseChartDirective;\nfunction rgba(colour, alpha) {\n    return 'rgba(' + colour.concat(alpha).join(',') + ')';\n}\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfunction formatLineColor(colors) {\n    return {\n        backgroundColor: rgba(colors, 0.4),\n        borderColor: rgba(colors, 1),\n        pointBackgroundColor: rgba(colors, 1),\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: rgba(colors, 0.8)\n    };\n}\nfunction formatBarColor(colors) {\n    return {\n        backgroundColor: rgba(colors, 0.6),\n        borderColor: rgba(colors, 1),\n        hoverBackgroundColor: rgba(colors, 0.8),\n        hoverBorderColor: rgba(colors, 1)\n    };\n}\nfunction formatPieColors(colors) {\n    return {\n        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),\n        borderColor: colors.map(function () { return '#fff'; }),\n        pointBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),\n        pointBorderColor: colors.map(function () { return '#fff'; }),\n        pointHoverBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),\n        pointHoverBorderColor: colors.map(function (color) { return rgba(color, 1); })\n    };\n}\nfunction formatPolarAreaColors(colors) {\n    return {\n        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),\n        borderColor: colors.map(function (color) { return rgba(color, 1); }),\n        hoverBackgroundColor: colors.map(function (color) { return rgba(color, 0.8); }),\n        hoverBorderColor: colors.map(function (color) { return rgba(color, 1); })\n    };\n}\nfunction getRandomColor() {\n    return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n}\n/**\n * Generate colors for line|bar charts\n * @param index\n * @returns {number[]|Color}\n */\nfunction generateColor(index) {\n    return BaseChartDirective.defaultColors[index] || getRandomColor();\n}\n/**\n * Generate colors for pie|doughnut charts\n * @param count\n * @returns {Colors}\n */\nfunction generateColors(count) {\n    var colorsArr = new Array(count);\n    for (var i = 0; i < count; i++) {\n        colorsArr[i] = BaseChartDirective.defaultColors[i] || getRandomColor();\n    }\n    return colorsArr;\n}\n/**\n * Generate colors by chart type\n * @param chartType\n * @param index\n * @param count\n * @returns {Color}\n */\nfunction getColors(chartType, index, count) {\n    if (chartType === 'pie' || chartType === 'doughnut') {\n        return formatPieColors(generateColors(count));\n    }\n    if (chartType === 'polarArea') {\n        return formatPolarAreaColors(generateColors(count));\n    }\n    if (chartType === 'line' || chartType === 'radar') {\n        return formatLineColor(generateColor(index));\n    }\n    if (chartType === 'bar' || chartType === 'horizontalBar') {\n        return formatBarColor(generateColor(index));\n    }\n    return generateColor(index);\n}\nvar ChartsModule = (function () {\n    function ChartsModule() {\n    }\n    ChartsModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    declarations: [\n                        BaseChartDirective\n                    ],\n                    exports: [\n                        BaseChartDirective\n                    ],\n                    imports: []\n                },] },\n    ];\n    /** @nocollapse */\n    ChartsModule.ctorParameters = [];\n    return ChartsModule;\n}());\nexports.ChartsModule = ChartsModule;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/ng2-charts/components/charts/charts.js\n// module id = 869\n// module chunks = 0 3","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./components/charts/charts'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/ng2-charts/ng2-charts.js\n// module id = 870\n// module chunks = 0 3","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/charts/chart-js/chart-js.component.scss\n// module id = 894\n// module chunks = 0 3","module.exports = \"<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-6\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-header card-primary card-inverse\\\">\\n\\t\\t\\t\\t<h3 class=\\\"card-title\\\">Line Chart</h3>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t<canvas baseChart\\n\\t\\t\\t\\t\\t[datasets]=\\\"lineChartData\\\"\\n\\t\\t\\t\\t\\t[labels]=\\\"lineChartLabels\\\"\\n\\t\\t\\t\\t\\t[options]=\\\"lineChartOptions\\\"\\n\\t\\t\\t\\t\\t[legend]=\\\"lineChartLegend\\\"\\n\\t\\t\\t\\t\\t[chartType]=\\\"lineChartType\\\"\\n\\t\\t\\t\\t\\t(chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t\\t\\t\\t(chartClick)=\\\"chartClicked($event)\\\"\\n\\t\\t\\t\\t\\theight=\\\"140\\\" >\\n\\t\\t\\t\\t</canvas>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-header card-primary card-inverse\\\">\\n\\t\\t\\t\\t<h3 class=\\\"card-title\\\">Bar Chart</h3>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t<canvas baseChart\\n\\t\\t            [datasets]=\\\"barChartData\\\"\\n\\t\\t            [labels]=\\\"barChartLabels\\\"\\n\\t\\t            [options]=\\\"barChartOptions\\\"\\n\\t\\t            [legend]=\\\"barChartLegend\\\"\\n\\t\\t            [chartType]=\\\"barChartType\\\"\\n\\t\\t            (chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t            (chartClick)=\\\"chartClicked($event)\\\"\\n\\t\\t            height=\\\"140\\\" >\\n\\t\\t        </canvas>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-6\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-header card-primary card-inverse\\\">\\n\\t\\t\\t\\t<h3 class=\\\"card-title\\\">Doughnut Chart</h3>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t<canvas baseChart\\n\\t\\t\\t\\t\\t[data]=\\\"doughnutChartData\\\"\\n\\t\\t\\t\\t\\t[labels]=\\\"doughnutChartLabels\\\"\\n\\t\\t\\t\\t\\t[chartType]=\\\"doughnutChartType\\\"\\n\\t\\t\\t\\t\\t(chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t\\t\\t\\t(chartClick)=\\\"chartClicked($event)\\\" \\n\\t\\t\\t\\t\\theight=\\\"140\\\" >\\n\\t\\t\\t\\t</canvas>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-header card-primary card-inverse\\\">\\n\\t\\t\\t\\t<h3 class=\\\"card-title\\\">Radar Chart</h3>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t<canvas baseChart\\n\\t\\t\\t\\t\\t[datasets]=\\\"radarChartData\\\"\\n\\t\\t\\t\\t\\t[labels]=\\\"radarChartLabels\\\"\\n\\t\\t\\t\\t\\t[chartType]=\\\"radarChartType\\\"\\n\\t\\t\\t\\t\\t(chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t\\t\\t\\t(chartClick)=\\\"chartClicked($event)\\\"\\n\\t\\t\\t\\t\\theight=\\\"140\\\" >\\n\\t\\t\\t\\t</canvas>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-6\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-header card-primary card-inverse\\\">\\n\\t\\t\\t\\t<h3 class=\\\"card-title\\\">Pie Chart</h3>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t<canvas baseChart\\n\\t\\t\\t\\t\\t[data]=\\\"pieChartData\\\"\\n\\t\\t\\t\\t\\t[labels]=\\\"pieChartLabels\\\"\\n\\t\\t\\t\\t\\t[chartType]=\\\"pieChartType\\\"\\n\\t\\t\\t\\t\\t(chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t\\t\\t\\t(chartClick)=\\\"chartClicked($event)\\\"\\n\\t\\t\\t\\t\\theight=\\\"140\\\" >\\n\\t\\t\\t\\t</canvas>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-header card-primary card-inverse\\\">\\n\\t\\t\\t\\t<h3 class=\\\"card-title\\\">Polar Area Chart</h3>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t<canvas baseChart\\n\\t\\t\\t\\t\\t[data]=\\\"polarAreaChartData\\\"\\n\\t\\t\\t\\t\\t[labels]=\\\"polarAreaChartLabels\\\"\\n\\t\\t\\t\\t\\t[legend]=\\\"polarAreaLegend\\\"\\n\\t\\t\\t\\t\\t[chartType]=\\\"polarAreaChartType\\\"\\n\\t\\t\\t\\t\\t(chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t\\t\\t\\t(chartClick)=\\\"chartClicked($event)\\\"\\n\\t\\t\\t\\t\\theight=\\\"140\\\" >\\n\\t\\t\\t\\t</canvas>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/charts/chart-js/chart-js.component.html\n// module id = 920\n// module chunks = 0 3"],"sourceRoot":""}