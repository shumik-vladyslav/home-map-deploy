{"version":3,"sources":["webpack:///2.1440f511e8555aabab75.chunk.js","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/home/home.module.ts?be91","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/d3/d3.js?c0a3","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/c3/c3.js?debe","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/home/home.component.ts?c245","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/widgets/stats/stats.component.ts?f406","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/widgets/todo/todo.component.ts?fedd","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/home/home.routes.ts?dde5","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/widgets/stats/stats.module.ts?9f46","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/widgets/todo/todo.module.ts?f26c","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/home/home.component.scss?f643","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/home/home.component.html?c9a5","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/widgets/stats/stats.component.html?813a","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/widgets/todo/todo.component.html?ef54"],"names":["webpackJsonp","693","module","exports","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0__angular_core__","__WEBPACK_IMPORTED_MODULE_1__angular_common__","__WEBPACK_IMPORTED_MODULE_2__home_component__","__WEBPACK_IMPORTED_MODULE_3__home_routes__","__WEBPACK_IMPORTED_MODULE_4__widgets_index__","__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","HomeModule","imports","declarations","728","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","mid","right","d3_transposeLength","d3_range_integerScale","d3_class","ctor","properties","prototype","value","enumerable","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","source","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","call","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","color","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","p","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","undefined","736","__WEBPACK_AMD_DEFINE_ARRAY__","API","owner","derived","constructor","Chart","config","$$","internal","ChartInternal","loadConfig","beforeInit","init","afterInit","bindThis","fn","argThis","c3_chart_fn","api","getDefaultConfig","cache","axes","Axis","c3_axis","params","axisX","tickOffset","axisY","generateTicks","tickArguments","copyScale","newScale","isCategory","textFormatted","formatted","getSizeFor1Char","tickTextCharSize","box","height","transitionise","withoutTransition","splitTickText","maxWidth","splitted","spaceIndex","subtext","substr","textWidth","sizeFor1Char","tickText","isVertical","tspanDy","counts","tickPosition","tickCentered","textAnchorForText","textTransform","dxForText","yForText","tickLength","tickX","tickY","tspan","tickMultiline","tickWidth","tickTextRotate","tickCulling","withOuterTick","isCentered","tickInterval","getTotalLength","culling","c3_chart_internal_fn","c3_chart_internal_axis_fn","c3","generate","chart","initParams","data_url","convertUrlToData","data_mimeType","data_headers","data_keys","initWithData","data_json","convertJsonToData","data_rows","convertRowsToData","data_columns","convertColumnsToData","clipId","clipIdForXAxis","clipIdForYAxis","clipIdForGrid","clipIdForSubchart","clipPath","getClipPath","clipPathForXAxis","clipPathForYAxis","clipPathForGrid","clipPathForSubchart","dragStart","flowing","cancelClick","mouseover","transiting","generateColor","levelColor","generateLevelColor","dataTimeFormat","data_xLocaltime","axisTimeFormat","axis_x_localtime","defaultAxisTimeFormat","hiddenTargetIds","hiddenLegendIds","focusedTargetIds","defocusedTargetIds","xOrient","axis_rotated","yOrient","axis_y_inner","y2Orient","axis_y2_inner","subXOrient","isLegendRight","legend_position","isLegendInset","isLegendTop","legend_inset_anchor","isLegendLeft","legendStep","legendItemWidth","legendItemHeight","currentMaxTickWidths","rotated_padding_left","rotated_padding_right","axis_x_show","rotated_padding_top","withoutFadeIn","intervalForObserveInserted","subx","initChartElements","initBar","initLine","initArc","initGauge","initText","defs","main","binding","initPie","initBrush","initZoom","bindto","selectChart","observeInserted","convertDataToTargets","data_filter","data_hide","addHiddenTargetIds","mapToIds","legend_hide","addHiddenLegendIds","hasType","legend_show","updateSizes","updateScales","getXDomain","getYDomain","subX","subY","subY2","orgXDomain","zoom_enabled","onmouseover","onmouseout","svg_classname","clipChart","appendClip","clipXAxis","clipYAxis","clipGrid","clipSubchart","updateSvgSize","getTranslate","initSubchart","initTooltip","initLegend","initTitle","CLASS","initRegion","initGrid","grid_lines_front","initGridLines","initEventRect","zoom_privileged","regions","zoomRect","axis_x_extent","getDefaultExtent","updateTargets","updateDimension","oninit","withTransition","withTransform","withUpdateXDomain","withUpdateOrgXDomain","withTransitionForAxis","bindResize","element","smoothLines","el","legendHeight","legend","getLegendHeight","legendWidth","getLegendWidth","legendHeightForBottom","hasArc","hasArcType","xAxisHeight","getHorizontalAxisHeight","subchartHeight","subchart_show","subchart_size_height","currentWidth","getCurrentWidth","currentHeight","getCurrentHeight","getCurrentPaddingTop","getCurrentPaddingRight","getCurrentPaddingBottom","getCurrentPaddingLeft","margin2","margin3","updateSizeForLegend","width2","height2","arcWidth","arcHeight","gauge_fullCircle","getGaugeLabelHeight","updateRadius","radiusExpanded","updateTargetsForText","updateTargetsForBar","updateTargetsForLine","updateTargetsForArc","updateTargetsForSubchart","showTargets","isTargetToShow","transition_duration","options","transitions","withY","withSubchart","withTransitionForExit","withTrimXDomain","withLegend","withEventRect","withDimension","withUpdateXAxis","drawArea","drawBar","drawLine","xForText","durationForExit","durationForAxis","waitForDraw","flow","intervalForCulling","xDomainForZoom","areaIndices","getShapeIndices","isAreaType","barIndices","isBarType","lineIndices","isLineType","hideAxis","targetsToShow","filterTargetsToShow","xv","getOption","generateTransitions","updateLegend","isCategorized","updateXDomain","axis_x_tick_values","updateXAxisTickValues","xAxis","subXAxis","zoom_rescale","orgDomain","axis_y_tick_values","axis_y_tick_count","yAxis","generateTickValues","axis_y2_tick_values","axis_y2_tick_count","y2Axis","updateLabels","axis_x_tick_culling","axis_x_tick_culling_max","generateDrawArea","generateDrawBar","generateDrawLine","generateXYForText","updateXgridFocus","data_empty_label_text","updateGrid","updateRegion","updateBar","updateLine","updateArea","updateCircle","hasDataLabel","updateText","redrawTitle","redrawArc","redrawSubchart","selectedCircles","interaction_enabled","redrawEventRect","updateZoom","updateCircleY","circleY","circleX","generateFlow","isTabVisible","transitionsToWait","redrawBar","redrawLine","redrawArea","redrawCircle","redrawText","redrawRegion","redrawGrid","generateWait","onrendered","updateAndRedraw","withTransitionForTransform","transformAll","redrawWithoutRescale","isTimeSeries","axis_x_type","isCustomX","data_x","notEmpty","data_xs","isTimeSeriesY","axis_y_type","asHalfPixel","initialOpacity","initialOpacityForCircle","opacityForCircle","opacity","point_show","isValue","isScatterType","opacityForText","xx","parseDate","axis_x_categories","yv","yScale","subxx","transformMain","axisY2","chartArcs","transformContext","transformLegend","getXAxisClipX","getXAxisClipY","getXAxisClipWidth","getXAxisClipHeight","getYAxisClipX","getYAxisClipY","getYAxisClipWidth","getYAxisClipHeight","withoutAxis","observer","MutationObserver","console","mutations","mutation","previousSibling","disconnect","setInterval","clearInterval","observe","attributes","childList","characterData","resizeFunction","generateResize","onresize","resize_auto","resizeTimeout","onresized","attachEvent","wrapper","callResizeFunctions","resizeFunctions","endall","done","parsedDate","data_xFormat","hidden","mozHidden","msHidden","webkitHidden","size_width","size_height","padding_left","padding_right","padding_top","padding_bottom","zoom_extent","zoom_onzoom","zoom_onzoomstart","zoom_onzoomend","zoom_x_min","zoom_x_max","interaction_brighten","data_xSort","data_idConverter","data_names","data_classes","data_groups","data_axes","data_type","data_types","data_labels","data_order","data_regions","data_color","data_colors","data_selection_enabled","data_selection_grouped","data_selection_isselectable","data_selection_multiple","data_selection_draggable","data_onclick","data_onmouseover","data_onmouseout","data_onselected","data_onunselected","subchart_axis_x_show","subchart_onbrush","color_pattern","color_threshold","legend_inset_x","legend_inset_y","legend_inset_step","legend_item_onclick","legend_item_onmouseover","legend_item_onmouseout","legend_equally","legend_padding","legend_item_tile_width","legend_item_tile_height","axis_x_tick_centered","axis_x_tick_format","axis_x_tick_count","axis_x_tick_fit","axis_x_tick_rotate","axis_x_tick_outer","axis_x_tick_multiline","axis_x_tick_width","axis_x_max","axis_x_min","axis_x_padding","axis_x_height","axis_x_label","axis_y_show","axis_y_max","axis_y_min","axis_y_inverted","axis_y_center","axis_y_label","axis_y_tick_format","axis_y_tick_outer","axis_y_tick_rotate","axis_y_tick_time_value","axis_y_tick_time_interval","axis_y_padding","axis_y_default","axis_y2_show","axis_y2_max","axis_y2_min","axis_y2_inverted","axis_y2_center","axis_y2_label","axis_y2_tick_format","axis_y2_tick_outer","axis_y2_padding","axis_y2_default","grid_x_show","grid_x_type","grid_x_lines","grid_y_show","grid_y_lines","grid_y_ticks","grid_focus_show","point_r","point_sensitivity","point_focus_expand_enabled","point_focus_expand_r","point_select_r","line_connectNull","line_step_type","bar_width","bar_width_ratio","bar_width_max","bar_zerobased","area_zerobased","area_above","pie_label_show","pie_label_format","pie_label_threshold","pie_label_ratio","pie_expand","pie_expand_duration","gauge_label_show","gauge_label_format","gauge_min","gauge_max","gauge_startingAngle","gauge_units","gauge_width","gauge_expand","gauge_expand_duration","donut_label_show","donut_label_format","donut_label_threshold","donut_label_ratio","donut_width","donut_title","donut_expand","donut_expand_duration","spline_interpolation_type","tooltip_show","tooltip_grouped","tooltip_format_title","tooltip_format_name","tooltip_format_value","tooltip_position","tooltip_contents","defaultTitleFormat","defaultValueFormat","getTooltipContent","tooltip_init_show","tooltip_init_x","tooltip_init_position","tooltip_onshow","tooltip_onhide","title_text","title_padding","title_position","additionalConfig","read","this_config","isDefined","getScale","forTimeseries","getX","_scale","getY","getYScale","getId","getSubYScale","forInit","subXMin","subXMax","subYMin","subYMax","xAxisTickFormat","getXAxisTickFormat","xAxisTickValues","getXAxisTickValues","yAxisTickValues","getYAxisTickValues","y2AxisTickValues","getY2AxisTickValues","getXAxis","getYAxis","updateArc","getYDomainMin","baseId","idsInGroup","hasNegativeValue","ids","getValuesAsIdKeyed","hasNegativeValueInTargets","getYDomainMax","hasPositiveValue","hasPositiveValueInTargets","axisId","xDomain","domainLength","yDomainAbs","lengths","diff","isAllPositive","isAllNegative","targetsByAxisId","yTargets","filterByXDomain","yDomainMin","yDomainMax","isZeroBased","isInverted","showHorizontalDataLabel","showVerticalDataLabel","getDataLabelLength","diffDomain","convertPixelsToAxisPadding","getPadding","getXDomainMin","getXDomainMax","getXDomainPadding","maxDataCount","paddingLeft","paddingRight","getMaxDataCount","firstX","lastX","withTrim","updateScaleExtent","trimXDomain","zoomDomain","getZoomDomain","isX","hasValue","isNotX","getXKey","getXValuesOfXKey","xValues","getIndexByX","filterByX","getXValue","getOtherTargetXs","idsForX","getOtherTargetX","addXs","hasMultipleX","isMultipleX","addName","getValueOnIndex","valueOnIndex","updateTargetX","generateTargetX","updateTargetXs","rawX","cloneTarget","id_org","updateXs","getPrevX","getNextX","getMaxDataCountTarget","maxTarget","getEdgeX","mapToTargetIds","hasTarget","targetId","isLegendToShow","mapTargetsToUniqueXs","targetIds","removeHiddenTargetIds","removeHiddenLegendIds","checkValueInTargets","checker","isOrderDesc","isOrderAsc","orderTargets","orderAsc","orderDesc","reducer","t1Sum","t2Sum","isFunction","filterRemoveNull","paddingCoef","dataLabelFormat","isNoneArc","isArc","findSameXOfValues","targetX","sames","findClosestFromTargets","pos","findClosest","closest","minDist","shape","bars","getTargetSelectorSuffix","bar","isWithinBar","dist","xIndex","yIndex","convertValuesToStep","converted","updateDataAttributes","attrs","req","responseURL","statusText","convertTsvToData","convertCsvToData","convertXsvToData","xsv","parser","targetKeys","new_rows","new_row","findValueInJson","isUndefined","pathArray","columns","appendXs","xKey","convertedId","v1","v2","setTargetType","addCache","types","loadFromArgs","unload","selectorTarget","legendItem","categoryName","eventRects","eventRectUpdate","maxDataCountTarget","eventRectsMultiple","eventRectsSingle","eventRect","generateEventRectsForMultipleXs","updateEventRect","generateEventRectsForSingleX","rectW","rectX","getEventRectWidth","prevX","nextX","thisX","classEvent","eventRectEnter","expandCircles","expandBars","hideXGridFocus","hideTooltip","unexpandCircles","unexpandBars","selectedData","isStepType","showTooltip","showXGridFocus","EXPANDED","isWithinShape","toggleShape","dragend","mouseout","sameXData","shapes","dispatchEvent","createEvent","initMouseEvent","getParentWidth","getParentHeight","title","getTitlePadding","withoutRecompute","ceil10","getAxisWidthByAxisId","getYAxisLabelPosition","isOuter","defaultPadding","legendWidthOnRight","getY2AxisLabelPosition","getParentRectValue","tagName","offsetWidth","getSvgLeft","hasLeftAxisRect","leftAxisClass","leftAxis","svgRect","chartRect","svgLeft","getLabelPositionById","getMaxTickWidth","isInner","typeFilter","indices","__max__","getShapeX","targetsNum","isSub","getShapeY","getShapeOffset","isWithin","nodeName","isWithinStep","isWithinCircle","pointSelectR","getInterpolate","interpolation","isInterpolationType","isSplineType","chartLines","mainLineUpdate","mainLineEnter","classChartLine","classLines","classAreas","classCircles","classFocus","chartLine","generateClass","selectedCircle","mainLine","lineData","classLine","getPoints","generateGetLinePoints","yScaleGetter","xValue","yValue","lineWithRegions","lineTargetsNum","lineOffset","posX","posY","_regions","isWithinRegions","generateM","sWithRegion","xp","yp","dd","diffx2","prev","xOffset","x_diff","xv0","xv1","mainArea","areas","classArea","orgAreaOpacity","generateGetAreaPoints","value0","getAreaBaseValue","value1","areaTargetsNum","areaOffset","mainCircle","circles","lineOrScatterData","classCircle","pointR","getCircles","pointExpandedR","d3_this","chartBars","mainBarUpdate","mainBarEnter","classChartBar","classBars","chartBar","barData","classBar","mainBar","getBarW","barTargetsNum","getBars","generateGetBarPoints","indexX","indexY","barW","barX","barY","barOffset","seg0","pathSegList","getItem","seg1","chartTexts","mainText","mainTextUpdate","mainTextEnter","classChartText","classTexts","chartText","barOrLineData","classText","texts","forFlow","getTextRect","cls","dummy","font","forX","getAreaPoints","getBarPoints","getLinePoints","getter","getXForText","getYForText","textElement","xPos","yPos","isSafari","isChrome","isString","isPieType","isGaugeType","isDonutType","isArcType","arcData","grid","xgrids","ygrids","xgridFocus","xgrid","gridLines","xgridLines","ygridLines","updateXGrid","withoutUpdate","xgridData","generateGridData","xgridAttr","updateYGrid","gridValues","ygrid","gridTextAnchor","gridTextDx","xGridTextX","yGridTextX","xgridLine","ygridLine","dataToShow","focusEl","firstYear","lastYear","gridData","tickNum","getGridFilterToRemove","found","param","removeGridLines","toRemove","toShow","tooltip","tooltipContainer","getYFormat","bgcolor","titleFormat","nameFormat","valueFormat","sanitise","tooltipName","tooltipPosition","tWidth","tHeight","tooltipLeft","tooltipRight","tooltipTop","chartRight","forArc","positionFunction","legendItemTextBox","legendHasRendered","updateLegendWithDefaults","insetLegendPosition","updateLegendStep","updateLegendItemWidth","updateLegendItemHeight","opacityForLegend","legendItemHidden","opacityForUnfocusedLegend","toggleFocusLegend","focus","legendItemFocused","revertLegend","showLegend","selectorLegends","hideLegend","isEmpty","clearLegendItemTextBoxCache","getTextBox","updatePositions","updateValues","withoutStep","areaLength","totalLength","itemLength","posMin","margins","maxLength","isLast","itemWidth","tileWidth","itemHeight","paddingTop","maxHeight","widths","heights","xForLegend","xForLegendText","xForLegendRect","yForLegend","yForLegendText","yForLegendRect","x1ForLegendTile","x2ForLegendTile","yForLegendTile","rects","tiles","hide","show","toggle","revert","legendItemEvent","legendItemTile","legendBackground","xForTitle","yForTitle","axisXLabel","textAnchorForXAxisLabel","axisYLabel","textAnchorForYAxisLabel","axisY2Label","textAnchorForY2AxisLabel","withoutRotateTickText","axisParams","getTickValues","getLabelOptionByAxisId","option","getLabelText","setLabelText","getLabelPosition","defaultPosition","isLeft","isCenter","isRight","isTop","isMiddle","isBottom","getXAxisLabelPosition","textForXAxisLabel","textForYAxisLabel","textForY2AxisLabel","xForAxisLabel","forHorizontal","dxForAxisLabel","textAnchorForAxisLabel","xForXAxisLabel","xForYAxisLabel","xForY2AxisLabel","dxForXAxisLabel","dxForYAxisLabel","dxForY2AxisLabel","dyForXAxisLabel","dyForYAxisLabel","dyForY2AxisLabel","defaultValue","pixels","tickCount","forTimeSeries","targetCount","tickValue","axisSubX","isHidden","isIE9","appVersion","URL","getAxisClipX","getAxisClipY","getAxisClipWidth","getAxisClipHeight","innerRadiusRatio","svgArc","getSvgArc","svgArcExpanded","getSvgArcExpanded","svgArcExpandedSub","updateAngle","gMin","gMax","gTic","gValue","updated","rate","getArc","transformForArcLabel","getArcRatio","whole","convertToArcData","textForArcLabel","shouldShowArcLabel","meetsArcLabelThreshold","getArcLabelFormat","defaultArcValueFormat","expandArc","selectorTargets","chartArc","shouldExpand","expandDuration","unexpandArc","shouldShow","getArcTitle","mainPieUpdate","mainPieEnter","classChartArc","classArcs","chartArcsTitle","mainArc","classArc","_current","interpolated","gaugeValue","chartArcsBackground","chartArcsGaugeUnit","chartArcsGaugeMin","chartArcsGaugeMax","region","mainRegion","classRegion","parentData","regionX","regionY","regionWidth","regionHeight","isRegionOnX","mx","my","minX","maxX","minY","maxY","altDomain","dragarea","_x","_y","_w","_h","isSelected","SELECTED","isIncluded","INCLUDED","togglePoint","getPathBox","togglePath","selectPoint","unselectPoint","selected","selectPath","unselectPath","getToggle","redrawForBrush","visibility","contextLineEnter","contextLineUpdate","contextBarEnter","contextBarUpdate","updateBarForSubchart","contextBar","redrawBarForSubchart","drawBarOnSub","updateLineForSubchart","contextLine","redrawLineForSubchart","drawLineOnSub","updateAreaForSubchart","contextArea","redrawAreaForSubchart","drawAreaOnSub","startEvent","redrawForZoom","orgScaleExtent","colors","pattern","asValue","formatForY","yFormat","formatForY2","y2Format","defaultFormat","hasCaches","getCaches","focused","defocused","classShape","classShapes","classTarget","additionalClassSuffix","additionalClass","classFocused","classDefocused","selectorLegend","dict","str","items","defocus","enable","enabled","unzoom","classes","categories","cacheIds","dataCount","baseTarget","baseValue","notfoundIds","orgDataCount","tail","missing","translateX","scaleX","flowIndex","flowLength","flowStart","flowEnd","durationForFlow","wait","resetOther","isTargetId","isTargetIndex","unselect","transformTo","optionsForRedraw","grids","shown","category","labels","destroy","detachEvent","oThis","TypeError","aArgs","fToBind","fNOP","fBound","SVGPathSeg","typeAsLetter","owningPathSegList","pathSegType","pathSegTypeAsLetter","_owningPathSegList","PATHSEG_UNKNOWN","PATHSEG_CLOSEPATH","PATHSEG_MOVETO_ABS","PATHSEG_MOVETO_REL","PATHSEG_LINETO_ABS","PATHSEG_LINETO_REL","PATHSEG_CURVETO_CUBIC_ABS","PATHSEG_CURVETO_CUBIC_REL","PATHSEG_CURVETO_QUADRATIC_ABS","PATHSEG_CURVETO_QUADRATIC_REL","PATHSEG_ARC_ABS","PATHSEG_ARC_REL","PATHSEG_LINETO_HORIZONTAL_ABS","PATHSEG_LINETO_HORIZONTAL_REL","PATHSEG_LINETO_VERTICAL_ABS","PATHSEG_LINETO_VERTICAL_REL","PATHSEG_CURVETO_CUBIC_SMOOTH_ABS","PATHSEG_CURVETO_CUBIC_SMOOTH_REL","PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS","PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL","_segmentChanged","segmentChanged","SVGPathSegClosePath","_asPathString","clone","SVGPathSegMovetoAbs","SVGPathSegMovetoRel","SVGPathSegLinetoAbs","SVGPathSegLinetoRel","SVGPathSegCurvetoCubicAbs","_x1","_y1","_x2","_y2","SVGPathSegCurvetoCubicRel","SVGPathSegCurvetoQuadraticAbs","SVGPathSegCurvetoQuadraticRel","SVGPathSegArcAbs","r2","largeArcFlag","sweepFlag","_r1","_r2","_angle","_largeArcFlag","_sweepFlag","SVGPathSegArcRel","SVGPathSegLinetoHorizontalAbs","SVGPathSegLinetoHorizontalRel","SVGPathSegLinetoVerticalAbs","SVGPathSegLinetoVerticalRel","SVGPathSegCurvetoCubicSmoothAbs","SVGPathSegCurvetoCubicSmoothRel","SVGPathSegCurvetoQuadraticSmoothAbs","SVGPathSegCurvetoQuadraticSmoothRel","SVGPathElement","createSVGPathSegClosePath","createSVGPathSegMovetoAbs","createSVGPathSegMovetoRel","createSVGPathSegLinetoAbs","createSVGPathSegLinetoRel","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicRel","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticRel","createSVGPathSegArcAbs","createSVGPathSegArcRel","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoHorizontalRel","createSVGPathSegLinetoVerticalAbs","createSVGPathSegLinetoVerticalRel","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoCubicSmoothRel","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegCurvetoQuadraticSmoothRel","SVGPathSegList","pathElement","_pathElement","_list","_parsePath","_mutationObserverConfig","attributeFilter","_pathElementMutationObserver","_updateListFromPathMutations","_checkPathSynchronizedToList","_pathSegList","takeRecords","mutationRecords","hasPathMutations","record","attributeName","_writeListToPath","_pathSegArrayAsString","pathSeg","initialize","newItem","_checkValidIndex","numberOfItems","insertItemBefore","replaceItem","removeItem","item","appendItem","pathSegArray","Builder","appendSegment","Source","_string","_currentIndex","_endIndex","_previousCommand","_skipOptionalSpaces","_isCurrentSpace","character","_skipOptionalSpacesOrDelimiter","hasMoreData","peekSegmentType","lookahead","_pathSegTypeFromChar","_nextCommandHelper","previousCommand","initialCommandIsMoveTo","command","_parseNumber","frac","expsign","startIndex","startIntPartIndex","scanIntPartIndex","multiplier","_parseArcFlag","flag","flagChar","parseSegment","arcAngle","arcLarge","arcSweep","builder","748","__WEBPACK_IMPORTED_MODULE_1_c3__","HomeComponent","ngOnInit","vmap","vectorMap","backgroundColor","borderColor","borderOpacity","borderWidth","enableZoom","hoverColor","hoverOpacity","normalizeFunction","scaleColors","selectedColor","selectedRegions","onRegionClick","message","styles","766","StatsComponent","767","TodoComponent","nameList","newName","todoListWraper","perfectScrollbar","815","__WEBPACK_IMPORTED_MODULE_0__angular_router__","__WEBPACK_IMPORTED_MODULE_1__home_component__","homeRoutes","component","forChild","833","__WEBPACK_IMPORTED_MODULE_0__todo_index__","__WEBPACK_IMPORTED_MODULE_1__stats_index__","834","__WEBPACK_IMPORTED_MODULE_1__stats_module__","835","__WEBPACK_IMPORTED_MODULE_1__stats_component__","StatsModule","836","__WEBPACK_IMPORTED_MODULE_1__todo_module__","837","__WEBPACK_IMPORTED_MODULE_2__angular_forms__","__WEBPACK_IMPORTED_MODULE_3__todo_component__","TodoModule","899","925","942","943"],"mappings":"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","file":"2.1440f511e8555aabab75.chunk.js","sourcesContent":["webpackJsonp([2,30],{\n\n/***/ 693:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(101);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_component__ = __webpack_require__(748);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__home_routes__ = __webpack_require__(815);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__widgets_index__ = __webpack_require__(833);\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\n\r\n\r\n\r\n\r\n\r\nvar HomeModule = (function () {\r\n    function HomeModule() {\r\n    }\r\n    HomeModule = __decorate([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"])({\r\n            imports: [\r\n                __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"CommonModule\"],\r\n                __WEBPACK_IMPORTED_MODULE_4__widgets_index__[\"a\" /* TodoModule */],\r\n                __WEBPACK_IMPORTED_MODULE_4__widgets_index__[\"b\" /* StatsModule */],\r\n                __WEBPACK_IMPORTED_MODULE_3__home_routes__[\"a\" /* default */]\r\n            ],\r\n            declarations: [__WEBPACK_IMPORTED_MODULE_2__home_component__[\"a\" /* HomeComponent */]]\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], HomeModule);\r\n    return HomeModule;\r\n}());\r\n/* harmony default export */ exports[\"default\"] = HomeModule;\r\n\n\n/***/ },\n\n/***/ 728:\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n/***/ },\n\n/***/ 736:\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (window) {\n    'use strict';\n\n    /*global define, module, exports, require */\n\n    var c3 = { version: \"0.4.11\" };\n\n    var c3_chart_fn,\n        c3_chart_internal_fn,\n        c3_chart_internal_axis_fn;\n\n    function API(owner) {\n        this.owner = owner;\n    }\n\n    function inherit(base, derived) {\n\n        if (Object.create) {\n            derived.prototype = Object.create(base.prototype);\n        } else {\n            var f = function f() {};\n            f.prototype = base.prototype;\n            derived.prototype = new f();\n        }\n\n        derived.prototype.constructor = derived;\n\n        return derived;\n    }\n\n    function Chart(config) {\n        var $$ = this.internal = new ChartInternal(this);\n        $$.loadConfig(config);\n\n        $$.beforeInit(config);\n        $$.init();\n        $$.afterInit(config);\n\n        // bind \"this\" to nested API\n        (function bindThis(fn, target, argThis) {\n            Object.keys(fn).forEach(function (key) {\n                target[key] = fn[key].bind(argThis);\n                if (Object.keys(fn[key]).length > 0) {\n                    bindThis(fn[key], target[key], argThis);\n                }\n            });\n        })(c3_chart_fn, this, this);\n    }\n\n    function ChartInternal(api) {\n        var $$ = this;\n        $$.d3 = window.d3 ? window.d3 :  true ? __webpack_require__(728) : undefined;\n        $$.api = api;\n        $$.config = $$.getDefaultConfig();\n        $$.data = {};\n        $$.cache = {};\n        $$.axes = {};\n    }\n\n    c3.generate = function (config) {\n        return new Chart(config);\n    };\n\n    c3.chart = {\n        fn: Chart.prototype,\n        internal: {\n            fn: ChartInternal.prototype,\n            axis: {\n                fn: Axis.prototype\n            }\n        }\n    };\n    c3_chart_fn = c3.chart.fn;\n    c3_chart_internal_fn = c3.chart.internal.fn;\n    c3_chart_internal_axis_fn = c3.chart.internal.axis.fn;\n\n    c3_chart_internal_fn.beforeInit = function () {\n        // can do something\n    };\n    c3_chart_internal_fn.afterInit = function () {\n        // can do something\n    };\n    c3_chart_internal_fn.init = function () {\n        var $$ = this, config = $$.config;\n\n        $$.initParams();\n\n        if (config.data_url) {\n            $$.convertUrlToData(config.data_url, config.data_mimeType, config.data_headers, config.data_keys, $$.initWithData);\n        }\n        else if (config.data_json) {\n            $$.initWithData($$.convertJsonToData(config.data_json, config.data_keys));\n        }\n        else if (config.data_rows) {\n            $$.initWithData($$.convertRowsToData(config.data_rows));\n        }\n        else if (config.data_columns) {\n            $$.initWithData($$.convertColumnsToData(config.data_columns));\n        }\n        else {\n            throw Error('url or json or rows or columns is required.');\n        }\n    };\n\n    c3_chart_internal_fn.initParams = function () {\n        var $$ = this, d3 = $$.d3, config = $$.config;\n\n        // MEMO: clipId needs to be unique because it conflicts when multiple charts exist\n        $$.clipId = \"c3-\" + (+new Date()) + '-clip',\n        $$.clipIdForXAxis = $$.clipId + '-xaxis',\n        $$.clipIdForYAxis = $$.clipId + '-yaxis',\n        $$.clipIdForGrid = $$.clipId + '-grid',\n        $$.clipIdForSubchart = $$.clipId + '-subchart',\n        $$.clipPath = $$.getClipPath($$.clipId),\n        $$.clipPathForXAxis = $$.getClipPath($$.clipIdForXAxis),\n        $$.clipPathForYAxis = $$.getClipPath($$.clipIdForYAxis);\n        $$.clipPathForGrid = $$.getClipPath($$.clipIdForGrid),\n        $$.clipPathForSubchart = $$.getClipPath($$.clipIdForSubchart),\n\n        $$.dragStart = null;\n        $$.dragging = false;\n        $$.flowing = false;\n        $$.cancelClick = false;\n        $$.mouseover = false;\n        $$.transiting = false;\n\n        $$.color = $$.generateColor();\n        $$.levelColor = $$.generateLevelColor();\n\n        $$.dataTimeFormat = config.data_xLocaltime ? d3.time.format : d3.time.format.utc;\n        $$.axisTimeFormat = config.axis_x_localtime ? d3.time.format : d3.time.format.utc;\n        $$.defaultAxisTimeFormat = $$.axisTimeFormat.multi([\n            [\".%L\", function (d) { return d.getMilliseconds(); }],\n            [\":%S\", function (d) { return d.getSeconds(); }],\n            [\"%I:%M\", function (d) { return d.getMinutes(); }],\n            [\"%I %p\", function (d) { return d.getHours(); }],\n            [\"%-m/%-d\", function (d) { return d.getDay() && d.getDate() !== 1; }],\n            [\"%-m/%-d\", function (d) { return d.getDate() !== 1; }],\n            [\"%-m/%-d\", function (d) { return d.getMonth(); }],\n            [\"%Y/%-m/%-d\", function () { return true; }]\n        ]);\n\n        $$.hiddenTargetIds = [];\n        $$.hiddenLegendIds = [];\n        $$.focusedTargetIds = [];\n        $$.defocusedTargetIds = [];\n\n        $$.xOrient = config.axis_rotated ? \"left\" : \"bottom\";\n        $$.yOrient = config.axis_rotated ? (config.axis_y_inner ? \"top\" : \"bottom\") : (config.axis_y_inner ? \"right\" : \"left\");\n        $$.y2Orient = config.axis_rotated ? (config.axis_y2_inner ? \"bottom\" : \"top\") : (config.axis_y2_inner ? \"left\" : \"right\");\n        $$.subXOrient = config.axis_rotated ? \"left\" : \"bottom\";\n\n        $$.isLegendRight = config.legend_position === 'right';\n        $$.isLegendInset = config.legend_position === 'inset';\n        $$.isLegendTop = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'top-right';\n        $$.isLegendLeft = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'bottom-left';\n        $$.legendStep = 0;\n        $$.legendItemWidth = 0;\n        $$.legendItemHeight = 0;\n\n        $$.currentMaxTickWidths = {\n            x: 0,\n            y: 0,\n            y2: 0\n        };\n\n        $$.rotated_padding_left = 30;\n        $$.rotated_padding_right = config.axis_rotated && !config.axis_x_show ? 0 : 30;\n        $$.rotated_padding_top = 5;\n\n        $$.withoutFadeIn = {};\n\n        $$.intervalForObserveInserted = undefined;\n\n        $$.axes.subx = d3.selectAll([]); // needs when excluding subchart.js\n    };\n\n    c3_chart_internal_fn.initChartElements = function () {\n        if (this.initBar) { this.initBar(); }\n        if (this.initLine) { this.initLine(); }\n        if (this.initArc) { this.initArc(); }\n        if (this.initGauge) { this.initGauge(); }\n        if (this.initText) { this.initText(); }\n    };\n\n    c3_chart_internal_fn.initWithData = function (data) {\n        var $$ = this, d3 = $$.d3, config = $$.config;\n        var defs, main, binding = true;\n\n        $$.axis = new Axis($$);\n\n        if ($$.initPie) { $$.initPie(); }\n        if ($$.initBrush) { $$.initBrush(); }\n        if ($$.initZoom) { $$.initZoom(); }\n\n        if (!config.bindto) {\n            $$.selectChart = d3.selectAll([]);\n        }\n        else if (typeof config.bindto.node === 'function') {\n            $$.selectChart = config.bindto;\n        }\n        else {\n            $$.selectChart = d3.select(config.bindto);\n        }\n        if ($$.selectChart.empty()) {\n            $$.selectChart = d3.select(document.createElement('div')).style('opacity', 0);\n            $$.observeInserted($$.selectChart);\n            binding = false;\n        }\n        $$.selectChart.html(\"\").classed(\"c3\", true);\n\n        // Init data as targets\n        $$.data.xs = {};\n        $$.data.targets = $$.convertDataToTargets(data);\n\n        if (config.data_filter) {\n            $$.data.targets = $$.data.targets.filter(config.data_filter);\n        }\n\n        // Set targets to hide if needed\n        if (config.data_hide) {\n            $$.addHiddenTargetIds(config.data_hide === true ? $$.mapToIds($$.data.targets) : config.data_hide);\n        }\n        if (config.legend_hide) {\n            $$.addHiddenLegendIds(config.legend_hide === true ? $$.mapToIds($$.data.targets) : config.legend_hide);\n        }\n\n        // when gauge, hide legend // TODO: fix\n        if ($$.hasType('gauge')) {\n            config.legend_show = false;\n        }\n\n        // Init sizes and scales\n        $$.updateSizes();\n        $$.updateScales();\n\n        // Set domains for each scale\n        $$.x.domain(d3.extent($$.getXDomain($$.data.targets)));\n        $$.y.domain($$.getYDomain($$.data.targets, 'y'));\n        $$.y2.domain($$.getYDomain($$.data.targets, 'y2'));\n        $$.subX.domain($$.x.domain());\n        $$.subY.domain($$.y.domain());\n        $$.subY2.domain($$.y2.domain());\n\n        // Save original x domain for zoom update\n        $$.orgXDomain = $$.x.domain();\n\n        // Set initialized scales to brush and zoom\n        if ($$.brush) { $$.brush.scale($$.subX); }\n        if (config.zoom_enabled) { $$.zoom.scale($$.x); }\n\n        /*-- Basic Elements --*/\n\n        // Define svgs\n        $$.svg = $$.selectChart.append(\"svg\")\n            .style(\"overflow\", \"hidden\")\n            .on('mouseenter', function () { return config.onmouseover.call($$); })\n            .on('mouseleave', function () { return config.onmouseout.call($$); });\n\n        if ($$.config.svg_classname) {\n            $$.svg.attr('class', $$.config.svg_classname);\n        }\n\n        // Define defs\n        defs = $$.svg.append(\"defs\");\n        $$.clipChart = $$.appendClip(defs, $$.clipId);\n        $$.clipXAxis = $$.appendClip(defs, $$.clipIdForXAxis);\n        $$.clipYAxis = $$.appendClip(defs, $$.clipIdForYAxis);\n        $$.clipGrid = $$.appendClip(defs, $$.clipIdForGrid);\n        $$.clipSubchart = $$.appendClip(defs, $$.clipIdForSubchart);\n        $$.updateSvgSize();\n\n        // Define regions\n        main = $$.main = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('main'));\n\n        if ($$.initSubchart) { $$.initSubchart(); }\n        if ($$.initTooltip) { $$.initTooltip(); }\n        if ($$.initLegend) { $$.initLegend(); }\n        if ($$.initTitle) { $$.initTitle(); }\n\n        /*-- Main Region --*/\n\n        // text when empty\n        main.append(\"text\")\n            .attr(\"class\", CLASS.text + ' ' + CLASS.empty)\n            .attr(\"text-anchor\", \"middle\") // horizontal centering of text at x position in all browsers.\n            .attr(\"dominant-baseline\", \"middle\"); // vertical centering of text at y position in all browsers, except IE.\n\n        // Regions\n        $$.initRegion();\n\n        // Grids\n        $$.initGrid();\n\n        // Define g for chart area\n        main.append('g')\n            .attr(\"clip-path\", $$.clipPath)\n            .attr('class', CLASS.chart);\n\n        // Grid lines\n        if (config.grid_lines_front) { $$.initGridLines(); }\n\n        // Cover whole with rects for events\n        $$.initEventRect();\n\n        // Define g for chart\n        $$.initChartElements();\n\n        // if zoom privileged, insert rect to forefront\n        // TODO: is this needed?\n        main.insert('rect', config.zoom_privileged ? null : 'g.' + CLASS.regions)\n            .attr('class', CLASS.zoomRect)\n            .attr('width', $$.width)\n            .attr('height', $$.height)\n            .style('opacity', 0)\n            .on(\"dblclick.zoom\", null);\n\n        // Set default extent if defined\n        if (config.axis_x_extent) { $$.brush.extent($$.getDefaultExtent()); }\n\n        // Add Axis\n        $$.axis.init();\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Draw with targets\n        if (binding) {\n            $$.updateDimension();\n            $$.config.oninit.call($$);\n            $$.redraw({\n                withTransition: false,\n                withTransform: true,\n                withUpdateXDomain: true,\n                withUpdateOrgXDomain: true,\n                withTransitionForAxis: false\n            });\n        }\n\n        // Bind resize event\n        $$.bindResize();\n\n        // export element of the chart\n        $$.api.element = $$.selectChart.node();\n    };\n\n    c3_chart_internal_fn.smoothLines = function (el, type) {\n        var $$ = this;\n        if (type === 'grid') {\n            el.each(function () {\n                var g = $$.d3.select(this),\n                    x1 = g.attr('x1'),\n                    x2 = g.attr('x2'),\n                    y1 = g.attr('y1'),\n                    y2 = g.attr('y2');\n                g.attr({\n                    'x1': Math.ceil(x1),\n                    'x2': Math.ceil(x2),\n                    'y1': Math.ceil(y1),\n                    'y2': Math.ceil(y2)\n                });\n            });\n        }\n    };\n\n\n    c3_chart_internal_fn.updateSizes = function () {\n        var $$ = this, config = $$.config;\n        var legendHeight = $$.legend ? $$.getLegendHeight() : 0,\n            legendWidth = $$.legend ? $$.getLegendWidth() : 0,\n            legendHeightForBottom = $$.isLegendRight || $$.isLegendInset ? 0 : legendHeight,\n            hasArc = $$.hasArcType(),\n            xAxisHeight = config.axis_rotated || hasArc ? 0 : $$.getHorizontalAxisHeight('x'),\n            subchartHeight = config.subchart_show && !hasArc ? (config.subchart_size_height + xAxisHeight) : 0;\n\n        $$.currentWidth = $$.getCurrentWidth();\n        $$.currentHeight = $$.getCurrentHeight();\n\n        // for main\n        $$.margin = config.axis_rotated ? {\n            top: $$.getHorizontalAxisHeight('y2') + $$.getCurrentPaddingTop(),\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n            bottom: $$.getHorizontalAxisHeight('y') + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n            left: subchartHeight + (hasArc ? 0 : $$.getCurrentPaddingLeft())\n        } : {\n            top: 4 + $$.getCurrentPaddingTop(), // for top tick text\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n            bottom: xAxisHeight + subchartHeight + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n            left: hasArc ? 0 : $$.getCurrentPaddingLeft()\n        };\n\n        // for subchart\n        $$.margin2 = config.axis_rotated ? {\n            top: $$.margin.top,\n            right: NaN,\n            bottom: 20 + legendHeightForBottom,\n            left: $$.rotated_padding_left\n        } : {\n            top: $$.currentHeight - subchartHeight - legendHeightForBottom,\n            right: NaN,\n            bottom: xAxisHeight + legendHeightForBottom,\n            left: $$.margin.left\n        };\n\n        // for legend\n        $$.margin3 = {\n            top: 0,\n            right: NaN,\n            bottom: 0,\n            left: 0\n        };\n        if ($$.updateSizeForLegend) { $$.updateSizeForLegend(legendHeight, legendWidth); }\n\n        $$.width = $$.currentWidth - $$.margin.left - $$.margin.right;\n        $$.height = $$.currentHeight - $$.margin.top - $$.margin.bottom;\n        if ($$.width < 0) { $$.width = 0; }\n        if ($$.height < 0) { $$.height = 0; }\n\n        $$.width2 = config.axis_rotated ? $$.margin.left - $$.rotated_padding_left - $$.rotated_padding_right : $$.width;\n        $$.height2 = config.axis_rotated ? $$.height : $$.currentHeight - $$.margin2.top - $$.margin2.bottom;\n        if ($$.width2 < 0) { $$.width2 = 0; }\n        if ($$.height2 < 0) { $$.height2 = 0; }\n\n        // for arc\n        $$.arcWidth = $$.width - ($$.isLegendRight ? legendWidth + 10 : 0);\n        $$.arcHeight = $$.height - ($$.isLegendRight ? 0 : 10);\n        if ($$.hasType('gauge') && !config.gauge_fullCircle) {\n            $$.arcHeight += $$.height - $$.getGaugeLabelHeight();\n        }\n        if ($$.updateRadius) { $$.updateRadius(); }\n\n        if ($$.isLegendRight && hasArc) {\n            $$.margin3.left = $$.arcWidth / 2 + $$.radiusExpanded * 1.1;\n        }\n    };\n\n    c3_chart_internal_fn.updateTargets = function (targets) {\n        var $$ = this;\n\n        /*-- Main --*/\n\n        //-- Text --//\n        $$.updateTargetsForText(targets);\n\n        //-- Bar --//\n        $$.updateTargetsForBar(targets);\n\n        //-- Line --//\n        $$.updateTargetsForLine(targets);\n\n        //-- Arc --//\n        if ($$.hasArcType() && $$.updateTargetsForArc) { $$.updateTargetsForArc(targets); }\n\n        /*-- Sub --*/\n\n        if ($$.updateTargetsForSubchart) { $$.updateTargetsForSubchart(targets); }\n\n        // Fade-in each chart\n        $$.showTargets();\n    };\n    c3_chart_internal_fn.showTargets = function () {\n        var $$ = this;\n        $$.svg.selectAll('.' + CLASS.target).filter(function (d) { return $$.isTargetToShow(d.id); })\n          .transition().duration($$.config.transition_duration)\n            .style(\"opacity\", 1);\n    };\n\n    c3_chart_internal_fn.redraw = function (options, transitions) {\n        var $$ = this, main = $$.main, d3 = $$.d3, config = $$.config;\n        var areaIndices = $$.getShapeIndices($$.isAreaType), barIndices = $$.getShapeIndices($$.isBarType), lineIndices = $$.getShapeIndices($$.isLineType);\n        var withY, withSubchart, withTransition, withTransitionForExit, withTransitionForAxis,\n            withTransform, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain, withLegend,\n            withEventRect, withDimension, withUpdateXAxis;\n        var hideAxis = $$.hasArcType();\n        var drawArea, drawBar, drawLine, xForText, yForText;\n        var duration, durationForExit, durationForAxis;\n        var waitForDraw, flow;\n        var targetsToShow = $$.filterTargetsToShow($$.data.targets), tickValues, i, intervalForCulling, xDomainForZoom;\n        var xv = $$.xv.bind($$), cx, cy;\n\n        options = options || {};\n        withY = getOption(options, \"withY\", true);\n        withSubchart = getOption(options, \"withSubchart\", true);\n        withTransition = getOption(options, \"withTransition\", true);\n        withTransform = getOption(options, \"withTransform\", false);\n        withUpdateXDomain = getOption(options, \"withUpdateXDomain\", false);\n        withUpdateOrgXDomain = getOption(options, \"withUpdateOrgXDomain\", false);\n        withTrimXDomain = getOption(options, \"withTrimXDomain\", true);\n        withUpdateXAxis = getOption(options, \"withUpdateXAxis\", withUpdateXDomain);\n        withLegend = getOption(options, \"withLegend\", false);\n        withEventRect = getOption(options, \"withEventRect\", true);\n        withDimension = getOption(options, \"withDimension\", true);\n        withTransitionForExit = getOption(options, \"withTransitionForExit\", withTransition);\n        withTransitionForAxis = getOption(options, \"withTransitionForAxis\", withTransition);\n\n        duration = withTransition ? config.transition_duration : 0;\n        durationForExit = withTransitionForExit ? duration : 0;\n        durationForAxis = withTransitionForAxis ? duration : 0;\n\n        transitions = transitions || $$.axis.generateTransitions(durationForAxis);\n\n        // update legend and transform each g\n        if (withLegend && config.legend_show) {\n            $$.updateLegend($$.mapToIds($$.data.targets), options, transitions);\n        } else if (withDimension) {\n            // need to update dimension (e.g. axis.y.tick.values) because y tick values should change\n            // no need to update axis in it because they will be updated in redraw()\n            $$.updateDimension(true);\n        }\n\n        // MEMO: needed for grids calculation\n        if ($$.isCategorized() && targetsToShow.length === 0) {\n            $$.x.domain([0, $$.axes.x.selectAll('.tick').size()]);\n        }\n\n        if (targetsToShow.length) {\n            $$.updateXDomain(targetsToShow, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain);\n            if (!config.axis_x_tick_values) {\n                tickValues = $$.axis.updateXAxisTickValues(targetsToShow);\n            }\n        } else {\n            $$.xAxis.tickValues([]);\n            $$.subXAxis.tickValues([]);\n        }\n\n        if (config.zoom_rescale && !options.flow) {\n            xDomainForZoom = $$.x.orgDomain();\n        }\n\n        $$.y.domain($$.getYDomain(targetsToShow, 'y', xDomainForZoom));\n        $$.y2.domain($$.getYDomain(targetsToShow, 'y2', xDomainForZoom));\n\n        if (!config.axis_y_tick_values && config.axis_y_tick_count) {\n            $$.yAxis.tickValues($$.axis.generateTickValues($$.y.domain(), config.axis_y_tick_count));\n        }\n        if (!config.axis_y2_tick_values && config.axis_y2_tick_count) {\n            $$.y2Axis.tickValues($$.axis.generateTickValues($$.y2.domain(), config.axis_y2_tick_count));\n        }\n\n        // axes\n        $$.axis.redraw(transitions, hideAxis);\n\n        // Update axis label\n        $$.axis.updateLabels(withTransition);\n\n        // show/hide if manual culling needed\n        if ((withUpdateXDomain || withUpdateXAxis) && targetsToShow.length) {\n            if (config.axis_x_tick_culling && tickValues) {\n                for (i = 1; i < tickValues.length; i++) {\n                    if (tickValues.length / i < config.axis_x_tick_culling_max) {\n                        intervalForCulling = i;\n                        break;\n                    }\n                }\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').each(function (e) {\n                    var index = tickValues.indexOf(e);\n                    if (index >= 0) {\n                        d3.select(this).style('display', index % intervalForCulling ? 'none' : 'block');\n                    }\n                });\n            } else {\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').style('display', 'block');\n            }\n        }\n\n        // setup drawer - MEMO: these must be called after axis updated\n        drawArea = $$.generateDrawArea ? $$.generateDrawArea(areaIndices, false) : undefined;\n        drawBar = $$.generateDrawBar ? $$.generateDrawBar(barIndices) : undefined;\n        drawLine = $$.generateDrawLine ? $$.generateDrawLine(lineIndices, false) : undefined;\n        xForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, true);\n        yForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, false);\n\n        // Update sub domain\n        if (withY) {\n            $$.subY.domain($$.getYDomain(targetsToShow, 'y'));\n            $$.subY2.domain($$.getYDomain(targetsToShow, 'y2'));\n        }\n\n        // xgrid focus\n        $$.updateXgridFocus();\n\n        // Data empty label positioning and text.\n        main.select(\"text.\" + CLASS.text + '.' + CLASS.empty)\n            .attr(\"x\", $$.width / 2)\n            .attr(\"y\", $$.height / 2)\n            .text(config.data_empty_label_text)\n          .transition()\n            .style('opacity', targetsToShow.length ? 0 : 1);\n\n        // grid\n        $$.updateGrid(duration);\n\n        // rect for regions\n        $$.updateRegion(duration);\n\n        // bars\n        $$.updateBar(durationForExit);\n\n        // lines, areas and cricles\n        $$.updateLine(durationForExit);\n        $$.updateArea(durationForExit);\n        $$.updateCircle();\n\n        // text\n        if ($$.hasDataLabel()) {\n            $$.updateText(durationForExit);\n        }\n\n        // title\n        if ($$.redrawTitle) { $$.redrawTitle(); }\n\n        // arc\n        if ($$.redrawArc) { $$.redrawArc(duration, durationForExit, withTransform); }\n\n        // subchart\n        if ($$.redrawSubchart) {\n            $$.redrawSubchart(withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices);\n        }\n\n        // circles for select\n        main.selectAll('.' + CLASS.selectedCircles)\n            .filter($$.isBarType.bind($$))\n            .selectAll('circle')\n            .remove();\n\n        // event rects will redrawn when flow called\n        if (config.interaction_enabled && !options.flow && withEventRect) {\n            $$.redrawEventRect();\n            if ($$.updateZoom) { $$.updateZoom(); }\n        }\n\n        // update circleY based on updated parameters\n        $$.updateCircleY();\n\n        // generate circle x/y functions depending on updated params\n        cx = ($$.config.axis_rotated ? $$.circleY : $$.circleX).bind($$);\n        cy = ($$.config.axis_rotated ? $$.circleX : $$.circleY).bind($$);\n\n        if (options.flow) {\n            flow = $$.generateFlow({\n                targets: targetsToShow,\n                flow: options.flow,\n                duration: options.flow.duration,\n                drawBar: drawBar,\n                drawLine: drawLine,\n                drawArea: drawArea,\n                cx: cx,\n                cy: cy,\n                xv: xv,\n                xForText: xForText,\n                yForText: yForText\n            });\n        }\n\n        if ((duration || flow) && $$.isTabVisible()) { // Only use transition if tab visible. See #938.\n            // transition should be derived from one transition\n            d3.transition().duration(duration).each(function () {\n                var transitionsToWait = [];\n\n                // redraw and gather transitions\n                [\n                    $$.redrawBar(drawBar, true),\n                    $$.redrawLine(drawLine, true),\n                    $$.redrawArea(drawArea, true),\n                    $$.redrawCircle(cx, cy, true),\n                    $$.redrawText(xForText, yForText, options.flow, true),\n                    $$.redrawRegion(true),\n                    $$.redrawGrid(true),\n                ].forEach(function (transitions) {\n                    transitions.forEach(function (transition) {\n                        transitionsToWait.push(transition);\n                    });\n                });\n\n                // Wait for end of transitions to call flow and onrendered callback\n                waitForDraw = $$.generateWait();\n                transitionsToWait.forEach(function (t) {\n                    waitForDraw.add(t);\n                });\n            })\n            .call(waitForDraw, function () {\n                if (flow) {\n                    flow();\n                }\n                if (config.onrendered) {\n                    config.onrendered.call($$);\n                }\n            });\n        }\n        else {\n            $$.redrawBar(drawBar);\n            $$.redrawLine(drawLine);\n            $$.redrawArea(drawArea);\n            $$.redrawCircle(cx, cy);\n            $$.redrawText(xForText, yForText, options.flow);\n            $$.redrawRegion();\n            $$.redrawGrid();\n            if (config.onrendered) {\n                config.onrendered.call($$);\n            }\n        }\n\n        // update fadein condition\n        $$.mapToIds($$.data.targets).forEach(function (id) {\n            $$.withoutFadeIn[id] = true;\n        });\n    };\n\n    c3_chart_internal_fn.updateAndRedraw = function (options) {\n        var $$ = this, config = $$.config, transitions;\n        options = options || {};\n        // same with redraw\n        options.withTransition = getOption(options, \"withTransition\", true);\n        options.withTransform = getOption(options, \"withTransform\", false);\n        options.withLegend = getOption(options, \"withLegend\", false);\n        // NOT same with redraw\n        options.withUpdateXDomain = true;\n        options.withUpdateOrgXDomain = true;\n        options.withTransitionForExit = false;\n        options.withTransitionForTransform = getOption(options, \"withTransitionForTransform\", options.withTransition);\n        // MEMO: this needs to be called before updateLegend and it means this ALWAYS needs to be called)\n        $$.updateSizes();\n        // MEMO: called in updateLegend in redraw if withLegend\n        if (!(options.withLegend && config.legend_show)) {\n            transitions = $$.axis.generateTransitions(options.withTransitionForAxis ? config.transition_duration : 0);\n            // Update scales\n            $$.updateScales();\n            $$.updateSvgSize();\n            // Update g positions\n            $$.transformAll(options.withTransitionForTransform, transitions);\n        }\n        // Draw with new sizes & scales\n        $$.redraw(options, transitions);\n    };\n    c3_chart_internal_fn.redrawWithoutRescale = function () {\n        this.redraw({\n            withY: false,\n            withSubchart: false,\n            withEventRect: false,\n            withTransitionForAxis: false\n        });\n    };\n\n    c3_chart_internal_fn.isTimeSeries = function () {\n        return this.config.axis_x_type === 'timeseries';\n    };\n    c3_chart_internal_fn.isCategorized = function () {\n        return this.config.axis_x_type.indexOf('categor') >= 0;\n    };\n    c3_chart_internal_fn.isCustomX = function () {\n        var $$ = this, config = $$.config;\n        return !$$.isTimeSeries() && (config.data_x || notEmpty(config.data_xs));\n    };\n\n    c3_chart_internal_fn.isTimeSeriesY = function () {\n        return this.config.axis_y_type === 'timeseries';\n    };\n\n    c3_chart_internal_fn.getTranslate = function (target) {\n        var $$ = this, config = $$.config, x, y;\n        if (target === 'main') {\n            x = asHalfPixel($$.margin.left);\n            y = asHalfPixel($$.margin.top);\n        } else if (target === 'context') {\n            x = asHalfPixel($$.margin2.left);\n            y = asHalfPixel($$.margin2.top);\n        } else if (target === 'legend') {\n            x = $$.margin3.left;\n            y = $$.margin3.top;\n        } else if (target === 'x') {\n            x = 0;\n            y = config.axis_rotated ? 0 : $$.height;\n        } else if (target === 'y') {\n            x = 0;\n            y = config.axis_rotated ? $$.height : 0;\n        } else if (target === 'y2') {\n            x = config.axis_rotated ? 0 : $$.width;\n            y = config.axis_rotated ? 1 : 0;\n        } else if (target === 'subx') {\n            x = 0;\n            y = config.axis_rotated ? 0 : $$.height2;\n        } else if (target === 'arc') {\n            x = $$.arcWidth / 2;\n            y = $$.arcHeight / 2;\n        }\n        return \"translate(\" + x + \",\" + y + \")\";\n    };\n    c3_chart_internal_fn.initialOpacity = function (d) {\n        return d.value !== null && this.withoutFadeIn[d.id] ? 1 : 0;\n    };\n    c3_chart_internal_fn.initialOpacityForCircle = function (d) {\n        return d.value !== null && this.withoutFadeIn[d.id] ? this.opacityForCircle(d) : 0;\n    };\n    c3_chart_internal_fn.opacityForCircle = function (d) {\n        var opacity = this.config.point_show ? 1 : 0;\n        return isValue(d.value) ? (this.isScatterType(d) ? 0.5 : opacity) : 0;\n    };\n    c3_chart_internal_fn.opacityForText = function () {\n        return this.hasDataLabel() ? 1 : 0;\n    };\n    c3_chart_internal_fn.xx = function (d) {\n        return d ? this.x(d.x) : null;\n    };\n    c3_chart_internal_fn.xv = function (d) {\n        var $$ = this, value = d.value;\n        if ($$.isTimeSeries()) {\n            value = $$.parseDate(d.value);\n        }\n        else if ($$.isCategorized() && typeof d.value === 'string') {\n            value = $$.config.axis_x_categories.indexOf(d.value);\n        }\n        return Math.ceil($$.x(value));\n    };\n    c3_chart_internal_fn.yv = function (d) {\n        var $$ = this,\n            yScale = d.axis && d.axis === 'y2' ? $$.y2 : $$.y;\n        return Math.ceil(yScale(d.value));\n    };\n    c3_chart_internal_fn.subxx = function (d) {\n        return d ? this.subX(d.x) : null;\n    };\n\n    c3_chart_internal_fn.transformMain = function (withTransition, transitions) {\n        var $$ = this,\n            xAxis, yAxis, y2Axis;\n        if (transitions && transitions.axisX) {\n            xAxis = transitions.axisX;\n        } else {\n            xAxis  = $$.main.select('.' + CLASS.axisX);\n            if (withTransition) { xAxis = xAxis.transition(); }\n        }\n        if (transitions && transitions.axisY) {\n            yAxis = transitions.axisY;\n        } else {\n            yAxis = $$.main.select('.' + CLASS.axisY);\n            if (withTransition) { yAxis = yAxis.transition(); }\n        }\n        if (transitions && transitions.axisY2) {\n            y2Axis = transitions.axisY2;\n        } else {\n            y2Axis = $$.main.select('.' + CLASS.axisY2);\n            if (withTransition) { y2Axis = y2Axis.transition(); }\n        }\n        (withTransition ? $$.main.transition() : $$.main).attr(\"transform\", $$.getTranslate('main'));\n        xAxis.attr(\"transform\", $$.getTranslate('x'));\n        yAxis.attr(\"transform\", $$.getTranslate('y'));\n        y2Axis.attr(\"transform\", $$.getTranslate('y2'));\n        $$.main.select('.' + CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n    };\n    c3_chart_internal_fn.transformAll = function (withTransition, transitions) {\n        var $$ = this;\n        $$.transformMain(withTransition, transitions);\n        if ($$.config.subchart_show) { $$.transformContext(withTransition, transitions); }\n        if ($$.legend) { $$.transformLegend(withTransition); }\n    };\n\n    c3_chart_internal_fn.updateSvgSize = function () {\n        var $$ = this,\n            brush = $$.svg.select(\".c3-brush .background\");\n        $$.svg.attr('width', $$.currentWidth).attr('height', $$.currentHeight);\n        $$.svg.selectAll(['#' + $$.clipId, '#' + $$.clipIdForGrid]).select('rect')\n            .attr('width', $$.width)\n            .attr('height', $$.height);\n        $$.svg.select('#' + $$.clipIdForXAxis).select('rect')\n            .attr('x', $$.getXAxisClipX.bind($$))\n            .attr('y', $$.getXAxisClipY.bind($$))\n            .attr('width', $$.getXAxisClipWidth.bind($$))\n            .attr('height', $$.getXAxisClipHeight.bind($$));\n        $$.svg.select('#' + $$.clipIdForYAxis).select('rect')\n            .attr('x', $$.getYAxisClipX.bind($$))\n            .attr('y', $$.getYAxisClipY.bind($$))\n            .attr('width', $$.getYAxisClipWidth.bind($$))\n            .attr('height', $$.getYAxisClipHeight.bind($$));\n        $$.svg.select('#' + $$.clipIdForSubchart).select('rect')\n            .attr('width', $$.width)\n            .attr('height', brush.size() ? brush.attr('height') : 0);\n        $$.svg.select('.' + CLASS.zoomRect)\n            .attr('width', $$.width)\n            .attr('height', $$.height);\n        // MEMO: parent div's height will be bigger than svg when <!DOCTYPE html>\n        $$.selectChart.style('max-height', $$.currentHeight + \"px\");\n    };\n\n\n    c3_chart_internal_fn.updateDimension = function (withoutAxis) {\n        var $$ = this;\n        if (!withoutAxis) {\n            if ($$.config.axis_rotated) {\n                $$.axes.x.call($$.xAxis);\n                $$.axes.subx.call($$.subXAxis);\n            } else {\n                $$.axes.y.call($$.yAxis);\n                $$.axes.y2.call($$.y2Axis);\n            }\n        }\n        $$.updateSizes();\n        $$.updateScales();\n        $$.updateSvgSize();\n        $$.transformAll(false);\n    };\n\n    c3_chart_internal_fn.observeInserted = function (selection) {\n        var $$ = this, observer;\n        if (typeof MutationObserver === 'undefined') {\n            window.console.error(\"MutationObserver not defined.\");\n            return;\n        }\n        observer= new MutationObserver(function (mutations) {\n            mutations.forEach(function (mutation) {\n                if (mutation.type === 'childList' && mutation.previousSibling) {\n                    observer.disconnect();\n                    // need to wait for completion of load because size calculation requires the actual sizes determined after that completion\n                    $$.intervalForObserveInserted = window.setInterval(function () {\n                        // parentNode will NOT be null when completed\n                        if (selection.node().parentNode) {\n                            window.clearInterval($$.intervalForObserveInserted);\n                            $$.updateDimension();\n                            if ($$.brush) { $$.brush.update(); }\n                            $$.config.oninit.call($$);\n                            $$.redraw({\n                                withTransform: true,\n                                withUpdateXDomain: true,\n                                withUpdateOrgXDomain: true,\n                                withTransition: false,\n                                withTransitionForTransform: false,\n                                withLegend: true\n                            });\n                            selection.transition().style('opacity', 1);\n                        }\n                    }, 10);\n                }\n            });\n        });\n        observer.observe(selection.node(), {attributes: true, childList: true, characterData: true});\n    };\n\n    c3_chart_internal_fn.bindResize = function () {\n        var $$ = this, config = $$.config;\n\n        $$.resizeFunction = $$.generateResize();\n\n        $$.resizeFunction.add(function () {\n            config.onresize.call($$);\n        });\n        if (config.resize_auto) {\n            $$.resizeFunction.add(function () {\n                if ($$.resizeTimeout !== undefined) {\n                    window.clearTimeout($$.resizeTimeout);\n                }\n                $$.resizeTimeout = window.setTimeout(function () {\n                    delete $$.resizeTimeout;\n                    $$.api.flush();\n                }, 100);\n            });\n        }\n        $$.resizeFunction.add(function () {\n            config.onresized.call($$);\n        });\n\n        if (window.attachEvent) {\n            window.attachEvent('onresize', $$.resizeFunction);\n        } else if (window.addEventListener) {\n            window.addEventListener('resize', $$.resizeFunction, false);\n        } else {\n            // fallback to this, if this is a very old browser\n            var wrapper = window.onresize;\n            if (!wrapper) {\n                // create a wrapper that will call all charts\n                wrapper = $$.generateResize();\n            } else if (!wrapper.add || !wrapper.remove) {\n                // there is already a handler registered, make sure we call it too\n                wrapper = $$.generateResize();\n                wrapper.add(window.onresize);\n            }\n            // add this graph to the wrapper, we will be removed if the user calls destroy\n            wrapper.add($$.resizeFunction);\n            window.onresize = wrapper;\n        }\n    };\n\n    c3_chart_internal_fn.generateResize = function () {\n        var resizeFunctions = [];\n        function callResizeFunctions() {\n            resizeFunctions.forEach(function (f) {\n                f();\n            });\n        }\n        callResizeFunctions.add = function (f) {\n            resizeFunctions.push(f);\n        };\n        callResizeFunctions.remove = function (f) {\n            for (var i = 0; i < resizeFunctions.length; i++) {\n                if (resizeFunctions[i] === f) {\n                    resizeFunctions.splice(i, 1);\n                    break;\n                }\n            }\n        };\n        return callResizeFunctions;\n    };\n\n    c3_chart_internal_fn.endall = function (transition, callback) {\n        var n = 0;\n        transition\n            .each(function () { ++n; })\n            .each(\"end\", function () {\n                if (!--n) { callback.apply(this, arguments); }\n            });\n    };\n    c3_chart_internal_fn.generateWait = function () {\n        var transitionsToWait = [],\n            f = function (transition, callback) {\n                var timer = setInterval(function () {\n                    var done = 0;\n                    transitionsToWait.forEach(function (t) {\n                        if (t.empty()) {\n                            done += 1;\n                            return;\n                        }\n                        try {\n                            t.transition();\n                        } catch (e) {\n                            done += 1;\n                        }\n                    });\n                    if (done === transitionsToWait.length) {\n                        clearInterval(timer);\n                        if (callback) { callback(); }\n                    }\n                }, 10);\n            };\n        f.add = function (transition) {\n            transitionsToWait.push(transition);\n        };\n        return f;\n    };\n\n    c3_chart_internal_fn.parseDate = function (date) {\n        var $$ = this, parsedDate;\n        if (date instanceof Date) {\n            parsedDate = date;\n        } else if (typeof date === 'string') {\n            parsedDate = $$.dataTimeFormat($$.config.data_xFormat).parse(date);\n        } else if (typeof date === 'number' && !isNaN(date)) {\n            parsedDate = new Date(+date);\n        }\n        if (!parsedDate || isNaN(+parsedDate)) {\n            window.console.error(\"Failed to parse x '\" + date + \"' to Date object\");\n        }\n        return parsedDate;\n    };\n\n    c3_chart_internal_fn.isTabVisible = function () {\n        var hidden;\n        if (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support\n            hidden = \"hidden\";\n        } else if (typeof document.mozHidden !== \"undefined\") {\n            hidden = \"mozHidden\";\n        } else if (typeof document.msHidden !== \"undefined\") {\n            hidden = \"msHidden\";\n        } else if (typeof document.webkitHidden !== \"undefined\") {\n            hidden = \"webkitHidden\";\n        }\n\n        return document[hidden] ? false : true;\n    };\n\n    c3_chart_internal_fn.getDefaultConfig = function () {\n        var config = {\n            bindto: '#chart',\n            svg_classname: undefined,\n            size_width: undefined,\n            size_height: undefined,\n            padding_left: undefined,\n            padding_right: undefined,\n            padding_top: undefined,\n            padding_bottom: undefined,\n            resize_auto: true,\n            zoom_enabled: false,\n            zoom_extent: undefined,\n            zoom_privileged: false,\n            zoom_rescale: false,\n            zoom_onzoom: function () {},\n            zoom_onzoomstart: function () {},\n            zoom_onzoomend: function () {},\n            zoom_x_min: undefined,\n            zoom_x_max: undefined,\n            interaction_brighten: true,\n            interaction_enabled: true,\n            onmouseover: function () {},\n            onmouseout: function () {},\n            onresize: function () {},\n            onresized: function () {},\n            oninit: function () {},\n            onrendered: function () {},\n            transition_duration: 350,\n            data_x: undefined,\n            data_xs: {},\n            data_xFormat: '%Y-%m-%d',\n            data_xLocaltime: true,\n            data_xSort: true,\n            data_idConverter: function (id) { return id; },\n            data_names: {},\n            data_classes: {},\n            data_groups: [],\n            data_axes: {},\n            data_type: undefined,\n            data_types: {},\n            data_labels: {},\n            data_order: 'desc',\n            data_regions: {},\n            data_color: undefined,\n            data_colors: {},\n            data_hide: false,\n            data_filter: undefined,\n            data_selection_enabled: false,\n            data_selection_grouped: false,\n            data_selection_isselectable: function () { return true; },\n            data_selection_multiple: true,\n            data_selection_draggable: false,\n            data_onclick: function () {},\n            data_onmouseover: function () {},\n            data_onmouseout: function () {},\n            data_onselected: function () {},\n            data_onunselected: function () {},\n            data_url: undefined,\n            data_headers: undefined,\n            data_json: undefined,\n            data_rows: undefined,\n            data_columns: undefined,\n            data_mimeType: undefined,\n            data_keys: undefined,\n            // configuration for no plot-able data supplied.\n            data_empty_label_text: \"\",\n            // subchart\n            subchart_show: false,\n            subchart_size_height: 60,\n            subchart_axis_x_show: true,\n            subchart_onbrush: function () {},\n            // color\n            color_pattern: [],\n            color_threshold: {},\n            // legend\n            legend_show: true,\n            legend_hide: false,\n            legend_position: 'bottom',\n            legend_inset_anchor: 'top-left',\n            legend_inset_x: 10,\n            legend_inset_y: 0,\n            legend_inset_step: undefined,\n            legend_item_onclick: undefined,\n            legend_item_onmouseover: undefined,\n            legend_item_onmouseout: undefined,\n            legend_equally: false,\n            legend_padding: 0,\n            legend_item_tile_width: 10,\n            legend_item_tile_height: 10,\n            // axis\n            axis_rotated: false,\n            axis_x_show: true,\n            axis_x_type: 'indexed',\n            axis_x_localtime: true,\n            axis_x_categories: [],\n            axis_x_tick_centered: false,\n            axis_x_tick_format: undefined,\n            axis_x_tick_culling: {},\n            axis_x_tick_culling_max: 10,\n            axis_x_tick_count: undefined,\n            axis_x_tick_fit: true,\n            axis_x_tick_values: null,\n            axis_x_tick_rotate: 0,\n            axis_x_tick_outer: true,\n            axis_x_tick_multiline: true,\n            axis_x_tick_width: null,\n            axis_x_max: undefined,\n            axis_x_min: undefined,\n            axis_x_padding: {},\n            axis_x_height: undefined,\n            axis_x_extent: undefined,\n            axis_x_label: {},\n            axis_y_show: true,\n            axis_y_type: undefined,\n            axis_y_max: undefined,\n            axis_y_min: undefined,\n            axis_y_inverted: false,\n            axis_y_center: undefined,\n            axis_y_inner: undefined,\n            axis_y_label: {},\n            axis_y_tick_format: undefined,\n            axis_y_tick_outer: true,\n            axis_y_tick_values: null,        \n            axis_y_tick_rotate: 0,\n            axis_y_tick_count: undefined,\n            axis_y_tick_time_value: undefined,\n            axis_y_tick_time_interval: undefined,\n            axis_y_padding: {},\n            axis_y_default: undefined,\n            axis_y2_show: false,\n            axis_y2_max: undefined,\n            axis_y2_min: undefined,\n            axis_y2_inverted: false,\n            axis_y2_center: undefined,\n            axis_y2_inner: undefined,\n            axis_y2_label: {},\n            axis_y2_tick_format: undefined,\n            axis_y2_tick_outer: true,\n            axis_y2_tick_values: null,\n            axis_y2_tick_count: undefined,\n            axis_y2_padding: {},\n            axis_y2_default: undefined,\n            // grid\n            grid_x_show: false,\n            grid_x_type: 'tick',\n            grid_x_lines: [],\n            grid_y_show: false,\n            // not used\n            // grid_y_type: 'tick',\n            grid_y_lines: [],\n            grid_y_ticks: 10,\n            grid_focus_show: true,\n            grid_lines_front: true,\n            // point - point of each data\n            point_show: true,\n            point_r: 2.5,\n            point_sensitivity: 10,\n            point_focus_expand_enabled: true,\n            point_focus_expand_r: undefined,\n            point_select_r: undefined,\n            // line\n            line_connectNull: false,\n            line_step_type: 'step',\n            // bar\n            bar_width: undefined,\n            bar_width_ratio: 0.6,\n            bar_width_max: undefined,\n            bar_zerobased: true,\n            // area\n            area_zerobased: true,\n            area_above: false,\n            // pie\n            pie_label_show: true,\n            pie_label_format: undefined,\n            pie_label_threshold: 0.05,\n            pie_label_ratio: undefined,\n            pie_expand: {},\n            pie_expand_duration: 50,\n            // gauge\n            gauge_fullCircle: false,\n            gauge_label_show: true,\n            gauge_label_format: undefined,\n            gauge_min: 0,\n            gauge_max: 100,\n            gauge_startingAngle: -1 * Math.PI/2,\n            gauge_units: undefined,\n            gauge_width: undefined,\n            gauge_expand: {},\n            gauge_expand_duration: 50,\n            // donut\n            donut_label_show: true,\n            donut_label_format: undefined,\n            donut_label_threshold: 0.05,\n            donut_label_ratio: undefined,\n            donut_width: undefined,\n            donut_title: \"\",\n            donut_expand: {},\n            donut_expand_duration: 50,\n            // spline\n            spline_interpolation_type: 'cardinal',\n            // region - region to change style\n            regions: [],\n            // tooltip - show when mouseover on each data\n            tooltip_show: true,\n            tooltip_grouped: true,\n            tooltip_format_title: undefined,\n            tooltip_format_name: undefined,\n            tooltip_format_value: undefined,\n            tooltip_position: undefined,\n            tooltip_contents: function (d, defaultTitleFormat, defaultValueFormat, color) {\n                return this.getTooltipContent ? this.getTooltipContent(d, defaultTitleFormat, defaultValueFormat, color) : '';\n            },\n            tooltip_init_show: false,\n            tooltip_init_x: 0,\n            tooltip_init_position: {top: '0px', left: '50px'},\n            tooltip_onshow: function () {},\n            tooltip_onhide: function () {},\n            // title\n            title_text: undefined,\n            title_padding: {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            },\n            title_position: 'top-center',\n        };\n\n        Object.keys(this.additionalConfig).forEach(function (key) {\n            config[key] = this.additionalConfig[key];\n        }, this);\n\n        return config;\n    };\n    c3_chart_internal_fn.additionalConfig = {};\n\n    c3_chart_internal_fn.loadConfig = function (config) {\n        var this_config = this.config, target, keys, read;\n        function find() {\n            var key = keys.shift();\n    //        console.log(\"key =>\", key, \", target =>\", target);\n            if (key && target && typeof target === 'object' && key in target) {\n                target = target[key];\n                return find();\n            }\n            else if (!key) {\n                return target;\n            }\n            else {\n                return undefined;\n            }\n        }\n        Object.keys(this_config).forEach(function (key) {\n            target = config;\n            keys = key.split('_');\n            read = find();\n    //        console.log(\"CONFIG : \", key, read);\n            if (isDefined(read)) {\n                this_config[key] = read;\n            }\n        });\n    };\n\n    c3_chart_internal_fn.getScale = function (min, max, forTimeseries) {\n        return (forTimeseries ? this.d3.time.scale() : this.d3.scale.linear()).range([min, max]);\n    };\n    c3_chart_internal_fn.getX = function (min, max, domain, offset) {\n        var $$ = this,\n            scale = $$.getScale(min, max, $$.isTimeSeries()),\n            _scale = domain ? scale.domain(domain) : scale, key;\n        // Define customized scale if categorized axis\n        if ($$.isCategorized()) {\n            offset = offset || function () { return 0; };\n            scale = function (d, raw) {\n                var v = _scale(d) + offset(d);\n                return raw ? v : Math.ceil(v);\n            };\n        } else {\n            scale = function (d, raw) {\n                var v = _scale(d);\n                return raw ? v : Math.ceil(v);\n            };\n        }\n        // define functions\n        for (key in _scale) {\n            scale[key] = _scale[key];\n        }\n        scale.orgDomain = function () {\n            return _scale.domain();\n        };\n        // define custom domain() for categorized axis\n        if ($$.isCategorized()) {\n            scale.domain = function (domain) {\n                if (!arguments.length) {\n                    domain = this.orgDomain();\n                    return [domain[0], domain[1] + 1];\n                }\n                _scale.domain(domain);\n                return scale;\n            };\n        }\n        return scale;\n    };\n    c3_chart_internal_fn.getY = function (min, max, domain) {\n        var scale = this.getScale(min, max, this.isTimeSeriesY());\n        if (domain) { scale.domain(domain); }\n        return scale;\n    };\n    c3_chart_internal_fn.getYScale = function (id) {\n        return this.axis.getId(id) === 'y2' ? this.y2 : this.y;\n    };\n    c3_chart_internal_fn.getSubYScale = function (id) {\n        return this.axis.getId(id) === 'y2' ? this.subY2 : this.subY;\n    };\n    c3_chart_internal_fn.updateScales = function () {\n        var $$ = this, config = $$.config,\n            forInit = !$$.x;\n        // update edges\n        $$.xMin = config.axis_rotated ? 1 : 0;\n        $$.xMax = config.axis_rotated ? $$.height : $$.width;\n        $$.yMin = config.axis_rotated ? 0 : $$.height;\n        $$.yMax = config.axis_rotated ? $$.width : 1;\n        $$.subXMin = $$.xMin;\n        $$.subXMax = $$.xMax;\n        $$.subYMin = config.axis_rotated ? 0 : $$.height2;\n        $$.subYMax = config.axis_rotated ? $$.width2 : 1;\n        // update scales\n        $$.x = $$.getX($$.xMin, $$.xMax, forInit ? undefined : $$.x.orgDomain(), function () { return $$.xAxis.tickOffset(); });\n        $$.y = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y_default : $$.y.domain());\n        $$.y2 = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y2_default : $$.y2.domain());\n        $$.subX = $$.getX($$.xMin, $$.xMax, $$.orgXDomain, function (d) { return d % 1 ? 0 : $$.subXAxis.tickOffset(); });\n        $$.subY = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y_default : $$.subY.domain());\n        $$.subY2 = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y2_default : $$.subY2.domain());\n        // update axes\n        $$.xAxisTickFormat = $$.axis.getXAxisTickFormat();\n        $$.xAxisTickValues = $$.axis.getXAxisTickValues();\n        $$.yAxisTickValues = $$.axis.getYAxisTickValues();\n        $$.y2AxisTickValues = $$.axis.getY2AxisTickValues();\n\n        $$.xAxis = $$.axis.getXAxis($$.x, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n        $$.subXAxis = $$.axis.getXAxis($$.subX, $$.subXOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n        $$.yAxis = $$.axis.getYAxis($$.y, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, config.axis_y_tick_outer);\n        $$.y2Axis = $$.axis.getYAxis($$.y2, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, config.axis_y2_tick_outer);\n\n        // Set initialized scales to brush and zoom\n        if (!forInit) {\n            if ($$.brush) { $$.brush.scale($$.subX); }\n            if (config.zoom_enabled) { $$.zoom.scale($$.x); }\n        }\n        // update for arc\n        if ($$.updateArc) { $$.updateArc(); }\n    };\n\n    c3_chart_internal_fn.getYDomainMin = function (targets) {\n        var $$ = this, config = $$.config,\n            ids = $$.mapToIds(targets), ys = $$.getValuesAsIdKeyed(targets),\n            j, k, baseId, idsInGroup, id, hasNegativeValue;\n        if (config.data_groups.length > 0) {\n            hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n            for (j = 0; j < config.data_groups.length; j++) {\n                // Determine baseId\n                idsInGroup = config.data_groups[j].filter(function (id) { return ids.indexOf(id) >= 0; });\n                if (idsInGroup.length === 0) { continue; }\n                baseId = idsInGroup[0];\n                // Consider negative values\n                if (hasNegativeValue && ys[baseId]) {\n                    ys[baseId].forEach(function (v, i) {\n                        ys[baseId][i] = v < 0 ? v : 0;\n                    });\n                }\n                // Compute min\n                for (k = 1; k < idsInGroup.length; k++) {\n                    id = idsInGroup[k];\n                    if (! ys[id]) { continue; }\n                    ys[id].forEach(function (v, i) {\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasNegativeValue && +v > 0)) {\n                            ys[baseId][i] += +v;\n                        }\n                    });\n                }\n            }\n        }\n        return $$.d3.min(Object.keys(ys).map(function (key) { return $$.d3.min(ys[key]); }));\n    };\n    c3_chart_internal_fn.getYDomainMax = function (targets) {\n        var $$ = this, config = $$.config,\n            ids = $$.mapToIds(targets), ys = $$.getValuesAsIdKeyed(targets),\n            j, k, baseId, idsInGroup, id, hasPositiveValue;\n        if (config.data_groups.length > 0) {\n            hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n            for (j = 0; j < config.data_groups.length; j++) {\n                // Determine baseId\n                idsInGroup = config.data_groups[j].filter(function (id) { return ids.indexOf(id) >= 0; });\n                if (idsInGroup.length === 0) { continue; }\n                baseId = idsInGroup[0];\n                // Consider positive values\n                if (hasPositiveValue && ys[baseId]) {\n                    ys[baseId].forEach(function (v, i) {\n                        ys[baseId][i] = v > 0 ? v : 0;\n                    });\n                }\n                // Compute max\n                for (k = 1; k < idsInGroup.length; k++) {\n                    id = idsInGroup[k];\n                    if (! ys[id]) { continue; }\n                    ys[id].forEach(function (v, i) {\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasPositiveValue && +v < 0)) {\n                            ys[baseId][i] += +v;\n                        }\n                    });\n                }\n            }\n        }\n        return $$.d3.max(Object.keys(ys).map(function (key) { return $$.d3.max(ys[key]); }));\n    };\n    c3_chart_internal_fn.getYDomain = function (targets, axisId, xDomain) {\n        var $$ = this, config = $$.config,\n            targetsByAxisId = targets.filter(function (t) { return $$.axis.getId(t.id) === axisId; }),\n            yTargets = xDomain ? $$.filterByXDomain(targetsByAxisId, xDomain) : targetsByAxisId,\n            yMin = axisId === 'y2' ? config.axis_y2_min : config.axis_y_min,\n            yMax = axisId === 'y2' ? config.axis_y2_max : config.axis_y_max,\n            yDomainMin = $$.getYDomainMin(yTargets),\n            yDomainMax = $$.getYDomainMax(yTargets),\n            domain, domainLength, padding, padding_top, padding_bottom,\n            center = axisId === 'y2' ? config.axis_y2_center : config.axis_y_center,\n            yDomainAbs, lengths, diff, ratio, isAllPositive, isAllNegative,\n            isZeroBased = ($$.hasType('bar', yTargets) && config.bar_zerobased) || ($$.hasType('area', yTargets) && config.area_zerobased),\n            isInverted = axisId === 'y2' ? config.axis_y2_inverted : config.axis_y_inverted,\n            showHorizontalDataLabel = $$.hasDataLabel() && config.axis_rotated,\n            showVerticalDataLabel = $$.hasDataLabel() && !config.axis_rotated;\n\n        // MEMO: avoid inverting domain unexpectedly\n        yDomainMin = isValue(yMin) ? yMin : isValue(yMax) ? (yDomainMin < yMax ? yDomainMin : yMax - 10) : yDomainMin;\n        yDomainMax = isValue(yMax) ? yMax : isValue(yMin) ? (yMin < yDomainMax ? yDomainMax : yMin + 10) : yDomainMax;\n\n        if (yTargets.length === 0) { // use current domain if target of axisId is none\n            return axisId === 'y2' ? $$.y2.domain() : $$.y.domain();\n        }\n        if (isNaN(yDomainMin)) { // set minimum to zero when not number\n            yDomainMin = 0;\n        }\n        if (isNaN(yDomainMax)) { // set maximum to have same value as yDomainMin\n            yDomainMax = yDomainMin;\n        }\n        if (yDomainMin === yDomainMax) {\n            yDomainMin < 0 ? yDomainMax = 0 : yDomainMin = 0;\n        }\n        isAllPositive = yDomainMin >= 0 && yDomainMax >= 0;\n        isAllNegative = yDomainMin <= 0 && yDomainMax <= 0;\n\n        // Cancel zerobased if axis_*_min / axis_*_max specified\n        if ((isValue(yMin) && isAllPositive) || (isValue(yMax) && isAllNegative)) {\n            isZeroBased = false;\n        }\n\n        // Bar/Area chart should be 0-based if all positive|negative\n        if (isZeroBased) {\n            if (isAllPositive) { yDomainMin = 0; }\n            if (isAllNegative) { yDomainMax = 0; }\n        }\n\n        domainLength = Math.abs(yDomainMax - yDomainMin);\n        padding = padding_top = padding_bottom = domainLength * 0.1;\n\n        if (typeof center !== 'undefined') {\n            yDomainAbs = Math.max(Math.abs(yDomainMin), Math.abs(yDomainMax));\n            yDomainMax = center + yDomainAbs;\n            yDomainMin = center - yDomainAbs;\n        }\n        // add padding for data label\n        if (showHorizontalDataLabel) {\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'width');\n            diff = diffDomain($$.y.range());\n            ratio = [lengths[0] / diff, lengths[1] / diff];\n            padding_top += domainLength * (ratio[1] / (1 - ratio[0] - ratio[1]));\n            padding_bottom += domainLength * (ratio[0] / (1 - ratio[0] - ratio[1]));\n        } else if (showVerticalDataLabel) {\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'height');\n            padding_top += $$.axis.convertPixelsToAxisPadding(lengths[1], domainLength);\n            padding_bottom += $$.axis.convertPixelsToAxisPadding(lengths[0], domainLength);\n        }\n        if (axisId === 'y' && notEmpty(config.axis_y_padding)) {\n            padding_top = $$.axis.getPadding(config.axis_y_padding, 'top', padding_top, domainLength);\n            padding_bottom = $$.axis.getPadding(config.axis_y_padding, 'bottom', padding_bottom, domainLength);\n        }\n        if (axisId === 'y2' && notEmpty(config.axis_y2_padding)) {\n            padding_top = $$.axis.getPadding(config.axis_y2_padding, 'top', padding_top, domainLength);\n            padding_bottom = $$.axis.getPadding(config.axis_y2_padding, 'bottom', padding_bottom, domainLength);\n        }\n        // Bar/Area chart should be 0-based if all positive|negative\n        if (isZeroBased) {\n            if (isAllPositive) { padding_bottom = yDomainMin; }\n            if (isAllNegative) { padding_top = -yDomainMax; }\n        }\n        domain = [yDomainMin - padding_bottom, yDomainMax + padding_top];\n        return isInverted ? domain.reverse() : domain;\n    };\n    c3_chart_internal_fn.getXDomainMin = function (targets) {\n        var $$ = this, config = $$.config;\n        return isDefined(config.axis_x_min) ?\n            ($$.isTimeSeries() ? this.parseDate(config.axis_x_min) : config.axis_x_min) :\n        $$.d3.min(targets, function (t) { return $$.d3.min(t.values, function (v) { return v.x; }); });\n    };\n    c3_chart_internal_fn.getXDomainMax = function (targets) {\n        var $$ = this, config = $$.config;\n        return isDefined(config.axis_x_max) ?\n            ($$.isTimeSeries() ? this.parseDate(config.axis_x_max) : config.axis_x_max) :\n        $$.d3.max(targets, function (t) { return $$.d3.max(t.values, function (v) { return v.x; }); });\n    };\n    c3_chart_internal_fn.getXDomainPadding = function (domain) {\n        var $$ = this, config = $$.config,\n            diff = domain[1] - domain[0],\n            maxDataCount, padding, paddingLeft, paddingRight;\n        if ($$.isCategorized()) {\n            padding = 0;\n        } else if ($$.hasType('bar')) {\n            maxDataCount = $$.getMaxDataCount();\n            padding = maxDataCount > 1 ? (diff / (maxDataCount - 1)) / 2 : 0.5;\n        } else {\n            padding = diff * 0.01;\n        }\n        if (typeof config.axis_x_padding === 'object' && notEmpty(config.axis_x_padding)) {\n            paddingLeft = isValue(config.axis_x_padding.left) ? config.axis_x_padding.left : padding;\n            paddingRight = isValue(config.axis_x_padding.right) ? config.axis_x_padding.right : padding;\n        } else if (typeof config.axis_x_padding === 'number') {\n            paddingLeft = paddingRight = config.axis_x_padding;\n        } else {\n            paddingLeft = paddingRight = padding;\n        }\n        return {left: paddingLeft, right: paddingRight};\n    };\n    c3_chart_internal_fn.getXDomain = function (targets) {\n        var $$ = this,\n            xDomain = [$$.getXDomainMin(targets), $$.getXDomainMax(targets)],\n            firstX = xDomain[0], lastX = xDomain[1],\n            padding = $$.getXDomainPadding(xDomain),\n            min = 0, max = 0;\n        // show center of x domain if min and max are the same\n        if ((firstX - lastX) === 0 && !$$.isCategorized()) {\n            if ($$.isTimeSeries()) {\n                firstX = new Date(firstX.getTime() * 0.5);\n                lastX = new Date(lastX.getTime() * 1.5);\n            } else {\n                firstX = firstX === 0 ? 1 : (firstX * 0.5);\n                lastX = lastX === 0 ? -1 : (lastX * 1.5);\n            }\n        }\n        if (firstX || firstX === 0) {\n            min = $$.isTimeSeries() ? new Date(firstX.getTime() - padding.left) : firstX - padding.left;\n        }\n        if (lastX || lastX === 0) {\n            max = $$.isTimeSeries() ? new Date(lastX.getTime() + padding.right) : lastX + padding.right;\n        }\n        return [min, max];\n    };\n    c3_chart_internal_fn.updateXDomain = function (targets, withUpdateXDomain, withUpdateOrgXDomain, withTrim, domain) {\n        var $$ = this, config = $$.config;\n\n        if (withUpdateOrgXDomain) {\n            $$.x.domain(domain ? domain : $$.d3.extent($$.getXDomain(targets)));\n            $$.orgXDomain = $$.x.domain();\n            if (config.zoom_enabled) { $$.zoom.scale($$.x).updateScaleExtent(); }\n            $$.subX.domain($$.x.domain());\n            if ($$.brush) { $$.brush.scale($$.subX); }\n        }\n        if (withUpdateXDomain) {\n            $$.x.domain(domain ? domain : (!$$.brush || $$.brush.empty()) ? $$.orgXDomain : $$.brush.extent());\n            if (config.zoom_enabled) { $$.zoom.scale($$.x).updateScaleExtent(); }\n        }\n\n        // Trim domain when too big by zoom mousemove event\n        if (withTrim) { $$.x.domain($$.trimXDomain($$.x.orgDomain())); }\n\n        return $$.x.domain();\n    };\n    c3_chart_internal_fn.trimXDomain = function (domain) {\n        var zoomDomain = this.getZoomDomain(),\n            min = zoomDomain[0], max = zoomDomain[1];\n        if (domain[0] <= min) {\n            domain[1] = +domain[1] + (min - domain[0]);\n            domain[0] = min;\n        }\n        if (max <= domain[1]) {\n            domain[0] = +domain[0] - (domain[1] - max);\n            domain[1] = max;\n        }\n        return domain;\n    };\n\n    c3_chart_internal_fn.isX = function (key) {\n        var $$ = this, config = $$.config;\n        return (config.data_x && key === config.data_x) || (notEmpty(config.data_xs) && hasValue(config.data_xs, key));\n    };\n    c3_chart_internal_fn.isNotX = function (key) {\n        return !this.isX(key);\n    };\n    c3_chart_internal_fn.getXKey = function (id) {\n        var $$ = this, config = $$.config;\n        return config.data_x ? config.data_x : notEmpty(config.data_xs) ? config.data_xs[id] : null;\n    };\n    c3_chart_internal_fn.getXValuesOfXKey = function (key, targets) {\n        var $$ = this,\n            xValues, ids = targets && notEmpty(targets) ? $$.mapToIds(targets) : [];\n        ids.forEach(function (id) {\n            if ($$.getXKey(id) === key) {\n                xValues = $$.data.xs[id];\n            }\n        });\n        return xValues;\n    };\n    c3_chart_internal_fn.getIndexByX = function (x) {\n        var $$ = this,\n            data = $$.filterByX($$.data.targets, x);\n        return data.length ? data[0].index : null;\n    };\n    c3_chart_internal_fn.getXValue = function (id, i) {\n        var $$ = this;\n        return id in $$.data.xs && $$.data.xs[id] && isValue($$.data.xs[id][i]) ? $$.data.xs[id][i] : i;\n    };\n    c3_chart_internal_fn.getOtherTargetXs = function () {\n        var $$ = this,\n            idsForX = Object.keys($$.data.xs);\n        return idsForX.length ? $$.data.xs[idsForX[0]] : null;\n    };\n    c3_chart_internal_fn.getOtherTargetX = function (index) {\n        var xs = this.getOtherTargetXs();\n        return xs && index < xs.length ? xs[index] : null;\n    };\n    c3_chart_internal_fn.addXs = function (xs) {\n        var $$ = this;\n        Object.keys(xs).forEach(function (id) {\n            $$.config.data_xs[id] = xs[id];\n        });\n    };\n    c3_chart_internal_fn.hasMultipleX = function (xs) {\n        return this.d3.set(Object.keys(xs).map(function (id) { return xs[id]; })).size() > 1;\n    };\n    c3_chart_internal_fn.isMultipleX = function () {\n        return notEmpty(this.config.data_xs) || !this.config.data_xSort || this.hasType('scatter');\n    };\n    c3_chart_internal_fn.addName = function (data) {\n        var $$ = this, name;\n        if (data) {\n            name = $$.config.data_names[data.id];\n            data.name = name !== undefined ? name : data.id;\n        }\n        return data;\n    };\n    c3_chart_internal_fn.getValueOnIndex = function (values, index) {\n        var valueOnIndex = values.filter(function (v) { return v.index === index; });\n        return valueOnIndex.length ? valueOnIndex[0] : null;\n    };\n    c3_chart_internal_fn.updateTargetX = function (targets, x) {\n        var $$ = this;\n        targets.forEach(function (t) {\n            t.values.forEach(function (v, i) {\n                v.x = $$.generateTargetX(x[i], t.id, i);\n            });\n            $$.data.xs[t.id] = x;\n        });\n    };\n    c3_chart_internal_fn.updateTargetXs = function (targets, xs) {\n        var $$ = this;\n        targets.forEach(function (t) {\n            if (xs[t.id]) {\n                $$.updateTargetX([t], xs[t.id]);\n            }\n        });\n    };\n    c3_chart_internal_fn.generateTargetX = function (rawX, id, index) {\n        var $$ = this, x;\n        if ($$.isTimeSeries()) {\n            x = rawX ? $$.parseDate(rawX) : $$.parseDate($$.getXValue(id, index));\n        }\n        else if ($$.isCustomX() && !$$.isCategorized()) {\n            x = isValue(rawX) ? +rawX : $$.getXValue(id, index);\n        }\n        else {\n            x = index;\n        }\n        return x;\n    };\n    c3_chart_internal_fn.cloneTarget = function (target) {\n        return {\n            id : target.id,\n            id_org : target.id_org,\n            values : target.values.map(function (d) {\n                return {x: d.x, value: d.value, id: d.id};\n            })\n        };\n    };\n    c3_chart_internal_fn.updateXs = function () {\n        var $$ = this;\n        if ($$.data.targets.length) {\n            $$.xs = [];\n            $$.data.targets[0].values.forEach(function (v) {\n                $$.xs[v.index] = v.x;\n            });\n        }\n    };\n    c3_chart_internal_fn.getPrevX = function (i) {\n        var x = this.xs[i - 1];\n        return typeof x !== 'undefined' ? x : null;\n    };\n    c3_chart_internal_fn.getNextX = function (i) {\n        var x = this.xs[i + 1];\n        return typeof x !== 'undefined' ? x : null;\n    };\n    c3_chart_internal_fn.getMaxDataCount = function () {\n        var $$ = this;\n        return $$.d3.max($$.data.targets, function (t) { return t.values.length; });\n    };\n    c3_chart_internal_fn.getMaxDataCountTarget = function (targets) {\n        var length = targets.length, max = 0, maxTarget;\n        if (length > 1) {\n            targets.forEach(function (t) {\n                if (t.values.length > max) {\n                    maxTarget = t;\n                    max = t.values.length;\n                }\n            });\n        } else {\n            maxTarget = length ? targets[0] : null;\n        }\n        return maxTarget;\n    };\n    c3_chart_internal_fn.getEdgeX = function (targets) {\n        var $$ = this;\n        return !targets.length ? [0, 0] : [\n            $$.d3.min(targets, function (t) { return t.values[0].x; }),\n            $$.d3.max(targets, function (t) { return t.values[t.values.length - 1].x; })\n        ];\n    };\n    c3_chart_internal_fn.mapToIds = function (targets) {\n        return targets.map(function (d) { return d.id; });\n    };\n    c3_chart_internal_fn.mapToTargetIds = function (ids) {\n        var $$ = this;\n        return ids ? [].concat(ids) : $$.mapToIds($$.data.targets);\n    };\n    c3_chart_internal_fn.hasTarget = function (targets, id) {\n        var ids = this.mapToIds(targets), i;\n        for (i = 0; i < ids.length; i++) {\n            if (ids[i] === id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    c3_chart_internal_fn.isTargetToShow = function (targetId) {\n        return this.hiddenTargetIds.indexOf(targetId) < 0;\n    };\n    c3_chart_internal_fn.isLegendToShow = function (targetId) {\n        return this.hiddenLegendIds.indexOf(targetId) < 0;\n    };\n    c3_chart_internal_fn.filterTargetsToShow = function (targets) {\n        var $$ = this;\n        return targets.filter(function (t) { return $$.isTargetToShow(t.id); });\n    };\n    c3_chart_internal_fn.mapTargetsToUniqueXs = function (targets) {\n        var $$ = this;\n        var xs = $$.d3.set($$.d3.merge(targets.map(function (t) { return t.values.map(function (v) { return +v.x; }); }))).values();\n        xs = $$.isTimeSeries() ? xs.map(function (x) { return new Date(+x); }) : xs.map(function (x) { return +x; });\n        return xs.sort(function (a, b) { return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN; });\n    };\n    c3_chart_internal_fn.addHiddenTargetIds = function (targetIds) {\n        this.hiddenTargetIds = this.hiddenTargetIds.concat(targetIds);\n    };\n    c3_chart_internal_fn.removeHiddenTargetIds = function (targetIds) {\n        this.hiddenTargetIds = this.hiddenTargetIds.filter(function (id) { return targetIds.indexOf(id) < 0; });\n    };\n    c3_chart_internal_fn.addHiddenLegendIds = function (targetIds) {\n        this.hiddenLegendIds = this.hiddenLegendIds.concat(targetIds);\n    };\n    c3_chart_internal_fn.removeHiddenLegendIds = function (targetIds) {\n        this.hiddenLegendIds = this.hiddenLegendIds.filter(function (id) { return targetIds.indexOf(id) < 0; });\n    };\n    c3_chart_internal_fn.getValuesAsIdKeyed = function (targets) {\n        var ys = {};\n        targets.forEach(function (t) {\n            ys[t.id] = [];\n            t.values.forEach(function (v) {\n                ys[t.id].push(v.value);\n            });\n        });\n        return ys;\n    };\n    c3_chart_internal_fn.checkValueInTargets = function (targets, checker) {\n        var ids = Object.keys(targets), i, j, values;\n        for (i = 0; i < ids.length; i++) {\n            values = targets[ids[i]].values;\n            for (j = 0; j < values.length; j++) {\n                if (checker(values[j].value)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    c3_chart_internal_fn.hasNegativeValueInTargets = function (targets) {\n        return this.checkValueInTargets(targets, function (v) { return v < 0; });\n    };\n    c3_chart_internal_fn.hasPositiveValueInTargets = function (targets) {\n        return this.checkValueInTargets(targets, function (v) { return v > 0; });\n    };\n    c3_chart_internal_fn.isOrderDesc = function () {\n        var config = this.config;\n        return typeof(config.data_order) === 'string' && config.data_order.toLowerCase() === 'desc';\n    };\n    c3_chart_internal_fn.isOrderAsc = function () {\n        var config = this.config;\n        return typeof(config.data_order) === 'string' && config.data_order.toLowerCase() === 'asc';\n    };\n    c3_chart_internal_fn.orderTargets = function (targets) {\n        var $$ = this, config = $$.config, orderAsc = $$.isOrderAsc(), orderDesc = $$.isOrderDesc();\n        if (orderAsc || orderDesc) {\n            targets.sort(function (t1, t2) {\n                var reducer = function (p, c) { return p + Math.abs(c.value); };\n                var t1Sum = t1.values.reduce(reducer, 0),\n                    t2Sum = t2.values.reduce(reducer, 0);\n                return orderAsc ? t2Sum - t1Sum : t1Sum - t2Sum;\n            });\n        } else if (isFunction(config.data_order)) {\n            targets.sort(config.data_order);\n        } // TODO: accept name array for order\n        return targets;\n    };\n    c3_chart_internal_fn.filterByX = function (targets, x) {\n        return this.d3.merge(targets.map(function (t) { return t.values; })).filter(function (v) { return v.x - x === 0; });\n    };\n    c3_chart_internal_fn.filterRemoveNull = function (data) {\n        return data.filter(function (d) { return isValue(d.value); });\n    };\n    c3_chart_internal_fn.filterByXDomain = function (targets, xDomain) {\n        return targets.map(function (t) {\n            return {\n                id: t.id,\n                id_org: t.id_org,\n                values: t.values.filter(function (v) {\n                    return xDomain[0] <= v.x && v.x <= xDomain[1];\n                })\n            };\n        });\n    };\n    c3_chart_internal_fn.hasDataLabel = function () {\n        var config = this.config;\n        if (typeof config.data_labels === 'boolean' && config.data_labels) {\n            return true;\n        } else if (typeof config.data_labels === 'object' && notEmpty(config.data_labels)) {\n            return true;\n        }\n        return false;\n    };\n    c3_chart_internal_fn.getDataLabelLength = function (min, max, key) {\n        var $$ = this,\n            lengths = [0, 0], paddingCoef = 1.3;\n        $$.selectChart.select('svg').selectAll('.dummy')\n            .data([min, max])\n            .enter().append('text')\n            .text(function (d) { return $$.dataLabelFormat(d.id)(d); })\n            .each(function (d, i) {\n                lengths[i] = this.getBoundingClientRect()[key] * paddingCoef;\n            })\n            .remove();\n        return lengths;\n    };\n    c3_chart_internal_fn.isNoneArc = function (d) {\n        return this.hasTarget(this.data.targets, d.id);\n    },\n    c3_chart_internal_fn.isArc = function (d) {\n        return 'data' in d && this.hasTarget(this.data.targets, d.data.id);\n    };\n    c3_chart_internal_fn.findSameXOfValues = function (values, index) {\n        var i, targetX = values[index].x, sames = [];\n        for (i = index - 1; i >= 0; i--) {\n            if (targetX !== values[i].x) { break; }\n            sames.push(values[i]);\n        }\n        for (i = index; i < values.length; i++) {\n            if (targetX !== values[i].x) { break; }\n            sames.push(values[i]);\n        }\n        return sames;\n    };\n\n    c3_chart_internal_fn.findClosestFromTargets = function (targets, pos) {\n        var $$ = this, candidates;\n\n        // map to array of closest points of each target\n        candidates = targets.map(function (target) {\n            return $$.findClosest(target.values, pos);\n        });\n\n        // decide closest point and return\n        return $$.findClosest(candidates, pos);\n    };\n    c3_chart_internal_fn.findClosest = function (values, pos) {\n        var $$ = this, minDist = $$.config.point_sensitivity, closest;\n\n        // find mouseovering bar\n        values.filter(function (v) { return v && $$.isBarType(v.id); }).forEach(function (v) {\n            var shape = $$.main.select('.' + CLASS.bars + $$.getTargetSelectorSuffix(v.id) + ' .' + CLASS.bar + '-' + v.index).node();\n            if (!closest && $$.isWithinBar(shape)) {\n                closest = v;\n            }\n        });\n\n        // find closest point from non-bar\n        values.filter(function (v) { return v && !$$.isBarType(v.id); }).forEach(function (v) {\n            var d = $$.dist(v, pos);\n            if (d < minDist) {\n                minDist = d;\n                closest = v;\n            }\n        });\n\n        return closest;\n    };\n    c3_chart_internal_fn.dist = function (data, pos) {\n        var $$ = this, config = $$.config,\n            xIndex = config.axis_rotated ? 1 : 0,\n            yIndex = config.axis_rotated ? 0 : 1,\n            y = $$.circleY(data, data.index),\n            x = $$.x(data.x);\n        return Math.sqrt(Math.pow(x - pos[xIndex], 2) + Math.pow(y - pos[yIndex], 2));\n    };\n    c3_chart_internal_fn.convertValuesToStep = function (values) {\n        var converted = [].concat(values), i;\n\n        if (!this.isCategorized()) {\n            return values;\n        }\n\n        for (i = values.length + 1; 0 < i; i--) {\n            converted[i] = converted[i - 1];\n        }\n\n        converted[0] = {\n            x: converted[0].x - 1,\n            value: converted[0].value,\n            id: converted[0].id\n        };\n        converted[values.length + 1] = {\n            x: converted[values.length].x + 1,\n            value: converted[values.length].value,\n            id: converted[values.length].id\n        };\n\n        return converted;\n    };\n    c3_chart_internal_fn.updateDataAttributes = function (name, attrs) {\n        var $$ = this, config = $$.config, current = config['data_' + name];\n        if (typeof attrs === 'undefined') { return current; }\n        Object.keys(attrs).forEach(function (id) {\n            current[id] = attrs[id];\n        });\n        $$.redraw({withLegend: true});\n        return current;\n    };\n\n    c3_chart_internal_fn.convertUrlToData = function (url, mimeType, headers, keys, done) {\n        var $$ = this, type = mimeType ? mimeType : 'csv';\n        var req = $$.d3.xhr(url);\n        if (headers) {\n            Object.keys(headers).forEach(function (header) {\n                req.header(header, headers[header]);\n            });\n        }\n        req.get(function (error, data) {\n            var d;\n            if (!data) {\n                throw new Error(error.responseURL + ' ' + error.status + ' (' + error.statusText + ')');\n            }\n            if (type === 'json') {\n                d = $$.convertJsonToData(JSON.parse(data.response), keys);\n            } else if (type === 'tsv') {\n                d = $$.convertTsvToData(data.response);\n            } else {\n                d = $$.convertCsvToData(data.response);\n            }\n            done.call($$, d);\n        });\n    };\n    c3_chart_internal_fn.convertXsvToData = function (xsv, parser) {\n        var rows = parser.parseRows(xsv), d;\n        if (rows.length === 1) {\n            d = [{}];\n            rows[0].forEach(function (id) {\n                d[0][id] = null;\n            });\n        } else {\n            d = parser.parse(xsv);\n        }\n        return d;\n    };\n    c3_chart_internal_fn.convertCsvToData = function (csv) {\n        return this.convertXsvToData(csv, this.d3.csv);\n    };\n    c3_chart_internal_fn.convertTsvToData = function (tsv) {\n        return this.convertXsvToData(tsv, this.d3.tsv);\n    };\n    c3_chart_internal_fn.convertJsonToData = function (json, keys) {\n        var $$ = this,\n            new_rows = [], targetKeys, data;\n        if (keys) { // when keys specified, json would be an array that includes objects\n            if (keys.x) {\n                targetKeys = keys.value.concat(keys.x);\n                $$.config.data_x = keys.x;\n            } else {\n                targetKeys = keys.value;\n            }\n            new_rows.push(targetKeys);\n            json.forEach(function (o) {\n                var new_row = [];\n                targetKeys.forEach(function (key) {\n                    // convert undefined to null because undefined data will be removed in convertDataToTargets()\n                    var v = $$.findValueInJson(o, key);\n                    if (isUndefined(v)) {\n                        v = null;\n                    }\n                    new_row.push(v);\n                });\n                new_rows.push(new_row);\n            });\n            data = $$.convertRowsToData(new_rows);\n        } else {\n            Object.keys(json).forEach(function (key) {\n                new_rows.push([key].concat(json[key]));\n            });\n            data = $$.convertColumnsToData(new_rows);\n        }\n        return data;\n    };\n    c3_chart_internal_fn.findValueInJson = function (object, path) {\n        path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties (replace [] with .)\n        path = path.replace(/^\\./, '');           // strip a leading dot\n        var pathArray = path.split('.');\n        for (var i = 0; i < pathArray.length; ++i) {\n            var k = pathArray[i];\n            if (k in object) {\n                object = object[k];\n            } else {\n                return;\n            }\n        }\n        return object;\n    };\n    c3_chart_internal_fn.convertRowsToData = function (rows) {\n        var keys = rows[0], new_row = {}, new_rows = [], i, j;\n        for (i = 1; i < rows.length; i++) {\n            new_row = {};\n            for (j = 0; j < rows[i].length; j++) {\n                if (isUndefined(rows[i][j])) {\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n                }\n                new_row[keys[j]] = rows[i][j];\n            }\n            new_rows.push(new_row);\n        }\n        return new_rows;\n    };\n    c3_chart_internal_fn.convertColumnsToData = function (columns) {\n        var new_rows = [], i, j, key;\n        for (i = 0; i < columns.length; i++) {\n            key = columns[i][0];\n            for (j = 1; j < columns[i].length; j++) {\n                if (isUndefined(new_rows[j - 1])) {\n                    new_rows[j - 1] = {};\n                }\n                if (isUndefined(columns[i][j])) {\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n                }\n                new_rows[j - 1][key] = columns[i][j];\n            }\n        }\n        return new_rows;\n    };\n    c3_chart_internal_fn.convertDataToTargets = function (data, appendXs) {\n        var $$ = this, config = $$.config,\n            ids = $$.d3.keys(data[0]).filter($$.isNotX, $$),\n            xs = $$.d3.keys(data[0]).filter($$.isX, $$),\n            targets;\n\n        // save x for update data by load when custom x and c3.x API\n        ids.forEach(function (id) {\n            var xKey = $$.getXKey(id);\n\n            if ($$.isCustomX() || $$.isTimeSeries()) {\n                // if included in input data\n                if (xs.indexOf(xKey) >= 0) {\n                    $$.data.xs[id] = (appendXs && $$.data.xs[id] ? $$.data.xs[id] : []).concat(\n                        data.map(function (d) { return d[xKey]; })\n                            .filter(isValue)\n                            .map(function (rawX, i) { return $$.generateTargetX(rawX, id, i); })\n                    );\n                }\n                // if not included in input data, find from preloaded data of other id's x\n                else if (config.data_x) {\n                    $$.data.xs[id] = $$.getOtherTargetXs();\n                }\n                // if not included in input data, find from preloaded data\n                else if (notEmpty(config.data_xs)) {\n                    $$.data.xs[id] = $$.getXValuesOfXKey(xKey, $$.data.targets);\n                }\n                // MEMO: if no x included, use same x of current will be used\n            } else {\n                $$.data.xs[id] = data.map(function (d, i) { return i; });\n            }\n        });\n\n\n        // check x is defined\n        ids.forEach(function (id) {\n            if (!$$.data.xs[id]) {\n                throw new Error('x is not defined for id = \"' + id + '\".');\n            }\n        });\n\n        // convert to target\n        targets = ids.map(function (id, index) {\n            var convertedId = config.data_idConverter(id);\n            return {\n                id: convertedId,\n                id_org: id,\n                values: data.map(function (d, i) {\n                    var xKey = $$.getXKey(id), rawX = d[xKey],\n                        value = d[id] !== null && !isNaN(d[id]) ? +d[id] : null, x;\n                    // use x as categories if custom x and categorized\n                    if ($$.isCustomX() && $$.isCategorized() && index === 0 && !isUndefined(rawX)) {\n                        if (index === 0 && i === 0) {\n                            config.axis_x_categories = [];\n                        }\n                        x = config.axis_x_categories.indexOf(rawX);\n                        if (x === -1) {\n                            x = config.axis_x_categories.length;\n                            config.axis_x_categories.push(rawX);\n                        }\n                    } else {\n                        x  = $$.generateTargetX(rawX, id, i);\n                    }\n                    // mark as x = undefined if value is undefined and filter to remove after mapped\n                    if (isUndefined(d[id]) || $$.data.xs[id].length <= i) {\n                        x = undefined;\n                    }\n                    return {x: x, value: value, id: convertedId};\n                }).filter(function (v) { return isDefined(v.x); })\n            };\n        });\n\n        // finish targets\n        targets.forEach(function (t) {\n            var i;\n            // sort values by its x\n            if (config.data_xSort) {\n                t.values = t.values.sort(function (v1, v2) {\n                    var x1 = v1.x || v1.x === 0 ? v1.x : Infinity,\n                        x2 = v2.x || v2.x === 0 ? v2.x : Infinity;\n                    return x1 - x2;\n                });\n            }\n            // indexing each value\n            i = 0;\n            t.values.forEach(function (v) {\n                v.index = i++;\n            });\n            // this needs to be sorted because its index and value.index is identical\n            $$.data.xs[t.id].sort(function (v1, v2) {\n                return v1 - v2;\n            });\n        });\n\n        // cache information about values\n        $$.hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n        $$.hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n\n        // set target types\n        if (config.data_type) {\n            $$.setTargetType($$.mapToIds(targets).filter(function (id) { return ! (id in config.data_types); }), config.data_type);\n        }\n\n        // cache as original id keyed\n        targets.forEach(function (d) {\n            $$.addCache(d.id_org, d);\n        });\n\n        return targets;\n    };\n\n    c3_chart_internal_fn.load = function (targets, args) {\n        var $$ = this;\n        if (targets) {\n            // filter loading targets if needed\n            if (args.filter) {\n                targets = targets.filter(args.filter);\n            }\n            // set type if args.types || args.type specified\n            if (args.type || args.types) {\n                targets.forEach(function (t) {\n                    var type = args.types && args.types[t.id] ? args.types[t.id] : args.type;\n                    $$.setTargetType(t.id, type);\n                });\n            }\n            // Update/Add data\n            $$.data.targets.forEach(function (d) {\n                for (var i = 0; i < targets.length; i++) {\n                    if (d.id === targets[i].id) {\n                        d.values = targets[i].values;\n                        targets.splice(i, 1);\n                        break;\n                    }\n                }\n            });\n            $$.data.targets = $$.data.targets.concat(targets); // add remained\n        }\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Redraw with new targets\n        $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n\n        if (args.done) { args.done(); }\n    };\n    c3_chart_internal_fn.loadFromArgs = function (args) {\n        var $$ = this;\n        if (args.data) {\n            $$.load($$.convertDataToTargets(args.data), args);\n        }\n        else if (args.url) {\n            $$.convertUrlToData(args.url, args.mimeType, args.headers, args.keys, function (data) {\n                $$.load($$.convertDataToTargets(data), args);\n            });\n        }\n        else if (args.json) {\n            $$.load($$.convertDataToTargets($$.convertJsonToData(args.json, args.keys)), args);\n        }\n        else if (args.rows) {\n            $$.load($$.convertDataToTargets($$.convertRowsToData(args.rows)), args);\n        }\n        else if (args.columns) {\n            $$.load($$.convertDataToTargets($$.convertColumnsToData(args.columns)), args);\n        }\n        else {\n            $$.load(null, args);\n        }\n    };\n    c3_chart_internal_fn.unload = function (targetIds, done) {\n        var $$ = this;\n        if (!done) {\n            done = function () {};\n        }\n        // filter existing target\n        targetIds = targetIds.filter(function (id) { return $$.hasTarget($$.data.targets, id); });\n        // If no target, call done and return\n        if (!targetIds || targetIds.length === 0) {\n            done();\n            return;\n        }\n        $$.svg.selectAll(targetIds.map(function (id) { return $$.selectorTarget(id); }))\n            .transition()\n            .style('opacity', 0)\n            .remove()\n            .call($$.endall, done);\n        targetIds.forEach(function (id) {\n            // Reset fadein for future load\n            $$.withoutFadeIn[id] = false;\n            // Remove target's elements\n            if ($$.legend) {\n                $$.legend.selectAll('.' + CLASS.legendItem + $$.getTargetSelectorSuffix(id)).remove();\n            }\n            // Remove target\n            $$.data.targets = $$.data.targets.filter(function (t) {\n                return t.id !== id;\n            });\n        });\n    };\n\n    c3_chart_internal_fn.categoryName = function (i) {\n        var config = this.config;\n        return i < config.axis_x_categories.length ? config.axis_x_categories[i] : i;\n    };\n\n    c3_chart_internal_fn.initEventRect = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.eventRects)\n            .style('fill-opacity', 0);\n    };\n    c3_chart_internal_fn.redrawEventRect = function () {\n        var $$ = this, config = $$.config,\n            eventRectUpdate, maxDataCountTarget,\n            isMultipleX = $$.isMultipleX();\n\n        // rects for mouseover\n        var eventRects = $$.main.select('.' + CLASS.eventRects)\n                .style('cursor', config.zoom_enabled ? config.axis_rotated ? 'ns-resize' : 'ew-resize' : null)\n                .classed(CLASS.eventRectsMultiple, isMultipleX)\n                .classed(CLASS.eventRectsSingle, !isMultipleX);\n\n        // clear old rects\n        eventRects.selectAll('.' + CLASS.eventRect).remove();\n\n        // open as public variable\n        $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n\n        if (isMultipleX) {\n            eventRectUpdate = $$.eventRect.data([0]);\n            // enter : only one rect will be added\n            $$.generateEventRectsForMultipleXs(eventRectUpdate.enter());\n            // update\n            $$.updateEventRect(eventRectUpdate);\n            // exit : not needed because always only one rect exists\n        }\n        else {\n            // Set data and update $$.eventRect\n            maxDataCountTarget = $$.getMaxDataCountTarget($$.data.targets);\n            eventRects.datum(maxDataCountTarget ? maxDataCountTarget.values : []);\n            $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n            eventRectUpdate = $$.eventRect.data(function (d) { return d; });\n            // enter\n            $$.generateEventRectsForSingleX(eventRectUpdate.enter());\n            // update\n            $$.updateEventRect(eventRectUpdate);\n            // exit\n            eventRectUpdate.exit().remove();\n        }\n    };\n    c3_chart_internal_fn.updateEventRect = function (eventRectUpdate) {\n        var $$ = this, config = $$.config,\n            x, y, w, h, rectW, rectX;\n\n        // set update selection if null\n        eventRectUpdate = eventRectUpdate || $$.eventRect.data(function (d) { return d; });\n\n        if ($$.isMultipleX()) {\n            // TODO: rotated not supported yet\n            x = 0;\n            y = 0;\n            w = $$.width;\n            h = $$.height;\n        }\n        else {\n            if (($$.isCustomX() || $$.isTimeSeries()) && !$$.isCategorized()) {\n\n                // update index for x that is used by prevX and nextX\n                $$.updateXs();\n\n                rectW = function (d) {\n                    var prevX = $$.getPrevX(d.index), nextX = $$.getNextX(d.index);\n\n                    // if there this is a single data point make the eventRect full width (or height)\n                    if (prevX === null && nextX === null) {\n                        return config.axis_rotated ? $$.height : $$.width;\n                    }\n\n                    if (prevX === null) { prevX = $$.x.domain()[0]; }\n                    if (nextX === null) { nextX = $$.x.domain()[1]; }\n\n                    return Math.max(0, ($$.x(nextX) - $$.x(prevX)) / 2);\n                };\n                rectX = function (d) {\n                    var prevX = $$.getPrevX(d.index), nextX = $$.getNextX(d.index),\n                        thisX = $$.data.xs[d.id][d.index];\n\n                    // if there this is a single data point position the eventRect at 0\n                    if (prevX === null && nextX === null) {\n                        return 0;\n                    }\n\n                    if (prevX === null) { prevX = $$.x.domain()[0]; }\n\n                    return ($$.x(thisX) + $$.x(prevX)) / 2;\n                };\n            } else {\n                rectW = $$.getEventRectWidth();\n                rectX = function (d) {\n                    return $$.x(d.x) - (rectW / 2);\n                };\n            }\n            x = config.axis_rotated ? 0 : rectX;\n            y = config.axis_rotated ? rectX : 0;\n            w = config.axis_rotated ? $$.width : rectW;\n            h = config.axis_rotated ? rectW : $$.height;\n        }\n\n        eventRectUpdate\n            .attr('class', $$.classEvent.bind($$))\n            .attr(\"x\", x)\n            .attr(\"y\", y)\n            .attr(\"width\", w)\n            .attr(\"height\", h);\n    };\n    c3_chart_internal_fn.generateEventRectsForSingleX = function (eventRectEnter) {\n        var $$ = this, d3 = $$.d3, config = $$.config;\n        eventRectEnter.append(\"rect\")\n            .attr(\"class\", $$.classEvent.bind($$))\n            .style(\"cursor\", config.data_selection_enabled && config.data_selection_grouped ? \"pointer\" : null)\n            .on('mouseover', function (d) {\n                var index = d.index;\n\n                if ($$.dragging || $$.flowing) { return; } // do nothing while dragging/flowing\n                if ($$.hasArcType()) { return; }\n\n                // Expand shapes for selection\n                if (config.point_focus_expand_enabled) { $$.expandCircles(index, null, true); }\n                $$.expandBars(index, null, true);\n\n                // Call event handler\n                $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                    config.data_onmouseover.call($$.api, d);\n                });\n            })\n            .on('mouseout', function (d) {\n                var index = d.index;\n                if (!$$.config) { return; } // chart is destroyed\n                if ($$.hasArcType()) { return; }\n                $$.hideXGridFocus();\n                $$.hideTooltip();\n                // Undo expanded shapes\n                $$.unexpandCircles();\n                $$.unexpandBars();\n                // Call event handler\n                $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                    config.data_onmouseout.call($$.api, d);\n                });\n            })\n            .on('mousemove', function (d) {\n                var selectedData, index = d.index,\n                    eventRect = $$.svg.select('.' + CLASS.eventRect + '-' + index);\n\n                if ($$.dragging || $$.flowing) { return; } // do nothing while dragging/flowing\n                if ($$.hasArcType()) { return; }\n\n                if ($$.isStepType(d) && $$.config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n                    index -= 1;\n                }\n\n                // Show tooltip\n                selectedData = $$.filterTargetsToShow($$.data.targets).map(function (t) {\n                    return $$.addName($$.getValueOnIndex(t.values, index));\n                });\n\n                if (config.tooltip_grouped) {\n                    $$.showTooltip(selectedData, this);\n                    $$.showXGridFocus(selectedData);\n                }\n\n                if (config.tooltip_grouped && (!config.data_selection_enabled || config.data_selection_grouped)) {\n                    return;\n                }\n\n                $$.main.selectAll('.' + CLASS.shape + '-' + index)\n                    .each(function () {\n                        d3.select(this).classed(CLASS.EXPANDED, true);\n                        if (config.data_selection_enabled) {\n                            eventRect.style('cursor', config.data_selection_grouped ? 'pointer' : null);\n                        }\n                        if (!config.tooltip_grouped) {\n                            $$.hideXGridFocus();\n                            $$.hideTooltip();\n                            if (!config.data_selection_grouped) {\n                                $$.unexpandCircles(index);\n                                $$.unexpandBars(index);\n                            }\n                        }\n                    })\n                    .filter(function (d) {\n                        return $$.isWithinShape(this, d);\n                    })\n                    .each(function (d) {\n                        if (config.data_selection_enabled && (config.data_selection_grouped || config.data_selection_isselectable(d))) {\n                            eventRect.style('cursor', 'pointer');\n                        }\n                        if (!config.tooltip_grouped) {\n                            $$.showTooltip([d], this);\n                            $$.showXGridFocus([d]);\n                            if (config.point_focus_expand_enabled) { $$.expandCircles(index, d.id, true); }\n                            $$.expandBars(index, d.id, true);\n                        }\n                    });\n            })\n            .on('click', function (d) {\n                var index = d.index;\n                if ($$.hasArcType() || !$$.toggleShape) { return; }\n                if ($$.cancelClick) {\n                    $$.cancelClick = false;\n                    return;\n                }\n                if ($$.isStepType(d) && config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n                    index -= 1;\n                }\n                $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                    if (config.data_selection_grouped || $$.isWithinShape(this, d)) {\n                        $$.toggleShape(this, d, index);\n                        $$.config.data_onclick.call($$.api, d, this);\n                    }\n                });\n            })\n            .call(\n                config.data_selection_draggable && $$.drag ? (\n                    d3.behavior.drag().origin(Object)\n                        .on('drag', function () { $$.drag(d3.mouse(this)); })\n                        .on('dragstart', function () { $$.dragstart(d3.mouse(this)); })\n                        .on('dragend', function () { $$.dragend(); })\n                ) : function () {}\n            );\n    };\n\n    c3_chart_internal_fn.generateEventRectsForMultipleXs = function (eventRectEnter) {\n        var $$ = this, d3 = $$.d3, config = $$.config;\n\n        function mouseout() {\n            $$.svg.select('.' + CLASS.eventRect).style('cursor', null);\n            $$.hideXGridFocus();\n            $$.hideTooltip();\n            $$.unexpandCircles();\n            $$.unexpandBars();\n        }\n\n        eventRectEnter.append('rect')\n            .attr('x', 0)\n            .attr('y', 0)\n            .attr('width', $$.width)\n            .attr('height', $$.height)\n            .attr('class', CLASS.eventRect)\n            .on('mouseout', function () {\n                if (!$$.config) { return; } // chart is destroyed\n                if ($$.hasArcType()) { return; }\n                mouseout();\n            })\n            .on('mousemove', function () {\n                var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n                var mouse, closest, sameXData, selectedData;\n\n                if ($$.dragging) { return; } // do nothing when dragging\n                if ($$.hasArcType(targetsToShow)) { return; }\n\n                mouse = d3.mouse(this);\n                closest = $$.findClosestFromTargets(targetsToShow, mouse);\n\n                if ($$.mouseover && (!closest || closest.id !== $$.mouseover.id)) {\n                    config.data_onmouseout.call($$.api, $$.mouseover);\n                    $$.mouseover = undefined;\n                }\n\n                if (! closest) {\n                    mouseout();\n                    return;\n                }\n\n                if ($$.isScatterType(closest) || !config.tooltip_grouped) {\n                    sameXData = [closest];\n                } else {\n                    sameXData = $$.filterByX(targetsToShow, closest.x);\n                }\n\n                // show tooltip when cursor is close to some point\n                selectedData = sameXData.map(function (d) {\n                    return $$.addName(d);\n                });\n                $$.showTooltip(selectedData, this);\n\n                // expand points\n                if (config.point_focus_expand_enabled) {\n                    $$.expandCircles(closest.index, closest.id, true);\n                }\n                $$.expandBars(closest.index, closest.id, true);\n\n                // Show xgrid focus line\n                $$.showXGridFocus(selectedData);\n\n                // Show cursor as pointer if point is close to mouse position\n                if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n                    $$.svg.select('.' + CLASS.eventRect).style('cursor', 'pointer');\n                    if (!$$.mouseover) {\n                        config.data_onmouseover.call($$.api, closest);\n                        $$.mouseover = closest;\n                    }\n                }\n            })\n            .on('click', function () {\n                var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n                var mouse, closest;\n                if ($$.hasArcType(targetsToShow)) { return; }\n\n                mouse = d3.mouse(this);\n                closest = $$.findClosestFromTargets(targetsToShow, mouse);\n                if (! closest) { return; }\n                // select if selection enabled\n                if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n                    $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(closest.id)).selectAll('.' + CLASS.shape + '-' + closest.index).each(function () {\n                        if (config.data_selection_grouped || $$.isWithinShape(this, closest)) {\n                            $$.toggleShape(this, closest, closest.index);\n                            $$.config.data_onclick.call($$.api, closest, this);\n                        }\n                    });\n                }\n            })\n            .call(\n                config.data_selection_draggable && $$.drag ? (\n                    d3.behavior.drag().origin(Object)\n                        .on('drag', function () { $$.drag(d3.mouse(this)); })\n                        .on('dragstart', function () { $$.dragstart(d3.mouse(this)); })\n                        .on('dragend', function () { $$.dragend(); })\n                ) : function () {}\n            );\n    };\n    c3_chart_internal_fn.dispatchEvent = function (type, index, mouse) {\n        var $$ = this,\n            selector = '.' + CLASS.eventRect + (!$$.isMultipleX() ? '-' + index : ''),\n            eventRect = $$.main.select(selector).node(),\n            box = eventRect.getBoundingClientRect(),\n            x = box.left + (mouse ? mouse[0] : 0),\n            y = box.top + (mouse ? mouse[1] : 0),\n            event = document.createEvent(\"MouseEvents\");\n\n        event.initMouseEvent(type, true, true, window, 0, x, y, x, y,\n                             false, false, false, false, 0, null);\n        eventRect.dispatchEvent(event);\n    };\n\n    c3_chart_internal_fn.getCurrentWidth = function () {\n        var $$ = this, config = $$.config;\n        return config.size_width ? config.size_width : $$.getParentWidth();\n    };\n    c3_chart_internal_fn.getCurrentHeight = function () {\n        var $$ = this, config = $$.config,\n            h = config.size_height ? config.size_height : $$.getParentHeight();\n        return h > 0 ? h : 320 / ($$.hasType('gauge') && !config.gauge_fullCircle ? 2 : 1); \n    };\n    c3_chart_internal_fn.getCurrentPaddingTop = function () {\n        var $$ = this,\n            config = $$.config,\n            padding = isValue(config.padding_top) ? config.padding_top : 0;\n        if ($$.title && $$.title.node()) {\n            padding += $$.getTitlePadding();\n        }\n        return padding;\n    };\n    c3_chart_internal_fn.getCurrentPaddingBottom = function () {\n        var config = this.config;\n        return isValue(config.padding_bottom) ? config.padding_bottom : 0;\n    };\n    c3_chart_internal_fn.getCurrentPaddingLeft = function (withoutRecompute) {\n        var $$ = this, config = $$.config;\n        if (isValue(config.padding_left)) {\n            return config.padding_left;\n        } else if (config.axis_rotated) {\n            return !config.axis_x_show ? 1 : Math.max(ceil10($$.getAxisWidthByAxisId('x', withoutRecompute)), 40);\n        } else if (!config.axis_y_show || config.axis_y_inner) { // && !config.axis_rotated\n            return $$.axis.getYAxisLabelPosition().isOuter ? 30 : 1;\n        } else {\n            return ceil10($$.getAxisWidthByAxisId('y', withoutRecompute));\n        }\n    };\n    c3_chart_internal_fn.getCurrentPaddingRight = function () {\n        var $$ = this, config = $$.config,\n            defaultPadding = 10, legendWidthOnRight = $$.isLegendRight ? $$.getLegendWidth() + 20 : 0;\n        if (isValue(config.padding_right)) {\n            return config.padding_right + 1; // 1 is needed not to hide tick line\n        } else if (config.axis_rotated) {\n            return defaultPadding + legendWidthOnRight;\n        } else if (!config.axis_y2_show || config.axis_y2_inner) { // && !config.axis_rotated\n            return 2 + legendWidthOnRight + ($$.axis.getY2AxisLabelPosition().isOuter ? 20 : 0);\n        } else {\n            return ceil10($$.getAxisWidthByAxisId('y2')) + legendWidthOnRight;\n        }\n    };\n\n    c3_chart_internal_fn.getParentRectValue = function (key) {\n        var parent = this.selectChart.node(), v;\n        while (parent && parent.tagName !== 'BODY') {\n            try {\n                v = parent.getBoundingClientRect()[key];\n            } catch(e) {\n                if (key === 'width') {\n                    // In IE in certain cases getBoundingClientRect\n                    // will cause an \"unspecified error\"\n                    v = parent.offsetWidth;\n                }\n            }\n            if (v) {\n                break;\n            }\n            parent = parent.parentNode;\n        }\n        return v;\n    };\n    c3_chart_internal_fn.getParentWidth = function () {\n        return this.getParentRectValue('width');\n    };\n    c3_chart_internal_fn.getParentHeight = function () {\n        var h = this.selectChart.style('height');\n        return h.indexOf('px') > 0 ? +h.replace('px', '') : 0;\n    };\n\n\n    c3_chart_internal_fn.getSvgLeft = function (withoutRecompute) {\n        var $$ = this, config = $$.config,\n            hasLeftAxisRect = config.axis_rotated || (!config.axis_rotated && !config.axis_y_inner),\n            leftAxisClass = config.axis_rotated ? CLASS.axisX : CLASS.axisY,\n            leftAxis = $$.main.select('.' + leftAxisClass).node(),\n            svgRect = leftAxis && hasLeftAxisRect ? leftAxis.getBoundingClientRect() : {right: 0},\n            chartRect = $$.selectChart.node().getBoundingClientRect(),\n            hasArc = $$.hasArcType(),\n            svgLeft = svgRect.right - chartRect.left - (hasArc ? 0 : $$.getCurrentPaddingLeft(withoutRecompute));\n        return svgLeft > 0 ? svgLeft : 0;\n    };\n\n\n    c3_chart_internal_fn.getAxisWidthByAxisId = function (id, withoutRecompute) {\n        var $$ = this, position = $$.axis.getLabelPositionById(id);\n        return $$.axis.getMaxTickWidth(id, withoutRecompute) + (position.isInner ? 20 : 40);\n    };\n    c3_chart_internal_fn.getHorizontalAxisHeight = function (axisId) {\n        var $$ = this, config = $$.config, h = 30;\n        if (axisId === 'x' && !config.axis_x_show) { return 8; }\n        if (axisId === 'x' && config.axis_x_height) { return config.axis_x_height; }\n        if (axisId === 'y' && !config.axis_y_show) { \n            return config.legend_show && !$$.isLegendRight && !$$.isLegendInset ? 10 : 1; \n        }\n        if (axisId === 'y2' && !config.axis_y2_show) { return $$.rotated_padding_top; }\n        // Calculate x axis height when tick rotated\n        if (axisId === 'x' && !config.axis_rotated && config.axis_x_tick_rotate) {\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_x_tick_rotate) / 180);\n        }\n        // Calculate y axis height when tick rotated\n        if (axisId === 'y' && config.axis_rotated && config.axis_y_tick_rotate) {\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_y_tick_rotate) / 180);\n        }\n        return h + ($$.axis.getLabelPositionById(axisId).isInner ? 0 : 10) + (axisId === 'y2' ? -10 : 0);\n    };\n\n    c3_chart_internal_fn.getEventRectWidth = function () {\n        return Math.max(0, this.xAxis.tickInterval());\n    };\n\n    c3_chart_internal_fn.getShapeIndices = function (typeFilter) {\n        var $$ = this, config = $$.config,\n            indices = {}, i = 0, j, k;\n        $$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$)).forEach(function (d) {\n            for (j = 0; j < config.data_groups.length; j++) {\n                if (config.data_groups[j].indexOf(d.id) < 0) { continue; }\n                for (k = 0; k < config.data_groups[j].length; k++) {\n                    if (config.data_groups[j][k] in indices) {\n                        indices[d.id] = indices[config.data_groups[j][k]];\n                        break;\n                    }\n                }\n            }\n            if (isUndefined(indices[d.id])) { indices[d.id] = i++; }\n        });\n        indices.__max__ = i - 1;\n        return indices;\n    };\n    c3_chart_internal_fn.getShapeX = function (offset, targetsNum, indices, isSub) {\n        var $$ = this, scale = isSub ? $$.subX : $$.x;\n        return function (d) {\n            var index = d.id in indices ? indices[d.id] : 0;\n            return d.x || d.x === 0 ? scale(d.x) - offset * (targetsNum / 2 - index) : 0;\n        };\n    };\n    c3_chart_internal_fn.getShapeY = function (isSub) {\n        var $$ = this;\n        return function (d) {\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id);\n            return scale(d.value);\n        };\n    };\n    c3_chart_internal_fn.getShapeOffset = function (typeFilter, indices, isSub) {\n        var $$ = this,\n            targets = $$.orderTargets($$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$))),\n            targetIds = targets.map(function (t) { return t.id; });\n        return function (d, i) {\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id),\n                y0 = scale(0), offset = y0;\n            targets.forEach(function (t) {\n                var values = $$.isStepType(d) ? $$.convertValuesToStep(t.values) : t.values;\n                if (t.id === d.id || indices[t.id] !== indices[d.id]) { return; }\n                if (targetIds.indexOf(t.id) < targetIds.indexOf(d.id)) {\n                    // check if the x values line up\n                    if (typeof values[i] === 'undefined' || +values[i].x !== +d.x) {  // \"+\" for timeseries\n                        // if not, try to find the value that does line up\n                        i = -1;\n                        values.forEach(function (v, j) {\n                            if (v.x === d.x) {\n                                i = j;\n                            }\n                        });\n                    }\n                    if (i in values && values[i].value * d.value >= 0) {\n                        offset += scale(values[i].value) - y0;\n                    }\n                }\n            });\n            return offset;\n        };\n    };\n    c3_chart_internal_fn.isWithinShape = function (that, d) {\n        var $$ = this,\n            shape = $$.d3.select(that), isWithin;\n        if (!$$.isTargetToShow(d.id)) {\n            isWithin = false;\n        }\n        else if (that.nodeName === 'circle') {\n            isWithin = $$.isStepType(d) ? $$.isWithinStep(that, $$.getYScale(d.id)(d.value)) : $$.isWithinCircle(that, $$.pointSelectR(d) * 1.5);\n        }\n        else if (that.nodeName === 'path') {\n            isWithin = shape.classed(CLASS.bar) ? $$.isWithinBar(that) : true;\n        }\n        return isWithin;\n    };\n\n\n    c3_chart_internal_fn.getInterpolate = function (d) {\n        var $$ = this,\n            interpolation = $$.isInterpolationType($$.config.spline_interpolation_type) ? $$.config.spline_interpolation_type : 'cardinal';\n        return $$.isSplineType(d) ? interpolation : $$.isStepType(d) ? $$.config.line_step_type : \"linear\";\n    };\n\n    c3_chart_internal_fn.initLine = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartLines);\n    };\n    c3_chart_internal_fn.updateTargetsForLine = function (targets) {\n        var $$ = this, config = $$.config,\n            mainLineUpdate, mainLineEnter,\n            classChartLine = $$.classChartLine.bind($$),\n            classLines = $$.classLines.bind($$),\n            classAreas = $$.classAreas.bind($$),\n            classCircles = $$.classCircles.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainLineUpdate = $$.main.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine)\n            .data(targets)\n            .attr('class', function (d) { return classChartLine(d) + classFocus(d); });\n        mainLineEnter = mainLineUpdate.enter().append('g')\n            .attr('class', classChartLine)\n            .style('opacity', 0)\n            .style(\"pointer-events\", \"none\");\n        // Lines for each data\n        mainLineEnter.append('g')\n            .attr(\"class\", classLines);\n        // Areas\n        mainLineEnter.append('g')\n            .attr('class', classAreas);\n        // Circles for each data point on lines\n        mainLineEnter.append('g')\n            .attr(\"class\", function (d) { return $$.generateClass(CLASS.selectedCircles, d.id); });\n        mainLineEnter.append('g')\n            .attr(\"class\", classCircles)\n            .style(\"cursor\", function (d) { return config.data_selection_isselectable(d) ? \"pointer\" : null; });\n        // Update date for selected circles\n        targets.forEach(function (t) {\n            $$.main.selectAll('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(t.id)).selectAll('.' + CLASS.selectedCircle).each(function (d) {\n                d.value = t.values[d.index].value;\n            });\n        });\n        // MEMO: can not keep same color...\n        //mainLineUpdate.exit().remove();\n    };\n    c3_chart_internal_fn.updateLine = function (durationForExit) {\n        var $$ = this;\n        $$.mainLine = $$.main.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line)\n            .data($$.lineData.bind($$));\n        $$.mainLine.enter().append('path')\n            .attr('class', $$.classLine.bind($$))\n            .style(\"stroke\", $$.color);\n        $$.mainLine\n            .style(\"opacity\", $$.initialOpacity.bind($$))\n            .style('shape-rendering', function (d) { return $$.isStepType(d) ? 'crispEdges' : ''; })\n            .attr('transform', null);\n        $$.mainLine.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawLine = function (drawLine, withTransition) {\n        return [\n            (withTransition ? this.mainLine.transition(Math.random().toString()) : this.mainLine)\n                .attr(\"d\", drawLine)\n                .style(\"stroke\", this.color)\n                .style(\"opacity\", 1)\n        ];\n    };\n    c3_chart_internal_fn.generateDrawLine = function (lineIndices, isSub) {\n        var $$ = this, config = $$.config,\n            line = $$.d3.svg.line(),\n            getPoints = $$.generateGetLinePoints(lineIndices, isSub),\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n            xValue = function (d) { return (isSub ? $$.subxx : $$.xx).call($$, d); },\n            yValue = function (d, i) {\n                return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(d.value);\n            };\n\n        line = config.axis_rotated ? line.x(yValue).y(xValue) : line.x(xValue).y(yValue);\n        if (!config.line_connectNull) { line = line.defined(function (d) { return d.value != null; }); }\n        return function (d) {\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n                x = isSub ? $$.x : $$.subX, y = yScaleGetter.call($$, d.id), x0 = 0, y0 = 0, path;\n            if ($$.isLineType(d)) {\n                if (config.data_regions[d.id]) {\n                    path = $$.lineWithRegions(values, x, y, config.data_regions[d.id]);\n                } else {\n                    if ($$.isStepType(d)) { values = $$.convertValuesToStep(values); }\n                    path = line.interpolate($$.getInterpolate(d))(values);\n                }\n            } else {\n                if (values[0]) {\n                    x0 = x(values[0].x);\n                    y0 = y(values[0].value);\n                }\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n            }\n            return path ? path : \"M 0 0\";\n        };\n    };\n    c3_chart_internal_fn.generateGetLinePoints = function (lineIndices, isSub) { // partial duplication of generateGetBarPoints\n        var $$ = this, config = $$.config,\n            lineTargetsNum = lineIndices.__max__ + 1,\n            x = $$.getShapeX(0, lineTargetsNum, lineIndices, !!isSub),\n            y = $$.getShapeY(!!isSub),\n            lineOffset = $$.getShapeOffset($$.isLineType, lineIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = lineOffset(d, i) || y0, // offset is for stacked area chart\n                posX = x(d), posY = y(d);\n            // fix posY not to overflow opposite quadrant\n            if (config.axis_rotated) {\n                if ((0 < d.value && posY < y0) || (d.value < 0 && y0 < posY)) { posY = y0; }\n            }\n            // 1 point that marks the line position\n            return [\n                [posX, posY - (y0 - offset)],\n                [posX, posY - (y0 - offset)], // needed for compatibility\n                [posX, posY - (y0 - offset)], // needed for compatibility\n                [posX, posY - (y0 - offset)]  // needed for compatibility\n            ];\n        };\n    };\n\n\n    c3_chart_internal_fn.lineWithRegions = function (d, x, y, _regions) {\n        var $$ = this, config = $$.config,\n            prev = -1, i, j,\n            s = \"M\", sWithRegion,\n            xp, yp, dx, dy, dd, diff, diffx2,\n            xOffset = $$.isCategorized() ? 0.5 : 0,\n            xValue, yValue,\n            regions = [];\n\n        function isWithinRegions(x, regions) {\n            var i;\n            for (i = 0; i < regions.length; i++) {\n                if (regions[i].start < x && x <= regions[i].end) { return true; }\n            }\n            return false;\n        }\n\n        // Check start/end of regions\n        if (isDefined(_regions)) {\n            for (i = 0; i < _regions.length; i++) {\n                regions[i] = {};\n                if (isUndefined(_regions[i].start)) {\n                    regions[i].start = d[0].x;\n                } else {\n                    regions[i].start = $$.isTimeSeries() ? $$.parseDate(_regions[i].start) : _regions[i].start;\n                }\n                if (isUndefined(_regions[i].end)) {\n                    regions[i].end = d[d.length - 1].x;\n                } else {\n                    regions[i].end = $$.isTimeSeries() ? $$.parseDate(_regions[i].end) : _regions[i].end;\n                }\n            }\n        }\n\n        // Set scales\n        xValue = config.axis_rotated ? function (d) { return y(d.value); } : function (d) { return x(d.x); };\n        yValue = config.axis_rotated ? function (d) { return x(d.x); } : function (d) { return y(d.value); };\n\n        // Define svg generator function for region\n        function generateM(points) {\n            return 'M' + points[0][0] + ' ' + points[0][1] + ' ' + points[1][0] + ' ' + points[1][1];\n        }\n        if ($$.isTimeSeries()) {\n            sWithRegion = function (d0, d1, j, diff) {\n                var x0 = d0.x.getTime(), x_diff = d1.x - d0.x,\n                    xv0 = new Date(x0 + x_diff * j),\n                    xv1 = new Date(x0 + x_diff * (j + diff)),\n                    points;\n                if (config.axis_rotated) {\n                    points = [[y(yp(j)), x(xv0)], [y(yp(j + diff)), x(xv1)]];\n                } else {\n                    points = [[x(xv0), y(yp(j))], [x(xv1), y(yp(j + diff))]];\n                }\n                return generateM(points);\n            };\n        } else {\n            sWithRegion = function (d0, d1, j, diff) {\n                var points;\n                if (config.axis_rotated) {\n                    points = [[y(yp(j), true), x(xp(j))], [y(yp(j + diff), true), x(xp(j + diff))]];\n                } else {\n                    points = [[x(xp(j), true), y(yp(j))], [x(xp(j + diff), true), y(yp(j + diff))]];\n                }\n                return generateM(points);\n            };\n        }\n\n        // Generate\n        for (i = 0; i < d.length; i++) {\n\n            // Draw as normal\n            if (isUndefined(regions) || ! isWithinRegions(d[i].x, regions)) {\n                s += \" \" + xValue(d[i]) + \" \" + yValue(d[i]);\n            }\n            // Draw with region // TODO: Fix for horizotal charts\n            else {\n                xp = $$.getScale(d[i - 1].x + xOffset, d[i].x + xOffset, $$.isTimeSeries());\n                yp = $$.getScale(d[i - 1].value, d[i].value);\n\n                dx = x(d[i].x) - x(d[i - 1].x);\n                dy = y(d[i].value) - y(d[i - 1].value);\n                dd = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n                diff = 2 / dd;\n                diffx2 = diff * 2;\n\n                for (j = diff; j <= 1; j += diffx2) {\n                    s += sWithRegion(d[i - 1], d[i], j, diff);\n                }\n            }\n            prev = d[i].x;\n        }\n\n        return s;\n    };\n\n\n    c3_chart_internal_fn.updateArea = function (durationForExit) {\n        var $$ = this, d3 = $$.d3;\n        $$.mainArea = $$.main.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area)\n            .data($$.lineData.bind($$));\n        $$.mainArea.enter().append('path')\n            .attr(\"class\", $$.classArea.bind($$))\n            .style(\"fill\", $$.color)\n            .style(\"opacity\", function () { $$.orgAreaOpacity = +d3.select(this).style('opacity'); return 0; });\n        $$.mainArea\n            .style(\"opacity\", $$.orgAreaOpacity);\n        $$.mainArea.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawArea = function (drawArea, withTransition) {\n        return [\n            (withTransition ? this.mainArea.transition(Math.random().toString()) : this.mainArea)\n                .attr(\"d\", drawArea)\n                .style(\"fill\", this.color)\n                .style(\"opacity\", this.orgAreaOpacity)\n        ];\n    };\n    c3_chart_internal_fn.generateDrawArea = function (areaIndices, isSub) {\n        var $$ = this, config = $$.config, area = $$.d3.svg.area(),\n            getPoints = $$.generateGetAreaPoints(areaIndices, isSub),\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n            xValue = function (d) { return (isSub ? $$.subxx : $$.xx).call($$, d); },\n            value0 = function (d, i) {\n                return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)($$.getAreaBaseValue(d.id));\n            },\n            value1 = function (d, i) {\n                return config.data_groups.length > 0 ? getPoints(d, i)[1][1] : yScaleGetter.call($$, d.id)(d.value);\n            };\n\n        area = config.axis_rotated ? area.x0(value0).x1(value1).y(xValue) : area.x(xValue).y0(config.area_above ? 0 : value0).y1(value1);\n        if (!config.line_connectNull) {\n            area = area.defined(function (d) { return d.value !== null; });\n        }\n\n        return function (d) {\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n                x0 = 0, y0 = 0, path;\n            if ($$.isAreaType(d)) {\n                if ($$.isStepType(d)) { values = $$.convertValuesToStep(values); }\n                path = area.interpolate($$.getInterpolate(d))(values);\n            } else {\n                if (values[0]) {\n                    x0 = $$.x(values[0].x);\n                    y0 = $$.getYScale(d.id)(values[0].value);\n                }\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n            }\n            return path ? path : \"M 0 0\";\n        };\n    };\n    c3_chart_internal_fn.getAreaBaseValue = function () {\n        return 0;\n    };\n    c3_chart_internal_fn.generateGetAreaPoints = function (areaIndices, isSub) { // partial duplication of generateGetBarPoints\n        var $$ = this, config = $$.config,\n            areaTargetsNum = areaIndices.__max__ + 1,\n            x = $$.getShapeX(0, areaTargetsNum, areaIndices, !!isSub),\n            y = $$.getShapeY(!!isSub),\n            areaOffset = $$.getShapeOffset($$.isAreaType, areaIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = areaOffset(d, i) || y0, // offset is for stacked area chart\n                posX = x(d), posY = y(d);\n            // fix posY not to overflow opposite quadrant\n            if (config.axis_rotated) {\n                if ((0 < d.value && posY < y0) || (d.value < 0 && y0 < posY)) { posY = y0; }\n            }\n            // 1 point that marks the area position\n            return [\n                [posX, offset],\n                [posX, posY - (y0 - offset)],\n                [posX, posY - (y0 - offset)], // needed for compatibility\n                [posX, offset] // needed for compatibility\n            ];\n        };\n    };\n\n\n    c3_chart_internal_fn.updateCircle = function () {\n        var $$ = this;\n        $$.mainCircle = $$.main.selectAll('.' + CLASS.circles).selectAll('.' + CLASS.circle)\n            .data($$.lineOrScatterData.bind($$));\n        $$.mainCircle.enter().append(\"circle\")\n            .attr(\"class\", $$.classCircle.bind($$))\n            .attr(\"r\", $$.pointR.bind($$))\n            .style(\"fill\", $$.color);\n        $$.mainCircle\n            .style(\"opacity\", $$.initialOpacityForCircle.bind($$));\n        $$.mainCircle.exit().remove();\n    };\n    c3_chart_internal_fn.redrawCircle = function (cx, cy, withTransition) {\n        var selectedCircles = this.main.selectAll('.' + CLASS.selectedCircle);\n        return [\n            (withTransition ? this.mainCircle.transition(Math.random().toString()) : this.mainCircle)\n                .style('opacity', this.opacityForCircle.bind(this))\n                .style(\"fill\", this.color)\n                .attr(\"cx\", cx)\n                .attr(\"cy\", cy),\n            (withTransition ? selectedCircles.transition(Math.random().toString()) : selectedCircles)\n                .attr(\"cx\", cx)\n                .attr(\"cy\", cy)\n        ];\n    };\n    c3_chart_internal_fn.circleX = function (d) {\n        return d.x || d.x === 0 ? this.x(d.x) : null;\n    };\n    c3_chart_internal_fn.updateCircleY = function () {\n        var $$ = this, lineIndices, getPoints;\n        if ($$.config.data_groups.length > 0) {\n            lineIndices = $$.getShapeIndices($$.isLineType),\n            getPoints = $$.generateGetLinePoints(lineIndices);\n            $$.circleY = function (d, i) {\n                return getPoints(d, i)[0][1];\n            };\n        } else {\n            $$.circleY = function (d) {\n                return $$.getYScale(d.id)(d.value);\n            };\n        }\n    };\n    c3_chart_internal_fn.getCircles = function (i, id) {\n        var $$ = this;\n        return (id ? $$.main.selectAll('.' + CLASS.circles + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.circle + (isValue(i) ? '-' + i : ''));\n    };\n    c3_chart_internal_fn.expandCircles = function (i, id, reset) {\n        var $$ = this,\n            r = $$.pointExpandedR.bind($$);\n        if (reset) { $$.unexpandCircles(); }\n        $$.getCircles(i, id)\n            .classed(CLASS.EXPANDED, true)\n            .attr('r', r);\n    };\n    c3_chart_internal_fn.unexpandCircles = function (i) {\n        var $$ = this,\n            r = $$.pointR.bind($$);\n        $$.getCircles(i)\n            .filter(function () { return $$.d3.select(this).classed(CLASS.EXPANDED); })\n            .classed(CLASS.EXPANDED, false)\n            .attr('r', r);\n    };\n    c3_chart_internal_fn.pointR = function (d) {\n        var $$ = this, config = $$.config;\n        return $$.isStepType(d) ? 0 : (isFunction(config.point_r) ? config.point_r(d) : config.point_r);\n    };\n    c3_chart_internal_fn.pointExpandedR = function (d) {\n        var $$ = this, config = $$.config;\n        return config.point_focus_expand_enabled ? (config.point_focus_expand_r ? config.point_focus_expand_r : $$.pointR(d) * 1.75) : $$.pointR(d);\n    };\n    c3_chart_internal_fn.pointSelectR = function (d) {\n        var $$ = this, config = $$.config;\n        return isFunction(config.point_select_r) ? config.point_select_r(d) : ((config.point_select_r) ? config.point_select_r : $$.pointR(d) * 4);\n    };\n    c3_chart_internal_fn.isWithinCircle = function (that, r) {\n        var d3 = this.d3,\n            mouse = d3.mouse(that), d3_this = d3.select(that),\n            cx = +d3_this.attr(\"cx\"), cy = +d3_this.attr(\"cy\");\n        return Math.sqrt(Math.pow(cx - mouse[0], 2) + Math.pow(cy - mouse[1], 2)) < r;\n    };\n    c3_chart_internal_fn.isWithinStep = function (that, y) {\n        return Math.abs(y - this.d3.mouse(that)[1]) < 30;\n    };\n\n    c3_chart_internal_fn.initBar = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartBars);\n    };\n    c3_chart_internal_fn.updateTargetsForBar = function (targets) {\n        var $$ = this, config = $$.config,\n            mainBarUpdate, mainBarEnter,\n            classChartBar = $$.classChartBar.bind($$),\n            classBars = $$.classBars.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainBarUpdate = $$.main.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar)\n            .data(targets)\n            .attr('class', function (d) { return classChartBar(d) + classFocus(d); });\n        mainBarEnter = mainBarUpdate.enter().append('g')\n            .attr('class', classChartBar)\n            .style('opacity', 0)\n            .style(\"pointer-events\", \"none\");\n        // Bars for each data\n        mainBarEnter.append('g')\n            .attr(\"class\", classBars)\n            .style(\"cursor\", function (d) { return config.data_selection_isselectable(d) ? \"pointer\" : null; });\n\n    };\n    c3_chart_internal_fn.updateBar = function (durationForExit) {\n        var $$ = this,\n            barData = $$.barData.bind($$),\n            classBar = $$.classBar.bind($$),\n            initialOpacity = $$.initialOpacity.bind($$),\n            color = function (d) { return $$.color(d.id); };\n        $$.mainBar = $$.main.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar)\n            .data(barData);\n        $$.mainBar.enter().append('path')\n            .attr(\"class\", classBar)\n            .style(\"stroke\", color)\n            .style(\"fill\", color);\n        $$.mainBar\n            .style(\"opacity\", initialOpacity);\n        $$.mainBar.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawBar = function (drawBar, withTransition) {\n        return [\n            (withTransition ? this.mainBar.transition(Math.random().toString()) : this.mainBar)\n                .attr('d', drawBar)\n                .style(\"fill\", this.color)\n                .style(\"opacity\", 1)\n        ];\n    };\n    c3_chart_internal_fn.getBarW = function (axis, barTargetsNum) {\n        var $$ = this, config = $$.config,\n            w = typeof config.bar_width === 'number' ? config.bar_width : barTargetsNum ? (axis.tickInterval() * config.bar_width_ratio) / barTargetsNum : 0;\n        return config.bar_width_max && w > config.bar_width_max ? config.bar_width_max : w;\n    };\n    c3_chart_internal_fn.getBars = function (i, id) {\n        var $$ = this;\n        return (id ? $$.main.selectAll('.' + CLASS.bars + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.bar + (isValue(i) ? '-' + i : ''));\n    };\n    c3_chart_internal_fn.expandBars = function (i, id, reset) {\n        var $$ = this;\n        if (reset) { $$.unexpandBars(); }\n        $$.getBars(i, id).classed(CLASS.EXPANDED, true);\n    };\n    c3_chart_internal_fn.unexpandBars = function (i) {\n        var $$ = this;\n        $$.getBars(i).classed(CLASS.EXPANDED, false);\n    };\n    c3_chart_internal_fn.generateDrawBar = function (barIndices, isSub) {\n        var $$ = this, config = $$.config,\n            getPoints = $$.generateGetBarPoints(barIndices, isSub);\n        return function (d, i) {\n            // 4 points that make a bar\n            var points = getPoints(d, i);\n\n            // switch points if axis is rotated, not applicable for sub chart\n            var indexX = config.axis_rotated ? 1 : 0;\n            var indexY = config.axis_rotated ? 0 : 1;\n\n            var path = 'M ' + points[0][indexX] + ',' + points[0][indexY] + ' ' +\n                    'L' + points[1][indexX] + ',' + points[1][indexY] + ' ' +\n                    'L' + points[2][indexX] + ',' + points[2][indexY] + ' ' +\n                    'L' + points[3][indexX] + ',' + points[3][indexY] + ' ' +\n                    'z';\n\n            return path;\n        };\n    };\n    c3_chart_internal_fn.generateGetBarPoints = function (barIndices, isSub) {\n        var $$ = this,\n            axis = isSub ? $$.subXAxis : $$.xAxis,\n            barTargetsNum = barIndices.__max__ + 1,\n            barW = $$.getBarW(axis, barTargetsNum),\n            barX = $$.getShapeX(barW, barTargetsNum, barIndices, !!isSub),\n            barY = $$.getShapeY(!!isSub),\n            barOffset = $$.getShapeOffset($$.isBarType, barIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = barOffset(d, i) || y0, // offset is for stacked bar chart\n                posX = barX(d), posY = barY(d);\n            // fix posY not to overflow opposite quadrant\n            if ($$.config.axis_rotated) {\n                if ((0 < d.value && posY < y0) || (d.value < 0 && y0 < posY)) { posY = y0; }\n            }\n            // 4 points that make a bar\n            return [\n                [posX, offset],\n                [posX, posY - (y0 - offset)],\n                [posX + barW, posY - (y0 - offset)],\n                [posX + barW, offset]\n            ];\n        };\n    };\n    c3_chart_internal_fn.isWithinBar = function (that) {\n        var mouse = this.d3.mouse(that), box = that.getBoundingClientRect(),\n            seg0 = that.pathSegList.getItem(0), seg1 = that.pathSegList.getItem(1),\n            x = Math.min(seg0.x, seg1.x), y = Math.min(seg0.y, seg1.y),\n            w = box.width, h = box.height, offset = 2,\n            sx = x - offset, ex = x + w + offset, sy = y + h + offset, ey = y - offset;\n        return sx < mouse[0] && mouse[0] < ex && ey < mouse[1] && mouse[1] < sy;\n    };\n\n    c3_chart_internal_fn.initText = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartTexts);\n        $$.mainText = $$.d3.selectAll([]);\n    };\n    c3_chart_internal_fn.updateTargetsForText = function (targets) {\n        var $$ = this, mainTextUpdate, mainTextEnter,\n            classChartText = $$.classChartText.bind($$),\n            classTexts = $$.classTexts.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainTextUpdate = $$.main.select('.' + CLASS.chartTexts).selectAll('.' + CLASS.chartText)\n            .data(targets)\n            .attr('class', function (d) { return classChartText(d) + classFocus(d); });\n        mainTextEnter = mainTextUpdate.enter().append('g')\n            .attr('class', classChartText)\n            .style('opacity', 0)\n            .style(\"pointer-events\", \"none\");\n        mainTextEnter.append('g')\n            .attr('class', classTexts);\n    };\n    c3_chart_internal_fn.updateText = function (durationForExit) {\n        var $$ = this, config = $$.config,\n            barOrLineData = $$.barOrLineData.bind($$),\n            classText = $$.classText.bind($$);\n        $$.mainText = $$.main.selectAll('.' + CLASS.texts).selectAll('.' + CLASS.text)\n            .data(barOrLineData);\n        $$.mainText.enter().append('text')\n            .attr(\"class\", classText)\n            .attr('text-anchor', function (d) { return config.axis_rotated ? (d.value < 0 ? 'end' : 'start') : 'middle'; })\n            .style(\"stroke\", 'none')\n            .style(\"fill\", function (d) { return $$.color(d); })\n            .style(\"fill-opacity\", 0);\n        $$.mainText\n            .text(function (d, i, j) { return $$.dataLabelFormat(d.id)(d.value, d.id, i, j); });\n        $$.mainText.exit()\n            .transition().duration(durationForExit)\n            .style('fill-opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawText = function (xForText, yForText, forFlow, withTransition) {\n        return [\n            (withTransition ? this.mainText.transition() : this.mainText)\n                .attr('x', xForText)\n                .attr('y', yForText)\n                .style(\"fill\", this.color)\n                .style(\"fill-opacity\", forFlow ? 0 : this.opacityForText.bind(this))\n        ];\n    };\n    c3_chart_internal_fn.getTextRect = function (text, cls, element) {\n        var dummy = this.d3.select('body').append('div').classed('c3', true),\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\n            font = this.d3.select(element).style('font'),\n            rect;\n        svg.selectAll('.dummy')\n            .data([text])\n          .enter().append('text')\n            .classed(cls ? cls : \"\", true)\n            .style('font', font)\n            .text(text)\n          .each(function () { rect = this.getBoundingClientRect(); });\n        dummy.remove();\n        return rect;\n    };\n    c3_chart_internal_fn.generateXYForText = function (areaIndices, barIndices, lineIndices, forX) {\n        var $$ = this,\n            getAreaPoints = $$.generateGetAreaPoints(areaIndices, false),\n            getBarPoints = $$.generateGetBarPoints(barIndices, false),\n            getLinePoints = $$.generateGetLinePoints(lineIndices, false),\n            getter = forX ? $$.getXForText : $$.getYForText;\n        return function (d, i) {\n            var getPoints = $$.isAreaType(d) ? getAreaPoints : $$.isBarType(d) ? getBarPoints : getLinePoints;\n            return getter.call($$, getPoints(d, i), d, this);\n        };\n    };\n    c3_chart_internal_fn.getXForText = function (points, d, textElement) {\n        var $$ = this,\n            box = textElement.getBoundingClientRect(), xPos, padding;\n        if ($$.config.axis_rotated) {\n            padding = $$.isBarType(d) ? 4 : 6;\n            xPos = points[2][1] + padding * (d.value < 0 ? -1 : 1);\n        } else {\n            xPos = $$.hasType('bar') ? (points[2][0] + points[0][0]) / 2 : points[0][0];\n        }\n        // show labels regardless of the domain if value is null\n        if (d.value === null) {\n            if (xPos > $$.width) {\n                xPos = $$.width - box.width;\n            } else if (xPos < 0) {\n                xPos = 4;\n            }\n        }\n        return xPos;\n    };\n    c3_chart_internal_fn.getYForText = function (points, d, textElement) {\n        var $$ = this,\n            box = textElement.getBoundingClientRect(),\n            yPos;\n        if ($$.config.axis_rotated) {\n            yPos = (points[0][0] + points[2][0] + box.height * 0.6) / 2;\n        } else {\n            yPos = points[2][1];\n            if (d.value < 0  || (d.value === 0 && !$$.hasPositiveValue)) {\n                yPos += box.height;\n                if ($$.isBarType(d) && $$.isSafari()) {\n                    yPos -= 3;\n                }\n                else if (!$$.isBarType(d) && $$.isChrome()) {\n                    yPos += 3;\n                }\n            } else {\n                yPos += $$.isBarType(d) ? -3 : -6;\n            }\n        }\n        // show labels regardless of the domain if value is null\n        if (d.value === null && !$$.config.axis_rotated) {\n            if (yPos < box.height) {\n                yPos = box.height;\n            } else if (yPos > this.height) {\n                yPos = this.height - 4;\n            }\n        }\n        return yPos;\n    };\n\n    c3_chart_internal_fn.setTargetType = function (targetIds, type) {\n        var $$ = this, config = $$.config;\n        $$.mapToTargetIds(targetIds).forEach(function (id) {\n            $$.withoutFadeIn[id] = (type === config.data_types[id]);\n            config.data_types[id] = type;\n        });\n        if (!targetIds) {\n            config.data_type = type;\n        }\n    };\n    c3_chart_internal_fn.hasType = function (type, targets) {\n        var $$ = this, types = $$.config.data_types, has = false;\n        targets = targets || $$.data.targets;\n        if (targets && targets.length) {\n            targets.forEach(function (target) {\n                var t = types[target.id];\n                if ((t && t.indexOf(type) >= 0) || (!t && type === 'line')) {\n                    has = true;\n                }\n            });\n        } else if (Object.keys(types).length) {\n            Object.keys(types).forEach(function (id) {\n                if (types[id] === type) { has = true; }\n            });\n        } else {\n            has = $$.config.data_type === type;\n        }\n        return has;\n    };\n    c3_chart_internal_fn.hasArcType = function (targets) {\n        return this.hasType('pie', targets) || this.hasType('donut', targets) || this.hasType('gauge', targets);\n    };\n    c3_chart_internal_fn.isLineType = function (d) {\n        var config = this.config, id = isString(d) ? d : d.id;\n        return !config.data_types[id] || ['line', 'spline', 'area', 'area-spline', 'step', 'area-step'].indexOf(config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isStepType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['step', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isSplineType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['spline', 'area-spline'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isAreaType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['area', 'area-spline', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isBarType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'bar';\n    };\n    c3_chart_internal_fn.isScatterType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'scatter';\n    };\n    c3_chart_internal_fn.isPieType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'pie';\n    };\n    c3_chart_internal_fn.isGaugeType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'gauge';\n    };\n    c3_chart_internal_fn.isDonutType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'donut';\n    };\n    c3_chart_internal_fn.isArcType = function (d) {\n        return this.isPieType(d) || this.isDonutType(d) || this.isGaugeType(d);\n    };\n    c3_chart_internal_fn.lineData = function (d) {\n        return this.isLineType(d) ? [d] : [];\n    };\n    c3_chart_internal_fn.arcData = function (d) {\n        return this.isArcType(d.data) ? [d] : [];\n    };\n    /* not used\n     function scatterData(d) {\n     return isScatterType(d) ? d.values : [];\n     }\n     */\n    c3_chart_internal_fn.barData = function (d) {\n        return this.isBarType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.lineOrScatterData = function (d) {\n        return this.isLineType(d) || this.isScatterType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.barOrLineData = function (d) {\n        return this.isBarType(d) || this.isLineType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.isInterpolationType = function (type) {\n        return ['linear', 'linear-closed', 'basis', 'basis-open', 'basis-closed', 'bundle', 'cardinal', 'cardinal-open', 'cardinal-closed', 'monotone'].indexOf(type) >= 0;\n    };\n\n    c3_chart_internal_fn.initGrid = function () {\n        var $$ = this, config = $$.config, d3 = $$.d3;\n        $$.grid = $$.main.append('g')\n            .attr(\"clip-path\", $$.clipPathForGrid)\n            .attr('class', CLASS.grid);\n        if (config.grid_x_show) {\n            $$.grid.append(\"g\").attr(\"class\", CLASS.xgrids);\n        }\n        if (config.grid_y_show) {\n            $$.grid.append('g').attr('class', CLASS.ygrids);\n        }\n        if (config.grid_focus_show) {\n            $$.grid.append('g')\n                .attr(\"class\", CLASS.xgridFocus)\n                .append('line')\n                .attr('class', CLASS.xgridFocus);\n        }\n        $$.xgrid = d3.selectAll([]);\n        if (!config.grid_lines_front) { $$.initGridLines(); }\n    };\n    c3_chart_internal_fn.initGridLines = function () {\n        var $$ = this, d3 = $$.d3;\n        $$.gridLines = $$.main.append('g')\n            .attr(\"clip-path\", $$.clipPathForGrid)\n            .attr('class', CLASS.grid + ' ' + CLASS.gridLines);\n        $$.gridLines.append('g').attr(\"class\", CLASS.xgridLines);\n        $$.gridLines.append('g').attr('class', CLASS.ygridLines);\n        $$.xgridLines = d3.selectAll([]);\n    };\n    c3_chart_internal_fn.updateXGrid = function (withoutUpdate) {\n        var $$ = this, config = $$.config, d3 = $$.d3,\n            xgridData = $$.generateGridData(config.grid_x_type, $$.x),\n            tickOffset = $$.isCategorized() ? $$.xAxis.tickOffset() : 0;\n\n        $$.xgridAttr = config.axis_rotated ? {\n            'x1': 0,\n            'x2': $$.width,\n            'y1': function (d) { return $$.x(d) - tickOffset; },\n            'y2': function (d) { return $$.x(d) - tickOffset; }\n        } : {\n            'x1': function (d) { return $$.x(d) + tickOffset; },\n            'x2': function (d) { return $$.x(d) + tickOffset; },\n            'y1': 0,\n            'y2': $$.height\n        };\n\n        $$.xgrid = $$.main.select('.' + CLASS.xgrids).selectAll('.' + CLASS.xgrid)\n            .data(xgridData);\n        $$.xgrid.enter().append('line').attr(\"class\", CLASS.xgrid);\n        if (!withoutUpdate) {\n            $$.xgrid.attr($$.xgridAttr)\n                .style(\"opacity\", function () { return +d3.select(this).attr(config.axis_rotated ? 'y1' : 'x1') === (config.axis_rotated ? $$.height : 0) ? 0 : 1; });\n        }\n        $$.xgrid.exit().remove();\n    };\n\n    c3_chart_internal_fn.updateYGrid = function () {\n        var $$ = this, config = $$.config,\n            gridValues = $$.yAxis.tickValues() || $$.y.ticks(config.grid_y_ticks);\n        $$.ygrid = $$.main.select('.' + CLASS.ygrids).selectAll('.' + CLASS.ygrid)\n            .data(gridValues);\n        $$.ygrid.enter().append('line')\n            .attr('class', CLASS.ygrid);\n        $$.ygrid.attr(\"x1\", config.axis_rotated ? $$.y : 0)\n            .attr(\"x2\", config.axis_rotated ? $$.y : $$.width)\n            .attr(\"y1\", config.axis_rotated ? 0 : $$.y)\n            .attr(\"y2\", config.axis_rotated ? $$.height : $$.y);\n        $$.ygrid.exit().remove();\n        $$.smoothLines($$.ygrid, 'grid');\n    };\n\n    c3_chart_internal_fn.gridTextAnchor = function (d) {\n        return d.position ? d.position : \"end\";\n    };\n    c3_chart_internal_fn.gridTextDx = function (d) {\n        return d.position === 'start' ? 4 : d.position === 'middle' ? 0 : -4;\n    };\n    c3_chart_internal_fn.xGridTextX = function (d) {\n        return d.position === 'start' ? -this.height : d.position === 'middle' ? -this.height / 2 : 0;\n    };\n    c3_chart_internal_fn.yGridTextX = function (d) {\n        return d.position === 'start' ? 0 : d.position === 'middle' ? this.width / 2 : this.width;\n    };\n    c3_chart_internal_fn.updateGrid = function (duration) {\n        var $$ = this, main = $$.main, config = $$.config,\n            xgridLine, ygridLine, yv;\n\n        // hide if arc type\n        $$.grid.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n        main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n        if (config.grid_x_show) {\n            $$.updateXGrid();\n        }\n        $$.xgridLines = main.select('.' + CLASS.xgridLines).selectAll('.' + CLASS.xgridLine)\n            .data(config.grid_x_lines);\n        // enter\n        xgridLine = $$.xgridLines.enter().append('g')\n            .attr(\"class\", function (d) { return CLASS.xgridLine + (d['class'] ? ' ' + d['class'] : ''); });\n        xgridLine.append('line')\n            .style(\"opacity\", 0);\n        xgridLine.append('text')\n            .attr(\"text-anchor\", $$.gridTextAnchor)\n            .attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\")\n            .attr('dx', $$.gridTextDx)\n            .attr('dy', -5)\n            .style(\"opacity\", 0);\n        // udpate\n        // done in d3.transition() of the end of this function\n        // exit\n        $$.xgridLines.exit().transition().duration(duration)\n            .style(\"opacity\", 0)\n            .remove();\n\n        // Y-Grid\n        if (config.grid_y_show) {\n            $$.updateYGrid();\n        }\n        $$.ygridLines = main.select('.' + CLASS.ygridLines).selectAll('.' + CLASS.ygridLine)\n            .data(config.grid_y_lines);\n        // enter\n        ygridLine = $$.ygridLines.enter().append('g')\n            .attr(\"class\", function (d) { return CLASS.ygridLine + (d['class'] ? ' ' + d['class'] : ''); });\n        ygridLine.append('line')\n            .style(\"opacity\", 0);\n        ygridLine.append('text')\n            .attr(\"text-anchor\", $$.gridTextAnchor)\n            .attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\")\n            .attr('dx', $$.gridTextDx)\n            .attr('dy', -5)\n            .style(\"opacity\", 0);\n        // update\n        yv = $$.yv.bind($$);\n        $$.ygridLines.select('line')\n          .transition().duration(duration)\n            .attr(\"x1\", config.axis_rotated ? yv : 0)\n            .attr(\"x2\", config.axis_rotated ? yv : $$.width)\n            .attr(\"y1\", config.axis_rotated ? 0 : yv)\n            .attr(\"y2\", config.axis_rotated ? $$.height : yv)\n            .style(\"opacity\", 1);\n        $$.ygridLines.select('text')\n          .transition().duration(duration)\n            .attr(\"x\", config.axis_rotated ? $$.xGridTextX.bind($$) : $$.yGridTextX.bind($$))\n            .attr(\"y\", yv)\n            .text(function (d) { return d.text; })\n            .style(\"opacity\", 1);\n        // exit\n        $$.ygridLines.exit().transition().duration(duration)\n            .style(\"opacity\", 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawGrid = function (withTransition) {\n        var $$ = this, config = $$.config, xv = $$.xv.bind($$),\n            lines = $$.xgridLines.select('line'),\n            texts = $$.xgridLines.select('text');\n        return [\n            (withTransition ? lines.transition() : lines)\n                .attr(\"x1\", config.axis_rotated ? 0 : xv)\n                .attr(\"x2\", config.axis_rotated ? $$.width : xv)\n                .attr(\"y1\", config.axis_rotated ? xv : 0)\n                .attr(\"y2\", config.axis_rotated ? xv : $$.height)\n                .style(\"opacity\", 1),\n            (withTransition ? texts.transition() : texts)\n                .attr(\"x\", config.axis_rotated ? $$.yGridTextX.bind($$) : $$.xGridTextX.bind($$))\n                .attr(\"y\", xv)\n                .text(function (d) { return d.text; })\n                .style(\"opacity\", 1)\n        ];\n    };\n    c3_chart_internal_fn.showXGridFocus = function (selectedData) {\n        var $$ = this, config = $$.config,\n            dataToShow = selectedData.filter(function (d) { return d && isValue(d.value); }),\n            focusEl = $$.main.selectAll('line.' + CLASS.xgridFocus),\n            xx = $$.xx.bind($$);\n        if (! config.tooltip_show) { return; }\n        // Hide when scatter plot exists\n        if ($$.hasType('scatter') || $$.hasArcType()) { return; }\n        focusEl\n            .style(\"visibility\", \"visible\")\n            .data([dataToShow[0]])\n            .attr(config.axis_rotated ? 'y1' : 'x1', xx)\n            .attr(config.axis_rotated ? 'y2' : 'x2', xx);\n        $$.smoothLines(focusEl, 'grid');\n    };\n    c3_chart_internal_fn.hideXGridFocus = function () {\n        this.main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n    };\n    c3_chart_internal_fn.updateXgridFocus = function () {\n        var $$ = this, config = $$.config;\n        $$.main.select('line.' + CLASS.xgridFocus)\n            .attr(\"x1\", config.axis_rotated ? 0 : -10)\n            .attr(\"x2\", config.axis_rotated ? $$.width : -10)\n            .attr(\"y1\", config.axis_rotated ? -10 : 0)\n            .attr(\"y2\", config.axis_rotated ? -10 : $$.height);\n    };\n    c3_chart_internal_fn.generateGridData = function (type, scale) {\n        var $$ = this,\n            gridData = [], xDomain, firstYear, lastYear, i,\n            tickNum = $$.main.select(\".\" + CLASS.axisX).selectAll('.tick').size();\n        if (type === 'year') {\n            xDomain = $$.getXDomain();\n            firstYear = xDomain[0].getFullYear();\n            lastYear = xDomain[1].getFullYear();\n            for (i = firstYear; i <= lastYear; i++) {\n                gridData.push(new Date(i + '-01-01 00:00:00'));\n            }\n        } else {\n            gridData = scale.ticks(10);\n            if (gridData.length > tickNum) { // use only int\n                gridData = gridData.filter(function (d) { return (\"\" + d).indexOf('.') < 0; });\n            }\n        }\n        return gridData;\n    };\n    c3_chart_internal_fn.getGridFilterToRemove = function (params) {\n        return params ? function (line) {\n            var found = false;\n            [].concat(params).forEach(function (param) {\n                if ((('value' in param && line.value === param.value) || ('class' in param && line['class'] === param['class']))) {\n                    found = true;\n                }\n            });\n            return found;\n        } : function () { return true; };\n    };\n    c3_chart_internal_fn.removeGridLines = function (params, forX) {\n        var $$ = this, config = $$.config,\n            toRemove = $$.getGridFilterToRemove(params),\n            toShow = function (line) { return !toRemove(line); },\n            classLines = forX ? CLASS.xgridLines : CLASS.ygridLines,\n            classLine = forX ? CLASS.xgridLine : CLASS.ygridLine;\n        $$.main.select('.' + classLines).selectAll('.' + classLine).filter(toRemove)\n            .transition().duration(config.transition_duration)\n            .style('opacity', 0).remove();\n        if (forX) {\n            config.grid_x_lines = config.grid_x_lines.filter(toShow);\n        } else {\n            config.grid_y_lines = config.grid_y_lines.filter(toShow);\n        }\n    };\n\n    c3_chart_internal_fn.initTooltip = function () {\n        var $$ = this, config = $$.config, i;\n        $$.tooltip = $$.selectChart\n            .style(\"position\", \"relative\")\n          .append(\"div\")\n            .attr('class', CLASS.tooltipContainer)\n            .style(\"position\", \"absolute\")\n            .style(\"pointer-events\", \"none\")\n            .style(\"display\", \"none\");\n        // Show tooltip if needed\n        if (config.tooltip_init_show) {\n            if ($$.isTimeSeries() && isString(config.tooltip_init_x)) {\n                config.tooltip_init_x = $$.parseDate(config.tooltip_init_x);\n                for (i = 0; i < $$.data.targets[0].values.length; i++) {\n                    if (($$.data.targets[0].values[i].x - config.tooltip_init_x) === 0) { break; }\n                }\n                config.tooltip_init_x = i;\n            }\n            $$.tooltip.html(config.tooltip_contents.call($$, $$.data.targets.map(function (d) {\n                return $$.addName(d.values[config.tooltip_init_x]);\n            }), $$.axis.getXAxisTickFormat(), $$.getYFormat($$.hasArcType()), $$.color));\n            $$.tooltip.style(\"top\", config.tooltip_init_position.top)\n                .style(\"left\", config.tooltip_init_position.left)\n                .style(\"display\", \"block\");\n        }\n    };\n    c3_chart_internal_fn.getTooltipContent = function (d, defaultTitleFormat, defaultValueFormat, color) {\n        var $$ = this, config = $$.config,\n            titleFormat = config.tooltip_format_title || defaultTitleFormat,\n            nameFormat = config.tooltip_format_name || function (name) { return name; },\n            valueFormat = config.tooltip_format_value || defaultValueFormat,\n            text, i, title, value, name, bgcolor,\n            orderAsc = $$.isOrderAsc();\n\n        if (config.data_groups.length === 0) {\n            d.sort(function(a, b){\n                var v1 = a ? a.value : null, v2 = b ? b.value : null;\n                return orderAsc ? v1 - v2 : v2 - v1;\n            });\n        } else {\n            var ids = $$.orderTargets($$.data.targets).map(function (i) {\n                return i.id;\n            });\n            d.sort(function(a, b) {\n                var v1 = a ? a.value : null, v2 = b ? b.value : null;\n                if (v1 > 0 && v2 > 0) {\n                    v1 = a ? ids.indexOf(a.id) : null;\n                    v2 = b ? ids.indexOf(b.id) : null;\n                }\n                return orderAsc ? v1 - v2 : v2 - v1;\n            });\n        }\n\n        for (i = 0; i < d.length; i++) {\n            if (! (d[i] && (d[i].value || d[i].value === 0))) { continue; }\n\n            if (! text) {\n                title = sanitise(titleFormat ? titleFormat(d[i].x) : d[i].x);\n                text = \"<table class='\" + $$.CLASS.tooltip + \"'>\" + (title || title === 0 ? \"<tr><th colspan='2'>\" + title + \"</th></tr>\" : \"\");\n            }\n\n            value = sanitise(valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index, d));\n            if (value !== undefined) {\n                // Skip elements when their name is set to null\n                if (d[i].name === null) { continue; }\n                name = sanitise(nameFormat(d[i].name, d[i].ratio, d[i].id, d[i].index));\n                bgcolor = $$.levelColor ? $$.levelColor(d[i].value) : color(d[i].id);\n\n                text += \"<tr class='\" + $$.CLASS.tooltipName + \"-\" + $$.getTargetSelectorSuffix(d[i].id) + \"'>\";\n                text += \"<td class='name'><span style='background-color:\" + bgcolor + \"'></span>\" + name + \"</td>\";\n                text += \"<td class='value'>\" + value + \"</td>\";\n                text += \"</tr>\";\n            }\n        }\n        return text + \"</table>\";\n    };\n    c3_chart_internal_fn.tooltipPosition = function (dataToShow, tWidth, tHeight, element) {\n        var $$ = this, config = $$.config, d3 = $$.d3;\n        var svgLeft, tooltipLeft, tooltipRight, tooltipTop, chartRight;\n        var forArc = $$.hasArcType(),\n            mouse = d3.mouse(element);\n      // Determin tooltip position\n        if (forArc) {\n            tooltipLeft = (($$.width - ($$.isLegendRight ? $$.getLegendWidth() : 0)) / 2) + mouse[0];\n            tooltipTop = ($$.height / 2) + mouse[1] + 20;\n        } else {\n            svgLeft = $$.getSvgLeft(true);\n            if (config.axis_rotated) {\n                tooltipLeft = svgLeft + mouse[0] + 100;\n                tooltipRight = tooltipLeft + tWidth;\n                chartRight = $$.currentWidth - $$.getCurrentPaddingRight();\n                tooltipTop = $$.x(dataToShow[0].x) + 20;\n            } else {\n                tooltipLeft = svgLeft + $$.getCurrentPaddingLeft(true) + $$.x(dataToShow[0].x) + 20;\n                tooltipRight = tooltipLeft + tWidth;\n                chartRight = svgLeft + $$.currentWidth - $$.getCurrentPaddingRight();\n                tooltipTop = mouse[1] + 15;\n            }\n\n            if (tooltipRight > chartRight) {\n                // 20 is needed for Firefox to keep tooltip width\n                tooltipLeft -= tooltipRight - chartRight + 20;\n            }\n            if (tooltipTop + tHeight > $$.currentHeight) {\n                tooltipTop -= tHeight + 30;\n            }\n        }\n        if (tooltipTop < 0) {\n            tooltipTop = 0;\n        }\n        return {top: tooltipTop, left: tooltipLeft};\n    };\n    c3_chart_internal_fn.showTooltip = function (selectedData, element) {\n        var $$ = this, config = $$.config;\n        var tWidth, tHeight, position;\n        var forArc = $$.hasArcType(),\n            dataToShow = selectedData.filter(function (d) { return d && isValue(d.value); }),\n            positionFunction = config.tooltip_position || c3_chart_internal_fn.tooltipPosition;\n        if (dataToShow.length === 0 || !config.tooltip_show) {\n            return;\n        }\n        $$.tooltip.html(config.tooltip_contents.call($$, selectedData, $$.axis.getXAxisTickFormat(), $$.getYFormat(forArc), $$.color)).style(\"display\", \"block\");\n\n        // Get tooltip dimensions\n        tWidth = $$.tooltip.property('offsetWidth');\n        tHeight = $$.tooltip.property('offsetHeight');\n\n        position = positionFunction.call(this, dataToShow, tWidth, tHeight, element);\n        // Set tooltip\n        $$.tooltip\n            .style(\"top\", position.top + \"px\")\n            .style(\"left\", position.left + 'px');\n    };\n    c3_chart_internal_fn.hideTooltip = function () {\n        this.tooltip.style(\"display\", \"none\");\n    };\n\n    c3_chart_internal_fn.initLegend = function () {\n        var $$ = this;\n        $$.legendItemTextBox = {};\n        $$.legendHasRendered = false;\n        $$.legend = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('legend'));\n        if (!$$.config.legend_show) {\n            $$.legend.style('visibility', 'hidden');\n            $$.hiddenLegendIds = $$.mapToIds($$.data.targets);\n            return;\n        }\n        // MEMO: call here to update legend box and tranlate for all\n        // MEMO: translate will be upated by this, so transform not needed in updateLegend()\n        $$.updateLegendWithDefaults();\n    };\n    c3_chart_internal_fn.updateLegendWithDefaults = function () {\n        var $$ = this;\n        $$.updateLegend($$.mapToIds($$.data.targets), {withTransform: false, withTransitionForTransform: false, withTransition: false});\n    };\n    c3_chart_internal_fn.updateSizeForLegend = function (legendHeight, legendWidth) {\n        var $$ = this, config = $$.config, insetLegendPosition = {\n            top: $$.isLegendTop ? $$.getCurrentPaddingTop() + config.legend_inset_y + 5.5 : $$.currentHeight - legendHeight - $$.getCurrentPaddingBottom() - config.legend_inset_y,\n            left: $$.isLegendLeft ? $$.getCurrentPaddingLeft() + config.legend_inset_x + 0.5 : $$.currentWidth - legendWidth - $$.getCurrentPaddingRight() - config.legend_inset_x + 0.5\n        };\n\n        $$.margin3 = {\n            top: $$.isLegendRight ? 0 : $$.isLegendInset ? insetLegendPosition.top : $$.currentHeight - legendHeight,\n            right: NaN,\n            bottom: 0,\n            left: $$.isLegendRight ? $$.currentWidth - legendWidth : $$.isLegendInset ? insetLegendPosition.left : 0\n        };\n    };\n    c3_chart_internal_fn.transformLegend = function (withTransition) {\n        var $$ = this;\n        (withTransition ? $$.legend.transition() : $$.legend).attr(\"transform\", $$.getTranslate('legend'));\n    };\n    c3_chart_internal_fn.updateLegendStep = function (step) {\n        this.legendStep = step;\n    };\n    c3_chart_internal_fn.updateLegendItemWidth = function (w) {\n        this.legendItemWidth = w;\n    };\n    c3_chart_internal_fn.updateLegendItemHeight = function (h) {\n        this.legendItemHeight = h;\n    };\n    c3_chart_internal_fn.getLegendWidth = function () {\n        var $$ = this;\n        return $$.config.legend_show ? $$.isLegendRight || $$.isLegendInset ? $$.legendItemWidth * ($$.legendStep + 1) : $$.currentWidth : 0;\n    };\n    c3_chart_internal_fn.getLegendHeight = function () {\n        var $$ = this, h = 0;\n        if ($$.config.legend_show) {\n            if ($$.isLegendRight) {\n                h = $$.currentHeight;\n            } else {\n                h = Math.max(20, $$.legendItemHeight) * ($$.legendStep + 1);\n            }\n        }\n        return h;\n    };\n    c3_chart_internal_fn.opacityForLegend = function (legendItem) {\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 1;\n    };\n    c3_chart_internal_fn.opacityForUnfocusedLegend = function (legendItem) {\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 0.3;\n    };\n    c3_chart_internal_fn.toggleFocusLegend = function (targetIds, focus) {\n        var $$ = this;\n        targetIds = $$.mapToTargetIds(targetIds);\n        $$.legend.selectAll('.' + CLASS.legendItem)\n            .filter(function (id) { return targetIds.indexOf(id) >= 0; })\n            .classed(CLASS.legendItemFocused, focus)\n          .transition().duration(100)\n            .style('opacity', function () {\n                var opacity = focus ? $$.opacityForLegend : $$.opacityForUnfocusedLegend;\n                return opacity.call($$, $$.d3.select(this));\n            });\n    };\n    c3_chart_internal_fn.revertLegend = function () {\n        var $$ = this, d3 = $$.d3;\n        $$.legend.selectAll('.' + CLASS.legendItem)\n            .classed(CLASS.legendItemFocused, false)\n            .transition().duration(100)\n            .style('opacity', function () { return $$.opacityForLegend(d3.select(this)); });\n    };\n    c3_chart_internal_fn.showLegend = function (targetIds) {\n        var $$ = this, config = $$.config;\n        if (!config.legend_show) {\n            config.legend_show = true;\n            $$.legend.style('visibility', 'visible');\n            if (!$$.legendHasRendered) {\n                $$.updateLegendWithDefaults();\n            }\n        }\n        $$.removeHiddenLegendIds(targetIds);\n        $$.legend.selectAll($$.selectorLegends(targetIds))\n            .style('visibility', 'visible')\n            .transition()\n            .style('opacity', function () { return $$.opacityForLegend($$.d3.select(this)); });\n    };\n    c3_chart_internal_fn.hideLegend = function (targetIds) {\n        var $$ = this, config = $$.config;\n        if (config.legend_show && isEmpty(targetIds)) {\n            config.legend_show = false;\n            $$.legend.style('visibility', 'hidden');\n        }\n        $$.addHiddenLegendIds(targetIds);\n        $$.legend.selectAll($$.selectorLegends(targetIds))\n            .style('opacity', 0)\n            .style('visibility', 'hidden');\n    };\n    c3_chart_internal_fn.clearLegendItemTextBoxCache = function () {\n        this.legendItemTextBox = {};\n    };\n    c3_chart_internal_fn.updateLegend = function (targetIds, options, transitions) {\n        var $$ = this, config = $$.config;\n        var xForLegend, xForLegendText, xForLegendRect, yForLegend, yForLegendText, yForLegendRect, x1ForLegendTile, x2ForLegendTile, yForLegendTile;\n        var paddingTop = 4, paddingRight = 10, maxWidth = 0, maxHeight = 0, posMin = 10, tileWidth = config.legend_item_tile_width + 5;\n        var l, totalLength = 0, offsets = {}, widths = {}, heights = {}, margins = [0], steps = {}, step = 0;\n        var withTransition, withTransitionForTransform;\n        var texts, rects, tiles, background;\n\n        // Skip elements when their name is set to null\n        targetIds = targetIds.filter(function(id) {\n            return !isDefined(config.data_names[id]) || config.data_names[id] !== null;\n        });\n\n        options = options || {};\n        withTransition = getOption(options, \"withTransition\", true);\n        withTransitionForTransform = getOption(options, \"withTransitionForTransform\", true);\n\n        function getTextBox(textElement, id) {\n            if (!$$.legendItemTextBox[id]) {\n                $$.legendItemTextBox[id] = $$.getTextRect(textElement.textContent, CLASS.legendItem, textElement);\n            }\n            return $$.legendItemTextBox[id];\n        }\n\n        function updatePositions(textElement, id, index) {\n            var reset = index === 0, isLast = index === targetIds.length - 1,\n                box = getTextBox(textElement, id),\n                itemWidth = box.width + tileWidth + (isLast && !($$.isLegendRight || $$.isLegendInset) ? 0 : paddingRight) + config.legend_padding,\n                itemHeight = box.height + paddingTop,\n                itemLength = $$.isLegendRight || $$.isLegendInset ? itemHeight : itemWidth,\n                areaLength = $$.isLegendRight || $$.isLegendInset ? $$.getLegendHeight() : $$.getLegendWidth(),\n                margin, maxLength;\n\n            // MEMO: care about condifion of step, totalLength\n            function updateValues(id, withoutStep) {\n                if (!withoutStep) {\n                    margin = (areaLength - totalLength - itemLength) / 2;\n                    if (margin < posMin) {\n                        margin = (areaLength - itemLength) / 2;\n                        totalLength = 0;\n                        step++;\n                    }\n                }\n                steps[id] = step;\n                margins[step] = $$.isLegendInset ? 10 : margin;\n                offsets[id] = totalLength;\n                totalLength += itemLength;\n            }\n\n            if (reset) {\n                totalLength = 0;\n                step = 0;\n                maxWidth = 0;\n                maxHeight = 0;\n            }\n\n            if (config.legend_show && !$$.isLegendToShow(id)) {\n                widths[id] = heights[id] = steps[id] = offsets[id] = 0;\n                return;\n            }\n\n            widths[id] = itemWidth;\n            heights[id] = itemHeight;\n\n            if (!maxWidth || itemWidth >= maxWidth) { maxWidth = itemWidth; }\n            if (!maxHeight || itemHeight >= maxHeight) { maxHeight = itemHeight; }\n            maxLength = $$.isLegendRight || $$.isLegendInset ? maxHeight : maxWidth;\n\n            if (config.legend_equally) {\n                Object.keys(widths).forEach(function (id) { widths[id] = maxWidth; });\n                Object.keys(heights).forEach(function (id) { heights[id] = maxHeight; });\n                margin = (areaLength - maxLength * targetIds.length) / 2;\n                if (margin < posMin) {\n                    totalLength = 0;\n                    step = 0;\n                    targetIds.forEach(function (id) { updateValues(id); });\n                }\n                else {\n                    updateValues(id, true);\n                }\n            } else {\n                updateValues(id);\n            }\n        }\n\n        if ($$.isLegendInset) {\n            step = config.legend_inset_step ? config.legend_inset_step : targetIds.length;\n            $$.updateLegendStep(step);\n        }\n\n        if ($$.isLegendRight) {\n            xForLegend = function (id) { return maxWidth * steps[id]; };\n            yForLegend = function (id) { return margins[steps[id]] + offsets[id]; };\n        } else if ($$.isLegendInset) {\n            xForLegend = function (id) { return maxWidth * steps[id] + 10; };\n            yForLegend = function (id) { return margins[steps[id]] + offsets[id]; };\n        } else {\n            xForLegend = function (id) { return margins[steps[id]] + offsets[id]; };\n            yForLegend = function (id) { return maxHeight * steps[id]; };\n        }\n        xForLegendText = function (id, i) { return xForLegend(id, i) + 4 + config.legend_item_tile_width; };\n        yForLegendText = function (id, i) { return yForLegend(id, i) + 9; };\n        xForLegendRect = function (id, i) { return xForLegend(id, i); };\n        yForLegendRect = function (id, i) { return yForLegend(id, i) - 5; };\n        x1ForLegendTile = function (id, i) { return xForLegend(id, i) - 2; };\n        x2ForLegendTile = function (id, i) { return xForLegend(id, i) - 2 + config.legend_item_tile_width; };\n        yForLegendTile = function (id, i) { return yForLegend(id, i) + 4; };\n\n        // Define g for legend area\n        l = $$.legend.selectAll('.' + CLASS.legendItem)\n            .data(targetIds)\n            .enter().append('g')\n            .attr('class', function (id) { return $$.generateClass(CLASS.legendItem, id); })\n            .style('visibility', function (id) { return $$.isLegendToShow(id) ? 'visible' : 'hidden'; })\n            .style('cursor', 'pointer')\n            .on('click', function (id) {\n                if (config.legend_item_onclick) {\n                    config.legend_item_onclick.call($$, id);\n                } else {\n                    if ($$.d3.event.altKey) {\n                        $$.api.hide();\n                        $$.api.show(id);\n                    } else {\n                        $$.api.toggle(id);\n                        $$.isTargetToShow(id) ? $$.api.focus(id) : $$.api.revert();\n                    }\n                }\n            })\n            .on('mouseover', function (id) {\n                if (config.legend_item_onmouseover) {\n                    config.legend_item_onmouseover.call($$, id);\n                }\n                else {\n                    $$.d3.select(this).classed(CLASS.legendItemFocused, true);\n                    if (!$$.transiting && $$.isTargetToShow(id)) {\n                        $$.api.focus(id);\n                    }\n                }\n            })\n            .on('mouseout', function (id) {\n                if (config.legend_item_onmouseout) {\n                    config.legend_item_onmouseout.call($$, id);\n                }\n                else {\n                    $$.d3.select(this).classed(CLASS.legendItemFocused, false);\n                    $$.api.revert();\n                }\n            });\n        l.append('text')\n            .text(function (id) { return isDefined(config.data_names[id]) ? config.data_names[id] : id; })\n            .each(function (id, i) { updatePositions(this, id, i); })\n            .style(\"pointer-events\", \"none\")\n            .attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendText : -200)\n            .attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendText);\n        l.append('rect')\n            .attr(\"class\", CLASS.legendItemEvent)\n            .style('fill-opacity', 0)\n            .attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendRect : -200)\n            .attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendRect);\n        l.append('line')\n            .attr('class', CLASS.legendItemTile)\n            .style('stroke', $$.color)\n            .style(\"pointer-events\", \"none\")\n            .attr('x1', $$.isLegendRight || $$.isLegendInset ? x1ForLegendTile : -200)\n            .attr('y1', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile)\n            .attr('x2', $$.isLegendRight || $$.isLegendInset ? x2ForLegendTile : -200)\n            .attr('y2', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile)\n            .attr('stroke-width', config.legend_item_tile_height);\n\n        // Set background for inset legend\n        background = $$.legend.select('.' + CLASS.legendBackground + ' rect');\n        if ($$.isLegendInset && maxWidth > 0 && background.size() === 0) {\n            background = $$.legend.insert('g', '.' + CLASS.legendItem)\n                .attr(\"class\", CLASS.legendBackground)\n                .append('rect');\n        }\n\n        texts = $$.legend.selectAll('text')\n            .data(targetIds)\n            .text(function (id) { return isDefined(config.data_names[id]) ? config.data_names[id] : id; }) // MEMO: needed for update\n            .each(function (id, i) { updatePositions(this, id, i); });\n        (withTransition ? texts.transition() : texts)\n            .attr('x', xForLegendText)\n            .attr('y', yForLegendText);\n\n        rects = $$.legend.selectAll('rect.' + CLASS.legendItemEvent)\n            .data(targetIds);\n        (withTransition ? rects.transition() : rects)\n            .attr('width', function (id) { return widths[id]; })\n            .attr('height', function (id) { return heights[id]; })\n            .attr('x', xForLegendRect)\n            .attr('y', yForLegendRect);\n\n        tiles = $$.legend.selectAll('line.' + CLASS.legendItemTile)\n                .data(targetIds);\n            (withTransition ? tiles.transition() : tiles)\n                .style('stroke', $$.color)\n                .attr('x1', x1ForLegendTile)\n                .attr('y1', yForLegendTile)\n                .attr('x2', x2ForLegendTile)\n                .attr('y2', yForLegendTile);\n\n        if (background) {\n            (withTransition ? background.transition() : background)\n                .attr('height', $$.getLegendHeight() - 12)\n                .attr('width', maxWidth * (step + 1) + 10);\n        }\n\n        // toggle legend state\n        $$.legend.selectAll('.' + CLASS.legendItem)\n            .classed(CLASS.legendItemHidden, function (id) { return !$$.isTargetToShow(id); });\n\n        // Update all to reflect change of legend\n        $$.updateLegendItemWidth(maxWidth);\n        $$.updateLegendItemHeight(maxHeight);\n        $$.updateLegendStep(step);\n        // Update size and scale\n        $$.updateSizes();\n        $$.updateScales();\n        $$.updateSvgSize();\n        // Update g positions\n        $$.transformAll(withTransitionForTransform, transitions);\n        $$.legendHasRendered = true;\n    };\n\n    c3_chart_internal_fn.initTitle = function () {\n        var $$ = this;\n        $$.title = $$.svg.append(\"text\")\n              .text($$.config.title_text)\n              .attr(\"class\", $$.CLASS.title);\n    };\n    c3_chart_internal_fn.redrawTitle = function () {\n        var $$ = this;\n        $$.title\n              .attr(\"x\", $$.xForTitle.bind($$))\n              .attr(\"y\", $$.yForTitle.bind($$));\n    };\n    c3_chart_internal_fn.xForTitle = function () {\n        var $$ = this, config = $$.config, position = config.title_position || 'left', x;\n        if (position.indexOf('right') >= 0) {\n            x = $$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width - config.title_padding.right;\n        } else if (position.indexOf('center') >= 0) {\n            x = ($$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width) / 2;\n        } else { // left\n            x = config.title_padding.left;\n        }\n        return x;\n    };\n    c3_chart_internal_fn.yForTitle = function () {\n        var $$ = this;\n        return $$.config.title_padding.top + $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).height;\n    };\n    c3_chart_internal_fn.getTitlePadding = function() {\n        var $$ = this;\n        return $$.yForTitle() + $$.config.title_padding.bottom;\n    };\n\n    function Axis(owner) {\n        API.call(this, owner);\n    }\n\n    inherit(API, Axis);\n\n    Axis.prototype.init = function init() {\n\n        var $$ = this.owner, config = $$.config, main = $$.main;\n        $$.axes.x = main.append(\"g\")\n            .attr(\"class\", CLASS.axis + ' ' + CLASS.axisX)\n            .attr(\"clip-path\", $$.clipPathForXAxis)\n            .attr(\"transform\", $$.getTranslate('x'))\n            .style(\"visibility\", config.axis_x_show ? 'visible' : 'hidden');\n        $$.axes.x.append(\"text\")\n            .attr(\"class\", CLASS.axisXLabel)\n            .attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\")\n            .style(\"text-anchor\", this.textAnchorForXAxisLabel.bind(this));\n        $$.axes.y = main.append(\"g\")\n            .attr(\"class\", CLASS.axis + ' ' + CLASS.axisY)\n            .attr(\"clip-path\", config.axis_y_inner ? \"\" : $$.clipPathForYAxis)\n            .attr(\"transform\", $$.getTranslate('y'))\n            .style(\"visibility\", config.axis_y_show ? 'visible' : 'hidden');\n        $$.axes.y.append(\"text\")\n            .attr(\"class\", CLASS.axisYLabel)\n            .attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\")\n            .style(\"text-anchor\", this.textAnchorForYAxisLabel.bind(this));\n\n        $$.axes.y2 = main.append(\"g\")\n            .attr(\"class\", CLASS.axis + ' ' + CLASS.axisY2)\n            // clip-path?\n            .attr(\"transform\", $$.getTranslate('y2'))\n            .style(\"visibility\", config.axis_y2_show ? 'visible' : 'hidden');\n        $$.axes.y2.append(\"text\")\n            .attr(\"class\", CLASS.axisY2Label)\n            .attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\")\n            .style(\"text-anchor\", this.textAnchorForY2AxisLabel.bind(this));\n    };\n    Axis.prototype.getXAxis = function getXAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n        var $$ = this.owner, config = $$.config,\n            axisParams = {\n                isCategory: $$.isCategorized(),\n                withOuterTick: withOuterTick,\n                tickMultiline: config.axis_x_tick_multiline,\n                tickWidth: config.axis_x_tick_width,\n                tickTextRotate: withoutRotateTickText ? 0 : config.axis_x_tick_rotate,\n                withoutTransition: withoutTransition,\n            },\n            axis = c3_axis($$.d3, axisParams).scale(scale).orient(orient);\n\n        if ($$.isTimeSeries() && tickValues && typeof tickValues !== \"function\") {\n            tickValues = tickValues.map(function (v) { return $$.parseDate(v); });\n        }\n\n        // Set tick\n        axis.tickFormat(tickFormat).tickValues(tickValues);\n        if ($$.isCategorized()) {\n            axis.tickCentered(config.axis_x_tick_centered);\n            if (isEmpty(config.axis_x_tick_culling)) {\n                config.axis_x_tick_culling = false;\n            }\n        }\n\n        return axis;\n    };\n    Axis.prototype.updateXAxisTickValues = function updateXAxisTickValues(targets, axis) {\n        var $$ = this.owner, config = $$.config, tickValues;\n        if (config.axis_x_tick_fit || config.axis_x_tick_count) {\n            tickValues = this.generateTickValues($$.mapTargetsToUniqueXs(targets), config.axis_x_tick_count, $$.isTimeSeries());\n        }\n        if (axis) {\n            axis.tickValues(tickValues);\n        } else {\n            $$.xAxis.tickValues(tickValues);\n            $$.subXAxis.tickValues(tickValues);\n        }\n        return tickValues;\n    };\n    Axis.prototype.getYAxis = function getYAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n        var $$ = this.owner, config = $$.config,\n            axisParams = {\n                withOuterTick: withOuterTick,\n                withoutTransition: withoutTransition,\n                tickTextRotate: withoutRotateTickText ? 0 : config.axis_y_tick_rotate\n            },\n            axis = c3_axis($$.d3, axisParams).scale(scale).orient(orient).tickFormat(tickFormat);\n        if ($$.isTimeSeriesY()) {\n            axis.ticks($$.d3.time[config.axis_y_tick_time_value], config.axis_y_tick_time_interval);\n        } else {\n            axis.tickValues(tickValues);\n        }\n        return axis;\n    };\n    Axis.prototype.getId = function getId(id) {\n        var config = this.owner.config;\n        return id in config.data_axes ? config.data_axes[id] : 'y';\n    };\n    Axis.prototype.getXAxisTickFormat = function getXAxisTickFormat() {\n        var $$ = this.owner, config = $$.config,\n            format = $$.isTimeSeries() ? $$.defaultAxisTimeFormat : $$.isCategorized() ? $$.categoryName : function (v) { return v < 0 ? v.toFixed(0) : v; };\n        if (config.axis_x_tick_format) {\n            if (isFunction(config.axis_x_tick_format)) {\n                format = config.axis_x_tick_format;\n            } else if ($$.isTimeSeries()) {\n                format = function (date) {\n                    return date ? $$.axisTimeFormat(config.axis_x_tick_format)(date) : \"\";\n                };\n            }\n        }\n        return isFunction(format) ? function (v) { return format.call($$, v); } : format;\n    };\n    Axis.prototype.getTickValues = function getTickValues(tickValues, axis) {\n        return tickValues ? tickValues : axis ? axis.tickValues() : undefined;\n    };\n    Axis.prototype.getXAxisTickValues = function getXAxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_x_tick_values, this.owner.xAxis);\n    };\n    Axis.prototype.getYAxisTickValues = function getYAxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_y_tick_values, this.owner.yAxis);\n    };\n    Axis.prototype.getY2AxisTickValues = function getY2AxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_y2_tick_values, this.owner.y2Axis);\n    };\n    Axis.prototype.getLabelOptionByAxisId = function getLabelOptionByAxisId(axisId) {\n        var $$ = this.owner, config = $$.config, option;\n        if (axisId === 'y') {\n            option = config.axis_y_label;\n        } else if (axisId === 'y2') {\n            option = config.axis_y2_label;\n        } else if (axisId === 'x') {\n            option = config.axis_x_label;\n        }\n        return option;\n    };\n    Axis.prototype.getLabelText = function getLabelText(axisId) {\n        var option = this.getLabelOptionByAxisId(axisId);\n        return isString(option) ? option : option ? option.text : null;\n    };\n    Axis.prototype.setLabelText = function setLabelText(axisId, text) {\n        var $$ = this.owner, config = $$.config,\n            option = this.getLabelOptionByAxisId(axisId);\n        if (isString(option)) {\n            if (axisId === 'y') {\n                config.axis_y_label = text;\n            } else if (axisId === 'y2') {\n                config.axis_y2_label = text;\n            } else if (axisId === 'x') {\n                config.axis_x_label = text;\n            }\n        } else if (option) {\n            option.text = text;\n        }\n    };\n    Axis.prototype.getLabelPosition = function getLabelPosition(axisId, defaultPosition) {\n        var option = this.getLabelOptionByAxisId(axisId),\n            position = (option && typeof option === 'object' && option.position) ? option.position : defaultPosition;\n        return {\n            isInner: position.indexOf('inner') >= 0,\n            isOuter: position.indexOf('outer') >= 0,\n            isLeft: position.indexOf('left') >= 0,\n            isCenter: position.indexOf('center') >= 0,\n            isRight: position.indexOf('right') >= 0,\n            isTop: position.indexOf('top') >= 0,\n            isMiddle: position.indexOf('middle') >= 0,\n            isBottom: position.indexOf('bottom') >= 0\n        };\n    };\n    Axis.prototype.getXAxisLabelPosition = function getXAxisLabelPosition() {\n        return this.getLabelPosition('x', this.owner.config.axis_rotated ? 'inner-top' : 'inner-right');\n    };\n    Axis.prototype.getYAxisLabelPosition = function getYAxisLabelPosition() {\n        return this.getLabelPosition('y', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n    };\n    Axis.prototype.getY2AxisLabelPosition = function getY2AxisLabelPosition() {\n        return this.getLabelPosition('y2', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n    };\n    Axis.prototype.getLabelPositionById = function getLabelPositionById(id) {\n        return id === 'y2' ? this.getY2AxisLabelPosition() : id === 'y' ? this.getYAxisLabelPosition() : this.getXAxisLabelPosition();\n    };\n    Axis.prototype.textForXAxisLabel = function textForXAxisLabel() {\n        return this.getLabelText('x');\n    };\n    Axis.prototype.textForYAxisLabel = function textForYAxisLabel() {\n        return this.getLabelText('y');\n    };\n    Axis.prototype.textForY2AxisLabel = function textForY2AxisLabel() {\n        return this.getLabelText('y2');\n    };\n    Axis.prototype.xForAxisLabel = function xForAxisLabel(forHorizontal, position) {\n        var $$ = this.owner;\n        if (forHorizontal) {\n            return position.isLeft ? 0 : position.isCenter ? $$.width / 2 : $$.width;\n        } else {\n            return position.isBottom ? -$$.height : position.isMiddle ? -$$.height / 2 : 0;\n        }\n    };\n    Axis.prototype.dxForAxisLabel = function dxForAxisLabel(forHorizontal, position) {\n        if (forHorizontal) {\n            return position.isLeft ? \"0.5em\" : position.isRight ? \"-0.5em\" : \"0\";\n        } else {\n            return position.isTop ? \"-0.5em\" : position.isBottom ? \"0.5em\" : \"0\";\n        }\n    };\n    Axis.prototype.textAnchorForAxisLabel = function textAnchorForAxisLabel(forHorizontal, position) {\n        if (forHorizontal) {\n            return position.isLeft ? 'start' : position.isCenter ? 'middle' : 'end';\n        } else {\n            return position.isBottom ? 'start' : position.isMiddle ? 'middle' : 'end';\n        }\n    };\n    Axis.prototype.xForXAxisLabel = function xForXAxisLabel() {\n        return this.xForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    Axis.prototype.xForYAxisLabel = function xForYAxisLabel() {\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    Axis.prototype.xForY2AxisLabel = function xForY2AxisLabel() {\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    Axis.prototype.dxForXAxisLabel = function dxForXAxisLabel() {\n        return this.dxForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    Axis.prototype.dxForYAxisLabel = function dxForYAxisLabel() {\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    Axis.prototype.dxForY2AxisLabel = function dxForY2AxisLabel() {\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    Axis.prototype.dyForXAxisLabel = function dyForXAxisLabel() {\n        var $$ = this.owner, config = $$.config,\n            position = this.getXAxisLabelPosition();\n        if (config.axis_rotated) {\n            return position.isInner ? \"1.2em\" : -25 - this.getMaxTickWidth('x');\n        } else {\n            return position.isInner ? \"-0.5em\" : config.axis_x_height ? config.axis_x_height - 10 : \"3em\";\n        }\n    };\n    Axis.prototype.dyForYAxisLabel = function dyForYAxisLabel() {\n        var $$ = this.owner,\n            position = this.getYAxisLabelPosition();\n        if ($$.config.axis_rotated) {\n            return position.isInner ? \"-0.5em\" : \"3em\";\n        } else {\n            return position.isInner ? \"1.2em\" : -10 - ($$.config.axis_y_inner ? 0 : (this.getMaxTickWidth('y') + 10));\n        }\n    };\n    Axis.prototype.dyForY2AxisLabel = function dyForY2AxisLabel() {\n        var $$ = this.owner,\n            position = this.getY2AxisLabelPosition();\n        if ($$.config.axis_rotated) {\n            return position.isInner ? \"1.2em\" : \"-2.2em\";\n        } else {\n            return position.isInner ? \"-0.5em\" : 15 + ($$.config.axis_y2_inner ? 0 : (this.getMaxTickWidth('y2') + 15));\n        }\n    };\n    Axis.prototype.textAnchorForXAxisLabel = function textAnchorForXAxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel(!$$.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    Axis.prototype.textAnchorForYAxisLabel = function textAnchorForYAxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    Axis.prototype.textAnchorForY2AxisLabel = function textAnchorForY2AxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    Axis.prototype.getMaxTickWidth = function getMaxTickWidth(id, withoutRecompute) {\n        var $$ = this.owner, config = $$.config,\n            maxWidth = 0, targetsToShow, scale, axis, dummy, svg;\n        if (withoutRecompute && $$.currentMaxTickWidths[id]) {\n            return $$.currentMaxTickWidths[id];\n        }\n        if ($$.svg) {\n            targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            if (id === 'y') {\n                scale = $$.y.copy().domain($$.getYDomain(targetsToShow, 'y'));\n                axis = this.getYAxis(scale, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, false, true, true);\n            } else if (id === 'y2') {\n                scale = $$.y2.copy().domain($$.getYDomain(targetsToShow, 'y2'));\n                axis = this.getYAxis(scale, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, false, true, true);\n            } else {\n                scale = $$.x.copy().domain($$.getXDomain(targetsToShow));\n                axis = this.getXAxis(scale, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, false, true, true);\n                this.updateXAxisTickValues(targetsToShow, axis);\n            }\n            dummy = $$.d3.select('body').append('div').classed('c3', true);\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\n            svg.append('g').call(axis).each(function () {\n                $$.d3.select(this).selectAll('text').each(function () {\n                    var box = this.getBoundingClientRect();\n                    if (maxWidth < box.width) { maxWidth = box.width; }\n                });\n                dummy.remove();\n            });\n        }\n        $$.currentMaxTickWidths[id] = maxWidth <= 0 ? $$.currentMaxTickWidths[id] : maxWidth;\n        return $$.currentMaxTickWidths[id];\n    };\n\n    Axis.prototype.updateLabels = function updateLabels(withTransition) {\n        var $$ = this.owner;\n        var axisXLabel = $$.main.select('.' + CLASS.axisX + ' .' + CLASS.axisXLabel),\n            axisYLabel = $$.main.select('.' + CLASS.axisY + ' .' + CLASS.axisYLabel),\n            axisY2Label = $$.main.select('.' + CLASS.axisY2 + ' .' + CLASS.axisY2Label);\n        (withTransition ? axisXLabel.transition() : axisXLabel)\n            .attr(\"x\", this.xForXAxisLabel.bind(this))\n            .attr(\"dx\", this.dxForXAxisLabel.bind(this))\n            .attr(\"dy\", this.dyForXAxisLabel.bind(this))\n            .text(this.textForXAxisLabel.bind(this));\n        (withTransition ? axisYLabel.transition() : axisYLabel)\n            .attr(\"x\", this.xForYAxisLabel.bind(this))\n            .attr(\"dx\", this.dxForYAxisLabel.bind(this))\n            .attr(\"dy\", this.dyForYAxisLabel.bind(this))\n            .text(this.textForYAxisLabel.bind(this));\n        (withTransition ? axisY2Label.transition() : axisY2Label)\n            .attr(\"x\", this.xForY2AxisLabel.bind(this))\n            .attr(\"dx\", this.dxForY2AxisLabel.bind(this))\n            .attr(\"dy\", this.dyForY2AxisLabel.bind(this))\n            .text(this.textForY2AxisLabel.bind(this));\n    };\n    Axis.prototype.getPadding = function getPadding(padding, key, defaultValue, domainLength) {\n        var p = typeof padding === 'number' ? padding : padding[key];\n        if (!isValue(p)) {\n            return defaultValue;\n        }\n        if (padding.unit === 'ratio') {\n            return padding[key] * domainLength;\n        }\n        // assume padding is pixels if unit is not specified\n        return this.convertPixelsToAxisPadding(p, domainLength);\n    };\n    Axis.prototype.convertPixelsToAxisPadding = function convertPixelsToAxisPadding(pixels, domainLength) {\n        var $$ = this.owner,\n            length = $$.config.axis_rotated ? $$.width : $$.height;\n        return domainLength * (pixels / length);\n    };\n    Axis.prototype.generateTickValues = function generateTickValues(values, tickCount, forTimeSeries) {\n        var tickValues = values, targetCount, start, end, count, interval, i, tickValue;\n        if (tickCount) {\n            targetCount = isFunction(tickCount) ? tickCount() : tickCount;\n            // compute ticks according to tickCount\n            if (targetCount === 1) {\n                tickValues = [values[0]];\n            } else if (targetCount === 2) {\n                tickValues = [values[0], values[values.length - 1]];\n            } else if (targetCount > 2) {\n                count = targetCount - 2;\n                start = values[0];\n                end = values[values.length - 1];\n                interval = (end - start) / (count + 1);\n                // re-construct unique values\n                tickValues = [start];\n                for (i = 0; i < count; i++) {\n                    tickValue = +start + interval * (i + 1);\n                    tickValues.push(forTimeSeries ? new Date(tickValue) : tickValue);\n                }\n                tickValues.push(end);\n            }\n        }\n        if (!forTimeSeries) { tickValues = tickValues.sort(function (a, b) { return a - b; }); }\n        return tickValues;\n    };\n    Axis.prototype.generateTransitions = function generateTransitions(duration) {\n        var $$ = this.owner, axes = $$.axes;\n        return {\n            axisX: duration ? axes.x.transition().duration(duration) : axes.x,\n            axisY: duration ? axes.y.transition().duration(duration) : axes.y,\n            axisY2: duration ? axes.y2.transition().duration(duration) : axes.y2,\n            axisSubX: duration ? axes.subx.transition().duration(duration) : axes.subx\n        };\n    };\n    Axis.prototype.redraw = function redraw(transitions, isHidden) {\n        var $$ = this.owner;\n        $$.axes.x.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.y.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.y2.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.subx.style(\"opacity\", isHidden ? 0 : 1);\n        transitions.axisX.call($$.xAxis);\n        transitions.axisY.call($$.yAxis);\n        transitions.axisY2.call($$.y2Axis);\n        transitions.axisSubX.call($$.subXAxis);\n    };\n\n    c3_chart_internal_fn.getClipPath = function (id) {\n        var isIE9 = window.navigator.appVersion.toLowerCase().indexOf(\"msie 9.\") >= 0;\n        return \"url(\" + (isIE9 ? \"\" : document.URL.split('#')[0]) + \"#\" + id + \")\";\n    };\n    c3_chart_internal_fn.appendClip = function (parent, id) {\n        return parent.append(\"clipPath\").attr(\"id\", id).append(\"rect\");\n    };\n    c3_chart_internal_fn.getAxisClipX = function (forHorizontal) {\n        // axis line width + padding for left\n        var left = Math.max(30, this.margin.left);\n        return forHorizontal ? -(1 + left) : -(left - 1);\n    };\n    c3_chart_internal_fn.getAxisClipY = function (forHorizontal) {\n        return forHorizontal ? -20 : -this.margin.top;\n    };\n    c3_chart_internal_fn.getXAxisClipX = function () {\n        var $$ = this;\n        return $$.getAxisClipX(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getXAxisClipY = function () {\n        var $$ = this;\n        return $$.getAxisClipY(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipX = function () {\n        var $$ = this;\n        return $$.config.axis_y_inner ? -1 : $$.getAxisClipX($$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipY = function () {\n        var $$ = this;\n        return $$.getAxisClipY($$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getAxisClipWidth = function (forHorizontal) {\n        var $$ = this,\n            left = Math.max(30, $$.margin.left),\n            right = Math.max(30, $$.margin.right);\n        // width + axis line width + padding for left/right\n        return forHorizontal ? $$.width + 2 + left + right : $$.margin.left + 20;\n    };\n    c3_chart_internal_fn.getAxisClipHeight = function (forHorizontal) {\n        // less than 20 is not enough to show the axis label 'outer' without legend\n        return (forHorizontal ? this.margin.bottom : (this.margin.top + this.height)) + 20;\n    };\n    c3_chart_internal_fn.getXAxisClipWidth = function () {\n        var $$ = this;\n        return $$.getAxisClipWidth(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getXAxisClipHeight = function () {\n        var $$ = this;\n        return $$.getAxisClipHeight(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipWidth = function () {\n        var $$ = this;\n        return $$.getAxisClipWidth($$.config.axis_rotated) + ($$.config.axis_y_inner ? 20 : 0);\n    };\n    c3_chart_internal_fn.getYAxisClipHeight = function () {\n        var $$ = this;\n        return $$.getAxisClipHeight($$.config.axis_rotated);\n    };\n\n    c3_chart_internal_fn.initPie = function () {\n        var $$ = this, d3 = $$.d3, config = $$.config;\n        $$.pie = d3.layout.pie().value(function (d) {\n            return d.values.reduce(function (a, b) { return a + b.value; }, 0);\n        });\n        if (!config.data_order) {\n            $$.pie.sort(null);\n        }\n    };\n\n    c3_chart_internal_fn.updateRadius = function () {\n        var $$ = this, config = $$.config,\n            w = config.gauge_width || config.donut_width;\n        $$.radiusExpanded = Math.min($$.arcWidth, $$.arcHeight) / 2;\n        $$.radius = $$.radiusExpanded * 0.95;\n        $$.innerRadiusRatio = w ? ($$.radius - w) / $$.radius : 0.6;\n        $$.innerRadius = $$.hasType('donut') || $$.hasType('gauge') ? $$.radius * $$.innerRadiusRatio : 0;\n    };\n\n    c3_chart_internal_fn.updateArc = function () {\n        var $$ = this;\n        $$.svgArc = $$.getSvgArc();\n        $$.svgArcExpanded = $$.getSvgArcExpanded();\n        $$.svgArcExpandedSub = $$.getSvgArcExpanded(0.98);\n    };\n\n    c3_chart_internal_fn.updateAngle = function (d) {\n        var $$ = this, config = $$.config,\n            found = false, index = 0,\n            gMin, gMax, gTic, gValue;\n\n        if (!config) {\n            return null;\n        }\n\n        $$.pie($$.filterTargetsToShow($$.data.targets)).forEach(function (t) {\n            if (! found && t.data.id === d.data.id) {\n                found = true;\n                d = t;\n                d.index = index;\n            }\n            index++;\n        });\n        if (isNaN(d.startAngle)) {\n            d.startAngle = 0;\n        }\n        if (isNaN(d.endAngle)) {\n            d.endAngle = d.startAngle;\n        }\n        if ($$.isGaugeType(d.data)) {\n            gMin = config.gauge_min;\n            gMax = config.gauge_max;\n            gTic = (Math.PI * (config.gauge_fullCircle ? 2 : 1)) / (gMax - gMin);\n            gValue = d.value < gMin ? 0 : d.value < gMax ? d.value - gMin : (gMax - gMin);\n            d.startAngle = config.gauge_startingAngle;\n            d.endAngle = d.startAngle + gTic * gValue;\n        }\n        return found ? d : null;\n    };\n\n    c3_chart_internal_fn.getSvgArc = function () {\n        var $$ = this,\n            arc = $$.d3.svg.arc().outerRadius($$.radius).innerRadius($$.innerRadius),\n            newArc = function (d, withoutUpdate) {\n                var updated;\n                if (withoutUpdate) { return arc(d); } // for interpolate\n                updated = $$.updateAngle(d);\n                return updated ? arc(updated) : \"M 0 0\";\n            };\n        // TODO: extends all function\n        newArc.centroid = arc.centroid;\n        return newArc;\n    };\n\n    c3_chart_internal_fn.getSvgArcExpanded = function (rate) {\n        var $$ = this,\n            arc = $$.d3.svg.arc().outerRadius($$.radiusExpanded * (rate ? rate : 1)).innerRadius($$.innerRadius);\n        return function (d) {\n            var updated = $$.updateAngle(d);\n            return updated ? arc(updated) : \"M 0 0\";\n        };\n    };\n\n    c3_chart_internal_fn.getArc = function (d, withoutUpdate, force) {\n        return force || this.isArcType(d.data) ? this.svgArc(d, withoutUpdate) : \"M 0 0\";\n    };\n\n\n    c3_chart_internal_fn.transformForArcLabel = function (d) {\n        var $$ = this, config = $$.config,\n            updated = $$.updateAngle(d), c, x, y, h, ratio, translate = \"\";\n        if (updated && !$$.hasType('gauge')) {\n            c = this.svgArc.centroid(updated);\n            x = isNaN(c[0]) ? 0 : c[0];\n            y = isNaN(c[1]) ? 0 : c[1];\n            h = Math.sqrt(x * x + y * y);\n            if ($$.hasType('donut') && config.donut_label_ratio) {\n                ratio = isFunction(config.donut_label_ratio) ? config.donut_label_ratio(d, $$.radius, h) : config.donut_label_ratio;\n            } else if ($$.hasType('pie') && config.pie_label_ratio) {\n                ratio = isFunction(config.pie_label_ratio) ? config.pie_label_ratio(d, $$.radius, h) : config.pie_label_ratio;\n            } else {\n                ratio = $$.radius && h ? (36 / $$.radius > 0.375 ? 1.175 - 36 / $$.radius : 0.8) * $$.radius / h : 0;\n            }\n            translate = \"translate(\" + (x * ratio) +  ',' + (y * ratio) +  \")\";\n        }\n        return translate;\n    };\n\n    c3_chart_internal_fn.getArcRatio = function (d) {\n        var $$ = this,\n            config = $$.config,\n            whole = Math.PI * ($$.hasType('gauge') && !config.gauge_fullCircle ? 1 : 2);\n        return d ? (d.endAngle - d.startAngle) / whole : null;\n    };\n\n    c3_chart_internal_fn.convertToArcData = function (d) {\n        return this.addName({\n            id: d.data.id,\n            value: d.value,\n            ratio: this.getArcRatio(d),\n            index: d.index\n        });\n    };\n\n    c3_chart_internal_fn.textForArcLabel = function (d) {\n        var $$ = this,\n            updated, value, ratio, id, format;\n        if (! $$.shouldShowArcLabel()) { return \"\"; }\n        updated = $$.updateAngle(d);\n        value = updated ? updated.value : null;\n        ratio = $$.getArcRatio(updated);\n        id = d.data.id;\n        if (! $$.hasType('gauge') && ! $$.meetsArcLabelThreshold(ratio)) { return \"\"; }\n        format = $$.getArcLabelFormat();\n        return format ? format(value, ratio, id) : $$.defaultArcValueFormat(value, ratio);\n    };\n\n    c3_chart_internal_fn.expandArc = function (targetIds) {\n        var $$ = this, interval;\n\n        // MEMO: avoid to cancel transition\n        if ($$.transiting) {\n            interval = window.setInterval(function () {\n                if (!$$.transiting) {\n                    window.clearInterval(interval);\n                    if ($$.legend.selectAll('.c3-legend-item-focused').size() > 0) {\n                        $$.expandArc(targetIds);\n                    }\n                }\n            }, 10);\n            return;\n        }\n\n        targetIds = $$.mapToTargetIds(targetIds);\n\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).each(function (d) {\n            if (! $$.shouldExpand(d.data.id)) { return; }\n            $$.d3.select(this).selectAll('path')\n                .transition().duration($$.expandDuration(d.data.id))\n                .attr(\"d\", $$.svgArcExpanded)\n                .transition().duration($$.expandDuration(d.data.id) * 2)\n                .attr(\"d\", $$.svgArcExpandedSub)\n                .each(function (d) {\n                    if ($$.isDonutType(d.data)) {\n                        // callback here\n                    }\n                });\n        });\n    };\n\n    c3_chart_internal_fn.unexpandArc = function (targetIds) {\n        var $$ = this;\n\n        if ($$.transiting) { return; }\n\n        targetIds = $$.mapToTargetIds(targetIds);\n\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).selectAll('path')\n            .transition().duration(function(d) {\n                return $$.expandDuration(d.data.id);\n            })\n            .attr(\"d\", $$.svgArc);\n        $$.svg.selectAll('.' + CLASS.arc)\n            .style(\"opacity\", 1);\n    };\n\n    c3_chart_internal_fn.expandDuration = function (id) {\n        var $$ = this, config = $$.config;\n\n        if ($$.isDonutType(id)) {\n            return config.donut_expand_duration;\n        } else if ($$.isGaugeType(id)) {\n            return config.gauge_expand_duration;\n        } else if ($$.isPieType(id)) {\n            return config.pie_expand_duration;\n        } else {\n            return 50;\n        }\n\n    };\n\n    c3_chart_internal_fn.shouldExpand = function (id) {\n        var $$ = this, config = $$.config;\n        return ($$.isDonutType(id) && config.donut_expand) ||\n               ($$.isGaugeType(id) && config.gauge_expand) ||\n               ($$.isPieType(id) && config.pie_expand);\n    };\n\n    c3_chart_internal_fn.shouldShowArcLabel = function () {\n        var $$ = this, config = $$.config, shouldShow = true;\n        if ($$.hasType('donut')) {\n            shouldShow = config.donut_label_show;\n        } else if ($$.hasType('pie')) {\n            shouldShow = config.pie_label_show;\n        }\n        // when gauge, always true\n        return shouldShow;\n    };\n\n    c3_chart_internal_fn.meetsArcLabelThreshold = function (ratio) {\n        var $$ = this, config = $$.config,\n            threshold = $$.hasType('donut') ? config.donut_label_threshold : config.pie_label_threshold;\n        return ratio >= threshold;\n    };\n\n    c3_chart_internal_fn.getArcLabelFormat = function () {\n        var $$ = this, config = $$.config,\n            format = config.pie_label_format;\n        if ($$.hasType('gauge')) {\n            format = config.gauge_label_format;\n        } else if ($$.hasType('donut')) {\n            format = config.donut_label_format;\n        }\n        return format;\n    };\n\n    c3_chart_internal_fn.getArcTitle = function () {\n        var $$ = this;\n        return $$.hasType('donut') ? $$.config.donut_title : \"\";\n    };\n\n    c3_chart_internal_fn.updateTargetsForArc = function (targets) {\n        var $$ = this, main = $$.main,\n            mainPieUpdate, mainPieEnter,\n            classChartArc = $$.classChartArc.bind($$),\n            classArcs = $$.classArcs.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainPieUpdate = main.select('.' + CLASS.chartArcs).selectAll('.' + CLASS.chartArc)\n            .data($$.pie(targets))\n            .attr(\"class\", function (d) { return classChartArc(d) + classFocus(d.data); });\n        mainPieEnter = mainPieUpdate.enter().append(\"g\")\n            .attr(\"class\", classChartArc);\n        mainPieEnter.append('g')\n            .attr('class', classArcs);\n        mainPieEnter.append(\"text\")\n            .attr(\"dy\", $$.hasType('gauge') ? \"-.1em\" : \".35em\")\n            .style(\"opacity\", 0)\n            .style(\"text-anchor\", \"middle\")\n            .style(\"pointer-events\", \"none\");\n        // MEMO: can not keep same color..., but not bad to update color in redraw\n        //mainPieUpdate.exit().remove();\n    };\n\n    c3_chart_internal_fn.initArc = function () {\n        var $$ = this;\n        $$.arcs = $$.main.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartArcs)\n            .attr(\"transform\", $$.getTranslate('arc'));\n        $$.arcs.append('text')\n            .attr('class', CLASS.chartArcsTitle)\n            .style(\"text-anchor\", \"middle\")\n            .text($$.getArcTitle());\n    };\n\n    c3_chart_internal_fn.redrawArc = function (duration, durationForExit, withTransform) {\n        var $$ = this, d3 = $$.d3, config = $$.config, main = $$.main,\n            mainArc;\n        mainArc = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arc)\n            .data($$.arcData.bind($$));\n        mainArc.enter().append('path')\n            .attr(\"class\", $$.classArc.bind($$))\n            .style(\"fill\", function (d) { return $$.color(d.data); })\n            .style(\"cursor\", function (d) { return config.interaction_enabled && config.data_selection_isselectable(d) ? \"pointer\" : null; })\n            .style(\"opacity\", 0)\n            .each(function (d) {\n                if ($$.isGaugeType(d.data)) {\n                    d.startAngle = d.endAngle = config.gauge_startingAngle;\n                }\n                this._current = d;\n            });\n        mainArc\n            .attr(\"transform\", function (d) { return !$$.isGaugeType(d.data) && withTransform ? \"scale(0)\" : \"\"; })\n            .style(\"opacity\", function (d) { return d === this._current ? 0 : 1; })\n            .on('mouseover', config.interaction_enabled ? function (d) {\n                var updated, arcData;\n                if ($$.transiting) { // skip while transiting\n                    return;\n                }\n                updated = $$.updateAngle(d);\n                if (updated) {\n                    arcData = $$.convertToArcData(updated);\n                    // transitions\n                    $$.expandArc(updated.data.id);\n                    $$.api.focus(updated.data.id);\n                    $$.toggleFocusLegend(updated.data.id, true);\n                    $$.config.data_onmouseover(arcData, this);\n                }\n            } : null)\n            .on('mousemove', config.interaction_enabled ? function (d) {\n                var updated = $$.updateAngle(d), arcData, selectedData;\n                if (updated) {\n                    arcData = $$.convertToArcData(updated),\n                    selectedData = [arcData];\n                    $$.showTooltip(selectedData, this);\n                }\n            } : null)\n            .on('mouseout', config.interaction_enabled ? function (d) {\n                var updated, arcData;\n                if ($$.transiting) { // skip while transiting\n                    return;\n                }\n                updated = $$.updateAngle(d);\n                if (updated) {\n                    arcData = $$.convertToArcData(updated);\n                    // transitions\n                    $$.unexpandArc(updated.data.id);\n                    $$.api.revert();\n                    $$.revertLegend();\n                    $$.hideTooltip();\n                    $$.config.data_onmouseout(arcData, this);\n                }\n            } : null)\n            .on('click', config.interaction_enabled ? function (d, i) {\n                var updated = $$.updateAngle(d), arcData;\n                if (updated) {\n                    arcData = $$.convertToArcData(updated);\n                    if ($$.toggleShape) {\n                        $$.toggleShape(this, arcData, i);\n                    }\n                    $$.config.data_onclick.call($$.api, arcData, this);\n                }\n            } : null)\n            .each(function () { $$.transiting = true; })\n            .transition().duration(duration)\n            .attrTween(\"d\", function (d) {\n                var updated = $$.updateAngle(d), interpolate;\n                if (! updated) {\n                    return function () { return \"M 0 0\"; };\n                }\n                //                if (this._current === d) {\n                //                    this._current = {\n                //                        startAngle: Math.PI*2,\n                //                        endAngle: Math.PI*2,\n                //                    };\n                //                }\n                if (isNaN(this._current.startAngle)) {\n                    this._current.startAngle = 0;\n                }\n                if (isNaN(this._current.endAngle)) {\n                    this._current.endAngle = this._current.startAngle;\n                }\n                interpolate = d3.interpolate(this._current, updated);\n                this._current = interpolate(0);\n                return function (t) {\n                    var interpolated = interpolate(t);\n                    interpolated.data = d.data; // data.id will be updated by interporator\n                    return $$.getArc(interpolated, true);\n                };\n            })\n            .attr(\"transform\", withTransform ? \"scale(1)\" : \"\")\n            .style(\"fill\", function (d) {\n                return $$.levelColor ? $$.levelColor(d.data.values[0].value) : $$.color(d.data.id);\n            }) // Where gauge reading color would receive customization.\n            .style(\"opacity\", 1)\n            .call($$.endall, function () {\n                $$.transiting = false;\n            });\n        mainArc.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n        main.selectAll('.' + CLASS.chartArc).select('text')\n            .style(\"opacity\", 0)\n            .attr('class', function (d) { return $$.isGaugeType(d.data) ? CLASS.gaugeValue : ''; })\n            .text($$.textForArcLabel.bind($$))\n            .attr(\"transform\", $$.transformForArcLabel.bind($$))\n            .style('font-size', function (d) { return $$.isGaugeType(d.data) ? Math.round($$.radius / 5) + 'px' : ''; })\n          .transition().duration(duration)\n            .style(\"opacity\", function (d) { return $$.isTargetToShow(d.data.id) && $$.isArcType(d.data) ? 1 : 0; });\n        main.select('.' + CLASS.chartArcsTitle)\n            .style(\"opacity\", $$.hasType('donut') || $$.hasType('gauge') ? 1 : 0);\n\n        if ($$.hasType('gauge')) {\n            $$.arcs.select('.' + CLASS.chartArcsBackground)\n                .attr(\"d\", function () {\n                    var d = {\n                        data: [{value: config.gauge_max}],\n                        startAngle: config.gauge_startingAngle,\n                        endAngle: -1 * config.gauge_startingAngle\n                    };\n                    return $$.getArc(d, true, true);\n                });\n            $$.arcs.select('.' + CLASS.chartArcsGaugeUnit)\n                .attr(\"dy\", \".75em\")\n                .text(config.gauge_label_show ? config.gauge_units : '');\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMin)\n                .attr(\"dx\", -1 * ($$.innerRadius + (($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2))) + \"px\")\n                .attr(\"dy\", \"1.2em\")\n                .text(config.gauge_label_show ? config.gauge_min : '');\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMax)\n                .attr(\"dx\", $$.innerRadius + (($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2)) + \"px\")\n                .attr(\"dy\", \"1.2em\")\n                .text(config.gauge_label_show ? config.gauge_max : '');\n        }\n    };\n    c3_chart_internal_fn.initGauge = function () {\n        var arcs = this.arcs;\n        if (this.hasType('gauge')) {\n            arcs.append('path')\n                .attr(\"class\", CLASS.chartArcsBackground);\n            arcs.append(\"text\")\n                .attr(\"class\", CLASS.chartArcsGaugeUnit)\n                .style(\"text-anchor\", \"middle\")\n                .style(\"pointer-events\", \"none\");\n            arcs.append(\"text\")\n                .attr(\"class\", CLASS.chartArcsGaugeMin)\n                .style(\"text-anchor\", \"middle\")\n                .style(\"pointer-events\", \"none\");\n            arcs.append(\"text\")\n                .attr(\"class\", CLASS.chartArcsGaugeMax)\n                .style(\"text-anchor\", \"middle\")\n                .style(\"pointer-events\", \"none\");\n        }\n    };\n    c3_chart_internal_fn.getGaugeLabelHeight = function () {\n        return this.config.gauge_label_show ? 20 : 0;\n    };\n\n    c3_chart_internal_fn.initRegion = function () {\n        var $$ = this;\n        $$.region = $$.main.append('g')\n            .attr(\"clip-path\", $$.clipPath)\n            .attr(\"class\", CLASS.regions);\n    };\n    c3_chart_internal_fn.updateRegion = function (duration) {\n        var $$ = this, config = $$.config;\n\n        // hide if arc type\n        $$.region.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n        $$.mainRegion = $$.main.select('.' + CLASS.regions).selectAll('.' + CLASS.region)\n            .data(config.regions);\n        $$.mainRegion.enter().append('g')\n          .append('rect')\n            .style(\"fill-opacity\", 0);\n        $$.mainRegion\n            .attr('class', $$.classRegion.bind($$));\n        $$.mainRegion.exit().transition().duration(duration)\n            .style(\"opacity\", 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawRegion = function (withTransition) {\n        var $$ = this,\n            regions = $$.mainRegion.selectAll('rect').each(function () {\n                // data is binded to g and it's not transferred to rect (child node) automatically,\n                // then data of each rect has to be updated manually.\n                // TODO: there should be more efficient way to solve this?\n                var parentData = $$.d3.select(this.parentNode).datum();\n                $$.d3.select(this).datum(parentData);\n            }),\n            x = $$.regionX.bind($$),\n            y = $$.regionY.bind($$),\n            w = $$.regionWidth.bind($$),\n            h = $$.regionHeight.bind($$);\n        return [\n            (withTransition ? regions.transition() : regions)\n                .attr(\"x\", x)\n                .attr(\"y\", y)\n                .attr(\"width\", w)\n                .attr(\"height\", h)\n                .style(\"fill-opacity\", function (d) { return isValue(d.opacity) ? d.opacity : 0.1; })\n        ];\n    };\n    c3_chart_internal_fn.regionX = function (d) {\n        var $$ = this, config = $$.config,\n            xPos, yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            xPos = config.axis_rotated ? ('start' in d ? yScale(d.start) : 0) : 0;\n        } else {\n            xPos = config.axis_rotated ? 0 : ('start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0);\n        }\n        return xPos;\n    };\n    c3_chart_internal_fn.regionY = function (d) {\n        var $$ = this, config = $$.config,\n            yPos, yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            yPos = config.axis_rotated ? 0 : ('end' in d ? yScale(d.end) : 0);\n        } else {\n            yPos = config.axis_rotated ? ('start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0) : 0;\n        }\n        return yPos;\n    };\n    c3_chart_internal_fn.regionWidth = function (d) {\n        var $$ = this, config = $$.config,\n            start = $$.regionX(d), end, yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            end = config.axis_rotated ? ('end' in d ? yScale(d.end) : $$.width) : $$.width;\n        } else {\n            end = config.axis_rotated ? $$.width : ('end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.width);\n        }\n        return end < start ? 0 : end - start;\n    };\n    c3_chart_internal_fn.regionHeight = function (d) {\n        var $$ = this, config = $$.config,\n            start = this.regionY(d), end, yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            end = config.axis_rotated ? $$.height : ('start' in d ? yScale(d.start) : $$.height);\n        } else {\n            end = config.axis_rotated ? ('end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.height) : $$.height;\n        }\n        return end < start ? 0 : end - start;\n    };\n    c3_chart_internal_fn.isRegionOnX = function (d) {\n        return !d.axis || d.axis === 'x';\n    };\n\n    c3_chart_internal_fn.drag = function (mouse) {\n        var $$ = this, config = $$.config, main = $$.main, d3 = $$.d3;\n        var sx, sy, mx, my, minX, maxX, minY, maxY;\n\n        if ($$.hasArcType()) { return; }\n        if (! config.data_selection_enabled) { return; } // do nothing if not selectable\n        if (config.zoom_enabled && ! $$.zoom.altDomain) { return; } // skip if zoomable because of conflict drag dehavior\n        if (!config.data_selection_multiple) { return; } // skip when single selection because drag is used for multiple selection\n\n        sx = $$.dragStart[0];\n        sy = $$.dragStart[1];\n        mx = mouse[0];\n        my = mouse[1];\n        minX = Math.min(sx, mx);\n        maxX = Math.max(sx, mx);\n        minY = (config.data_selection_grouped) ? $$.margin.top : Math.min(sy, my);\n        maxY = (config.data_selection_grouped) ? $$.height : Math.max(sy, my);\n\n        main.select('.' + CLASS.dragarea)\n            .attr('x', minX)\n            .attr('y', minY)\n            .attr('width', maxX - minX)\n            .attr('height', maxY - minY);\n        // TODO: binary search when multiple xs\n        main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape)\n            .filter(function (d) { return config.data_selection_isselectable(d); })\n            .each(function (d, i) {\n                var shape = d3.select(this),\n                    isSelected = shape.classed(CLASS.SELECTED),\n                    isIncluded = shape.classed(CLASS.INCLUDED),\n                    _x, _y, _w, _h, toggle, isWithin = false, box;\n                if (shape.classed(CLASS.circle)) {\n                    _x = shape.attr(\"cx\") * 1;\n                    _y = shape.attr(\"cy\") * 1;\n                    toggle = $$.togglePoint;\n                    isWithin = minX < _x && _x < maxX && minY < _y && _y < maxY;\n                }\n                else if (shape.classed(CLASS.bar)) {\n                    box = getPathBox(this);\n                    _x = box.x;\n                    _y = box.y;\n                    _w = box.width;\n                    _h = box.height;\n                    toggle = $$.togglePath;\n                    isWithin = !(maxX < _x || _x + _w < minX) && !(maxY < _y || _y + _h < minY);\n                } else {\n                    // line/area selection not supported yet\n                    return;\n                }\n                if (isWithin ^ isIncluded) {\n                    shape.classed(CLASS.INCLUDED, !isIncluded);\n                    // TODO: included/unincluded callback here\n                    shape.classed(CLASS.SELECTED, !isSelected);\n                    toggle.call($$, !isSelected, shape, d, i);\n                }\n            });\n    };\n\n    c3_chart_internal_fn.dragstart = function (mouse) {\n        var $$ = this, config = $$.config;\n        if ($$.hasArcType()) { return; }\n        if (! config.data_selection_enabled) { return; } // do nothing if not selectable\n        $$.dragStart = mouse;\n        $$.main.select('.' + CLASS.chart).append('rect')\n            .attr('class', CLASS.dragarea)\n            .style('opacity', 0.1);\n        $$.dragging = true;\n    };\n\n    c3_chart_internal_fn.dragend = function () {\n        var $$ = this, config = $$.config;\n        if ($$.hasArcType()) { return; }\n        if (! config.data_selection_enabled) { return; } // do nothing if not selectable\n        $$.main.select('.' + CLASS.dragarea)\n            .transition().duration(100)\n            .style('opacity', 0)\n            .remove();\n        $$.main.selectAll('.' + CLASS.shape)\n            .classed(CLASS.INCLUDED, false);\n        $$.dragging = false;\n    };\n\n    c3_chart_internal_fn.selectPoint = function (target, d, i) {\n        var $$ = this, config = $$.config,\n            cx = (config.axis_rotated ? $$.circleY : $$.circleX).bind($$),\n            cy = (config.axis_rotated ? $$.circleX : $$.circleY).bind($$),\n            r = $$.pointSelectR.bind($$);\n        config.data_onselected.call($$.api, d, target.node());\n        // add selected-circle on low layer g\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i)\n            .data([d])\n            .enter().append('circle')\n            .attr(\"class\", function () { return $$.generateClass(CLASS.selectedCircle, i); })\n            .attr(\"cx\", cx)\n            .attr(\"cy\", cy)\n            .attr(\"stroke\", function () { return $$.color(d); })\n            .attr(\"r\", function (d) { return $$.pointSelectR(d) * 1.4; })\n            .transition().duration(100)\n            .attr(\"r\", r);\n    };\n    c3_chart_internal_fn.unselectPoint = function (target, d, i) {\n        var $$ = this;\n        $$.config.data_onunselected.call($$.api, d, target.node());\n        // remove selected-circle from low layer g\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i)\n            .transition().duration(100).attr('r', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.togglePoint = function (selected, target, d, i) {\n        selected ? this.selectPoint(target, d, i) : this.unselectPoint(target, d, i);\n    };\n    c3_chart_internal_fn.selectPath = function (target, d) {\n        var $$ = this;\n        $$.config.data_onselected.call($$, d, target.node());\n        if ($$.config.interaction_brighten) {\n            target.transition().duration(100)\n                .style(\"fill\", function () { return $$.d3.rgb($$.color(d)).brighter(0.75); });\n        }\n    };\n    c3_chart_internal_fn.unselectPath = function (target, d) {\n        var $$ = this;\n        $$.config.data_onunselected.call($$, d, target.node());\n        if ($$.config.interaction_brighten) {\n            target.transition().duration(100)\n                .style(\"fill\", function () { return $$.color(d); });\n        }\n    };\n    c3_chart_internal_fn.togglePath = function (selected, target, d, i) {\n        selected ? this.selectPath(target, d, i) : this.unselectPath(target, d, i);\n    };\n    c3_chart_internal_fn.getToggle = function (that, d) {\n        var $$ = this, toggle;\n        if (that.nodeName === 'circle') {\n            if ($$.isStepType(d)) {\n                // circle is hidden in step chart, so treat as within the click area\n                toggle = function () {}; // TODO: how to select step chart?\n            } else {\n                toggle = $$.togglePoint;\n            }\n        }\n        else if (that.nodeName === 'path') {\n            toggle = $$.togglePath;\n        }\n        return toggle;\n    };\n    c3_chart_internal_fn.toggleShape = function (that, d, i) {\n        var $$ = this, d3 = $$.d3, config = $$.config,\n            shape = d3.select(that), isSelected = shape.classed(CLASS.SELECTED),\n            toggle = $$.getToggle(that, d).bind($$);\n\n        if (config.data_selection_enabled && config.data_selection_isselectable(d)) {\n            if (!config.data_selection_multiple) {\n                $$.main.selectAll('.' + CLASS.shapes + (config.data_selection_grouped ? $$.getTargetSelectorSuffix(d.id) : \"\")).selectAll('.' + CLASS.shape).each(function (d, i) {\n                    var shape = d3.select(this);\n                    if (shape.classed(CLASS.SELECTED)) { toggle(false, shape.classed(CLASS.SELECTED, false), d, i); }\n                });\n            }\n            shape.classed(CLASS.SELECTED, !isSelected);\n            toggle(!isSelected, shape, d, i);\n        }\n    };\n\n    c3_chart_internal_fn.initBrush = function () {\n        var $$ = this, d3 = $$.d3;\n        $$.brush = d3.svg.brush().on(\"brush\", function () { $$.redrawForBrush(); });\n        $$.brush.update = function () {\n            if ($$.context) { $$.context.select('.' + CLASS.brush).call(this); }\n            return this;\n        };\n        $$.brush.scale = function (scale) {\n            return $$.config.axis_rotated ? this.y(scale) : this.x(scale);\n        };\n    };\n    c3_chart_internal_fn.initSubchart = function () {\n        var $$ = this, config = $$.config,\n            context = $$.context = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('context')),\n            visibility = config.subchart_show ? 'visible' : 'hidden';\n\n        context.style('visibility', visibility);\n\n        // Define g for chart area\n        context.append('g')\n            .attr(\"clip-path\", $$.clipPathForSubchart)\n            .attr('class', CLASS.chart);\n\n        // Define g for bar chart area\n        context.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartBars);\n\n        // Define g for line chart area\n        context.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartLines);\n\n        // Add extent rect for Brush\n        context.append(\"g\")\n            .attr(\"clip-path\", $$.clipPath)\n            .attr(\"class\", CLASS.brush)\n            .call($$.brush);\n\n        // ATTENTION: This must be called AFTER chart added\n        // Add Axis\n        $$.axes.subx = context.append(\"g\")\n            .attr(\"class\", CLASS.axisX)\n            .attr(\"transform\", $$.getTranslate('subx'))\n            .attr(\"clip-path\", config.axis_rotated ? \"\" : $$.clipPathForXAxis)\n            .style(\"visibility\", config.subchart_axis_x_show ? visibility : 'hidden');\n    };\n    c3_chart_internal_fn.updateTargetsForSubchart = function (targets) {\n        var $$ = this, context = $$.context, config = $$.config,\n            contextLineEnter, contextLineUpdate, contextBarEnter, contextBarUpdate,\n            classChartBar = $$.classChartBar.bind($$),\n            classBars = $$.classBars.bind($$),\n            classChartLine = $$.classChartLine.bind($$),\n            classLines = $$.classLines.bind($$),\n            classAreas = $$.classAreas.bind($$);\n\n        if (config.subchart_show) {\n            //-- Bar --//\n            contextBarUpdate = context.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar)\n                .data(targets)\n                .attr('class', classChartBar);\n            contextBarEnter = contextBarUpdate.enter().append('g')\n                .style('opacity', 0)\n                .attr('class', classChartBar);\n            // Bars for each data\n            contextBarEnter.append('g')\n                .attr(\"class\", classBars);\n\n            //-- Line --//\n            contextLineUpdate = context.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine)\n                .data(targets)\n                .attr('class', classChartLine);\n            contextLineEnter = contextLineUpdate.enter().append('g')\n                .style('opacity', 0)\n                .attr('class', classChartLine);\n            // Lines for each data\n            contextLineEnter.append(\"g\")\n                .attr(\"class\", classLines);\n            // Area\n            contextLineEnter.append(\"g\")\n                .attr(\"class\", classAreas);\n\n            //-- Brush --//\n            context.selectAll('.' + CLASS.brush + ' rect')\n                .attr(config.axis_rotated ? \"width\" : \"height\", config.axis_rotated ? $$.width2 : $$.height2);\n        }\n    };\n    c3_chart_internal_fn.updateBarForSubchart = function (durationForExit) {\n        var $$ = this;\n        $$.contextBar = $$.context.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar)\n            .data($$.barData.bind($$));\n        $$.contextBar.enter().append('path')\n            .attr(\"class\", $$.classBar.bind($$))\n            .style(\"stroke\", 'none')\n            .style(\"fill\", $$.color);\n        $$.contextBar\n            .style(\"opacity\", $$.initialOpacity.bind($$));\n        $$.contextBar.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawBarForSubchart = function (drawBarOnSub, withTransition, duration) {\n        (withTransition ? this.contextBar.transition(Math.random().toString()).duration(duration) : this.contextBar)\n            .attr('d', drawBarOnSub)\n            .style('opacity', 1);\n    };\n    c3_chart_internal_fn.updateLineForSubchart = function (durationForExit) {\n        var $$ = this;\n        $$.contextLine = $$.context.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line)\n            .data($$.lineData.bind($$));\n        $$.contextLine.enter().append('path')\n            .attr('class', $$.classLine.bind($$))\n            .style('stroke', $$.color);\n        $$.contextLine\n            .style(\"opacity\", $$.initialOpacity.bind($$));\n        $$.contextLine.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawLineForSubchart = function (drawLineOnSub, withTransition, duration) {\n        (withTransition ? this.contextLine.transition(Math.random().toString()).duration(duration) : this.contextLine)\n            .attr(\"d\", drawLineOnSub)\n            .style('opacity', 1);\n    };\n    c3_chart_internal_fn.updateAreaForSubchart = function (durationForExit) {\n        var $$ = this, d3 = $$.d3;\n        $$.contextArea = $$.context.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area)\n            .data($$.lineData.bind($$));\n        $$.contextArea.enter().append('path')\n            .attr(\"class\", $$.classArea.bind($$))\n            .style(\"fill\", $$.color)\n            .style(\"opacity\", function () { $$.orgAreaOpacity = +d3.select(this).style('opacity'); return 0; });\n        $$.contextArea\n            .style(\"opacity\", 0);\n        $$.contextArea.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawAreaForSubchart = function (drawAreaOnSub, withTransition, duration) {\n        (withTransition ? this.contextArea.transition(Math.random().toString()).duration(duration) : this.contextArea)\n            .attr(\"d\", drawAreaOnSub)\n            .style(\"fill\", this.color)\n            .style(\"opacity\", this.orgAreaOpacity);\n    };\n    c3_chart_internal_fn.redrawSubchart = function (withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices) {\n        var $$ = this, d3 = $$.d3, config = $$.config,\n            drawAreaOnSub, drawBarOnSub, drawLineOnSub;\n\n        $$.context.style('visibility', config.subchart_show ? 'visible' : 'hidden');\n\n        // subchart\n        if (config.subchart_show) {\n            // reflect main chart to extent on subchart if zoomed\n            if (d3.event && d3.event.type === 'zoom') {\n                $$.brush.extent($$.x.orgDomain()).update();\n            }\n            // update subchart elements if needed\n            if (withSubchart) {\n\n                // extent rect\n                if (!$$.brush.empty()) {\n                    $$.brush.extent($$.x.orgDomain()).update();\n                }\n                // setup drawer - MEMO: this must be called after axis updated\n                drawAreaOnSub = $$.generateDrawArea(areaIndices, true);\n                drawBarOnSub = $$.generateDrawBar(barIndices, true);\n                drawLineOnSub = $$.generateDrawLine(lineIndices, true);\n\n                $$.updateBarForSubchart(duration);\n                $$.updateLineForSubchart(duration);\n                $$.updateAreaForSubchart(duration);\n\n                $$.redrawBarForSubchart(drawBarOnSub, duration, duration);\n                $$.redrawLineForSubchart(drawLineOnSub, duration, duration);\n                $$.redrawAreaForSubchart(drawAreaOnSub, duration, duration);\n            }\n        }\n    };\n    c3_chart_internal_fn.redrawForBrush = function () {\n        var $$ = this, x = $$.x;\n        $$.redraw({\n            withTransition: false,\n            withY: $$.config.zoom_rescale,\n            withSubchart: false,\n            withUpdateXDomain: true,\n            withDimension: false\n        });\n        $$.config.subchart_onbrush.call($$.api, x.orgDomain());\n    };\n    c3_chart_internal_fn.transformContext = function (withTransition, transitions) {\n        var $$ = this, subXAxis;\n        if (transitions && transitions.axisSubX) {\n            subXAxis = transitions.axisSubX;\n        } else {\n            subXAxis = $$.context.select('.' + CLASS.axisX);\n            if (withTransition) { subXAxis = subXAxis.transition(); }\n        }\n        $$.context.attr(\"transform\", $$.getTranslate('context'));\n        subXAxis.attr(\"transform\", $$.getTranslate('subx'));\n    };\n    c3_chart_internal_fn.getDefaultExtent = function () {\n        var $$ = this, config = $$.config,\n            extent = isFunction(config.axis_x_extent) ? config.axis_x_extent($$.getXDomain($$.data.targets)) : config.axis_x_extent;\n        if ($$.isTimeSeries()) {\n            extent = [$$.parseDate(extent[0]), $$.parseDate(extent[1])];\n        }\n        return extent;\n    };\n\n    c3_chart_internal_fn.initZoom = function () {\n        var $$ = this, d3 = $$.d3, config = $$.config, startEvent;\n\n        $$.zoom = d3.behavior.zoom()\n            .on(\"zoomstart\", function () {\n                startEvent = d3.event.sourceEvent;\n                $$.zoom.altDomain = d3.event.sourceEvent.altKey ? $$.x.orgDomain() : null;\n                config.zoom_onzoomstart.call($$.api, d3.event.sourceEvent);\n            })\n            .on(\"zoom\", function () {\n                $$.redrawForZoom.call($$);\n            })\n            .on('zoomend', function () {\n                var event = d3.event.sourceEvent;\n                // if click, do nothing. otherwise, click interaction will be canceled.\n                if (event && startEvent.clientX === event.clientX && startEvent.clientY === event.clientY) {\n                    return;\n                }\n                $$.redrawEventRect();\n                $$.updateZoom();\n                config.zoom_onzoomend.call($$.api, $$.x.orgDomain());\n            });\n        $$.zoom.scale = function (scale) {\n            return config.axis_rotated ? this.y(scale) : this.x(scale);\n        };\n        $$.zoom.orgScaleExtent = function () {\n            var extent = config.zoom_extent ? config.zoom_extent : [1, 10];\n            return [extent[0], Math.max($$.getMaxDataCount() / extent[1], extent[1])];\n        };\n        $$.zoom.updateScaleExtent = function () {\n            var ratio = diffDomain($$.x.orgDomain()) / diffDomain($$.getZoomDomain()),\n                extent = this.orgScaleExtent();\n            this.scaleExtent([extent[0] * ratio, extent[1] * ratio]);\n            return this;\n        };\n    };\n    c3_chart_internal_fn.getZoomDomain = function () {\n        var $$ = this, config = $$.config, d3 = $$.d3,\n            min = d3.min([$$.orgXDomain[0], config.zoom_x_min]),\n            max = d3.max([$$.orgXDomain[1], config.zoom_x_max]);\n        return [min, max];\n    };\n    c3_chart_internal_fn.updateZoom = function () {\n        var $$ = this, z = $$.config.zoom_enabled ? $$.zoom : function () {};\n        $$.main.select('.' + CLASS.zoomRect).call(z).on(\"dblclick.zoom\", null);\n        $$.main.selectAll('.' + CLASS.eventRect).call(z).on(\"dblclick.zoom\", null);\n    };\n    c3_chart_internal_fn.redrawForZoom = function () {\n        var $$ = this, d3 = $$.d3, config = $$.config, zoom = $$.zoom, x = $$.x;\n        if (!config.zoom_enabled) {\n            return;\n        }\n        if ($$.filterTargetsToShow($$.data.targets).length === 0) {\n            return;\n        }\n        if (d3.event.sourceEvent.type === 'mousemove' && zoom.altDomain) {\n            x.domain(zoom.altDomain);\n            zoom.scale(x).updateScaleExtent();\n            return;\n        }\n        if ($$.isCategorized() && x.orgDomain()[0] === $$.orgXDomain[0]) {\n            x.domain([$$.orgXDomain[0] - 1e-10, x.orgDomain()[1]]);\n        }\n        $$.redraw({\n            withTransition: false,\n            withY: config.zoom_rescale,\n            withSubchart: false,\n            withEventRect: false,\n            withDimension: false\n        });\n        if (d3.event.sourceEvent.type === 'mousemove') {\n            $$.cancelClick = true;\n        }\n        config.zoom_onzoom.call($$.api, x.orgDomain());\n    };\n\n    c3_chart_internal_fn.generateColor = function () {\n        var $$ = this, config = $$.config, d3 = $$.d3,\n            colors = config.data_colors,\n            pattern = notEmpty(config.color_pattern) ? config.color_pattern : d3.scale.category10().range(),\n            callback = config.data_color,\n            ids = [];\n\n        return function (d) {\n            var id = d.id || (d.data && d.data.id) || d, color;\n\n            // if callback function is provided\n            if (colors[id] instanceof Function) {\n                color = colors[id](d);\n            }\n            // if specified, choose that color\n            else if (colors[id]) {\n                color = colors[id];\n            }\n            // if not specified, choose from pattern\n            else {\n                if (ids.indexOf(id) < 0) { ids.push(id); }\n                color = pattern[ids.indexOf(id) % pattern.length];\n                colors[id] = color;\n            }\n            return callback instanceof Function ? callback(color, d) : color;\n        };\n    };\n    c3_chart_internal_fn.generateLevelColor = function () {\n        var $$ = this, config = $$.config,\n            colors = config.color_pattern,\n            threshold = config.color_threshold,\n            asValue = threshold.unit === 'value',\n            values = threshold.values && threshold.values.length ? threshold.values : [],\n            max = threshold.max || 100;\n        return notEmpty(config.color_threshold) ? function (value) {\n            var i, v, color = colors[colors.length - 1];\n            for (i = 0; i < values.length; i++) {\n                v = asValue ? value : (value * 100 / max);\n                if (v < values[i]) {\n                    color = colors[i];\n                    break;\n                }\n            }\n            return color;\n        } : null;\n    };\n\n    c3_chart_internal_fn.getYFormat = function (forArc) {\n        var $$ = this,\n            formatForY = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.yFormat,\n            formatForY2 = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.y2Format;\n        return function (v, ratio, id) {\n            var format = $$.axis.getId(id) === 'y2' ? formatForY2 : formatForY;\n            return format.call($$, v, ratio);\n        };\n    };\n    c3_chart_internal_fn.yFormat = function (v) {\n        var $$ = this, config = $$.config,\n            format = config.axis_y_tick_format ? config.axis_y_tick_format : $$.defaultValueFormat;\n        return format(v);\n    };\n    c3_chart_internal_fn.y2Format = function (v) {\n        var $$ = this, config = $$.config,\n            format = config.axis_y2_tick_format ? config.axis_y2_tick_format : $$.defaultValueFormat;\n        return format(v);\n    };\n    c3_chart_internal_fn.defaultValueFormat = function (v) {\n        return isValue(v) ? +v : \"\";\n    };\n    c3_chart_internal_fn.defaultArcValueFormat = function (v, ratio) {\n        return (ratio * 100).toFixed(1) + '%';\n    };\n    c3_chart_internal_fn.dataLabelFormat = function (targetId) {\n        var $$ = this, data_labels = $$.config.data_labels,\n            format, defaultFormat = function (v) { return isValue(v) ? +v : \"\"; };\n        // find format according to axis id\n        if (typeof data_labels.format === 'function') {\n            format = data_labels.format;\n        } else if (typeof data_labels.format === 'object') {\n            if (data_labels.format[targetId]) {\n                format = data_labels.format[targetId] === true ? defaultFormat : data_labels.format[targetId];\n            } else {\n                format = function () { return ''; };\n            }\n        } else {\n            format = defaultFormat;\n        }\n        return format;\n    };\n\n    c3_chart_internal_fn.hasCaches = function (ids) {\n        for (var i = 0; i < ids.length; i++) {\n            if (! (ids[i] in this.cache)) { return false; }\n        }\n        return true;\n    };\n    c3_chart_internal_fn.addCache = function (id, target) {\n        this.cache[id] = this.cloneTarget(target);\n    };\n    c3_chart_internal_fn.getCaches = function (ids) {\n        var targets = [], i;\n        for (i = 0; i < ids.length; i++) {\n            if (ids[i] in this.cache) { targets.push(this.cloneTarget(this.cache[ids[i]])); }\n        }\n        return targets;\n    };\n\n    var CLASS = c3_chart_internal_fn.CLASS = {\n        target: 'c3-target',\n        chart: 'c3-chart',\n        chartLine: 'c3-chart-line',\n        chartLines: 'c3-chart-lines',\n        chartBar: 'c3-chart-bar',\n        chartBars: 'c3-chart-bars',\n        chartText: 'c3-chart-text',\n        chartTexts: 'c3-chart-texts',\n        chartArc: 'c3-chart-arc',\n        chartArcs: 'c3-chart-arcs',\n        chartArcsTitle: 'c3-chart-arcs-title',\n        chartArcsBackground: 'c3-chart-arcs-background',\n        chartArcsGaugeUnit: 'c3-chart-arcs-gauge-unit',\n        chartArcsGaugeMax: 'c3-chart-arcs-gauge-max',\n        chartArcsGaugeMin: 'c3-chart-arcs-gauge-min',\n        selectedCircle: 'c3-selected-circle',\n        selectedCircles: 'c3-selected-circles',\n        eventRect: 'c3-event-rect',\n        eventRects: 'c3-event-rects',\n        eventRectsSingle: 'c3-event-rects-single',\n        eventRectsMultiple: 'c3-event-rects-multiple',\n        zoomRect: 'c3-zoom-rect',\n        brush: 'c3-brush',\n        focused: 'c3-focused',\n        defocused: 'c3-defocused',\n        region: 'c3-region',\n        regions: 'c3-regions',\n        title: 'c3-title',\n        tooltipContainer: 'c3-tooltip-container',\n        tooltip: 'c3-tooltip',\n        tooltipName: 'c3-tooltip-name',\n        shape: 'c3-shape',\n        shapes: 'c3-shapes',\n        line: 'c3-line',\n        lines: 'c3-lines',\n        bar: 'c3-bar',\n        bars: 'c3-bars',\n        circle: 'c3-circle',\n        circles: 'c3-circles',\n        arc: 'c3-arc',\n        arcs: 'c3-arcs',\n        area: 'c3-area',\n        areas: 'c3-areas',\n        empty: 'c3-empty',\n        text: 'c3-text',\n        texts: 'c3-texts',\n        gaugeValue: 'c3-gauge-value',\n        grid: 'c3-grid',\n        gridLines: 'c3-grid-lines',\n        xgrid: 'c3-xgrid',\n        xgrids: 'c3-xgrids',\n        xgridLine: 'c3-xgrid-line',\n        xgridLines: 'c3-xgrid-lines',\n        xgridFocus: 'c3-xgrid-focus',\n        ygrid: 'c3-ygrid',\n        ygrids: 'c3-ygrids',\n        ygridLine: 'c3-ygrid-line',\n        ygridLines: 'c3-ygrid-lines',\n        axis: 'c3-axis',\n        axisX: 'c3-axis-x',\n        axisXLabel: 'c3-axis-x-label',\n        axisY: 'c3-axis-y',\n        axisYLabel: 'c3-axis-y-label',\n        axisY2: 'c3-axis-y2',\n        axisY2Label: 'c3-axis-y2-label',\n        legendBackground: 'c3-legend-background',\n        legendItem: 'c3-legend-item',\n        legendItemEvent: 'c3-legend-item-event',\n        legendItemTile: 'c3-legend-item-tile',\n        legendItemHidden: 'c3-legend-item-hidden',\n        legendItemFocused: 'c3-legend-item-focused',\n        dragarea: 'c3-dragarea',\n        EXPANDED: '_expanded_',\n        SELECTED: '_selected_',\n        INCLUDED: '_included_'\n    };\n    c3_chart_internal_fn.generateClass = function (prefix, targetId) {\n        return \" \" + prefix + \" \" + prefix + this.getTargetSelectorSuffix(targetId);\n    };\n    c3_chart_internal_fn.classText = function (d) {\n        return this.generateClass(CLASS.text, d.index);\n    };\n    c3_chart_internal_fn.classTexts = function (d) {\n        return this.generateClass(CLASS.texts, d.id);\n    };\n    c3_chart_internal_fn.classShape = function (d) {\n        return this.generateClass(CLASS.shape, d.index);\n    };\n    c3_chart_internal_fn.classShapes = function (d) {\n        return this.generateClass(CLASS.shapes, d.id);\n    };\n    c3_chart_internal_fn.classLine = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.line, d.id);\n    };\n    c3_chart_internal_fn.classLines = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.lines, d.id);\n    };\n    c3_chart_internal_fn.classCircle = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.circle, d.index);\n    };\n    c3_chart_internal_fn.classCircles = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.circles, d.id);\n    };\n    c3_chart_internal_fn.classBar = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.bar, d.index);\n    };\n    c3_chart_internal_fn.classBars = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.bars, d.id);\n    };\n    c3_chart_internal_fn.classArc = function (d) {\n        return this.classShape(d.data) + this.generateClass(CLASS.arc, d.data.id);\n    };\n    c3_chart_internal_fn.classArcs = function (d) {\n        return this.classShapes(d.data) + this.generateClass(CLASS.arcs, d.data.id);\n    };\n    c3_chart_internal_fn.classArea = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.area, d.id);\n    };\n    c3_chart_internal_fn.classAreas = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.areas, d.id);\n    };\n    c3_chart_internal_fn.classRegion = function (d, i) {\n        return this.generateClass(CLASS.region, i) + ' ' + ('class' in d ? d['class'] : '');\n    };\n    c3_chart_internal_fn.classEvent = function (d) {\n        return this.generateClass(CLASS.eventRect, d.index);\n    };\n    c3_chart_internal_fn.classTarget = function (id) {\n        var $$ = this;\n        var additionalClassSuffix = $$.config.data_classes[id], additionalClass = '';\n        if (additionalClassSuffix) {\n            additionalClass = ' ' + CLASS.target + '-' + additionalClassSuffix;\n        }\n        return $$.generateClass(CLASS.target, id) + additionalClass;\n    };\n    c3_chart_internal_fn.classFocus = function (d) {\n        return this.classFocused(d) + this.classDefocused(d);\n    };\n    c3_chart_internal_fn.classFocused = function (d) {\n        return ' ' + (this.focusedTargetIds.indexOf(d.id) >= 0 ? CLASS.focused : '');\n    };\n    c3_chart_internal_fn.classDefocused = function (d) {\n        return ' ' + (this.defocusedTargetIds.indexOf(d.id) >= 0 ? CLASS.defocused : '');\n    };\n    c3_chart_internal_fn.classChartText = function (d) {\n        return CLASS.chartText + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartLine = function (d) {\n        return CLASS.chartLine + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartBar = function (d) {\n        return CLASS.chartBar + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartArc = function (d) {\n        return CLASS.chartArc + this.classTarget(d.data.id);\n    };\n    c3_chart_internal_fn.getTargetSelectorSuffix = function (targetId) {\n        return targetId || targetId === 0 ? ('-' + targetId).replace(/[\\s?!@#$%^&*()_=+,.<>'\":;\\[\\]\\/|~`{}\\\\]/g, '-') : '';\n    };\n    c3_chart_internal_fn.selectorTarget = function (id, prefix) {\n        return (prefix || '') + '.' + CLASS.target + this.getTargetSelectorSuffix(id);\n    };\n    c3_chart_internal_fn.selectorTargets = function (ids, prefix) {\n        var $$ = this;\n        ids = ids || [];\n        return ids.length ? ids.map(function (id) { return $$.selectorTarget(id, prefix); }) : null;\n    };\n    c3_chart_internal_fn.selectorLegend = function (id) {\n        return '.' + CLASS.legendItem + this.getTargetSelectorSuffix(id);\n    };\n    c3_chart_internal_fn.selectorLegends = function (ids) {\n        var $$ = this;\n        return ids && ids.length ? ids.map(function (id) { return $$.selectorLegend(id); }) : null;\n    };\n\n    var isValue = c3_chart_internal_fn.isValue = function (v) {\n        return v || v === 0;\n    },\n        isFunction = c3_chart_internal_fn.isFunction = function (o) {\n            return typeof o === 'function';\n        },\n        isString = c3_chart_internal_fn.isString = function (o) {\n            return typeof o === 'string';\n        },\n        isUndefined = c3_chart_internal_fn.isUndefined = function (v) {\n            return typeof v === 'undefined';\n        },\n        isDefined = c3_chart_internal_fn.isDefined = function (v) {\n            return typeof v !== 'undefined';\n        },\n        ceil10 = c3_chart_internal_fn.ceil10 = function (v) {\n            return Math.ceil(v / 10) * 10;\n        },\n        asHalfPixel = c3_chart_internal_fn.asHalfPixel = function (n) {\n            return Math.ceil(n) + 0.5;\n        },\n        diffDomain = c3_chart_internal_fn.diffDomain = function (d) {\n            return d[1] - d[0];\n        },\n        isEmpty = c3_chart_internal_fn.isEmpty = function (o) {\n            return typeof o === 'undefined' || o === null || (isString(o) && o.length === 0) || (typeof o === 'object' && Object.keys(o).length === 0);\n        },\n        notEmpty = c3_chart_internal_fn.notEmpty = function (o) {\n            return !c3_chart_internal_fn.isEmpty(o);\n        },\n        getOption = c3_chart_internal_fn.getOption = function (options, key, defaultValue) {\n            return isDefined(options[key]) ? options[key] : defaultValue;\n        },\n        hasValue = c3_chart_internal_fn.hasValue = function (dict, value) {\n            var found = false;\n            Object.keys(dict).forEach(function (key) {\n                if (dict[key] === value) { found = true; }\n            });\n            return found;\n        },\n        sanitise = c3_chart_internal_fn.sanitise = function (str) {\n            return typeof str === 'string' ? str.replace(/</g, '&lt;').replace(/>/g, '&gt;') : str;\n        },\n        getPathBox = c3_chart_internal_fn.getPathBox = function (path) {\n            var box = path.getBoundingClientRect(),\n                items = [path.pathSegList.getItem(0), path.pathSegList.getItem(1)],\n                minX = items[0].x, minY = Math.min(items[0].y, items[1].y);\n            return {x: minX, y: minY, width: box.width, height: box.height};\n        };\n\n    c3_chart_fn.focus = function (targetIds) {\n        var $$ = this.internal, candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))),\n\n        this.revert();\n        this.defocus();\n        candidates.classed(CLASS.focused, true).classed(CLASS.defocused, false);\n        if ($$.hasArcType()) {\n            $$.expandArc(targetIds);\n        }\n        $$.toggleFocusLegend(targetIds, true);\n\n        $$.focusedTargetIds = targetIds;\n        $$.defocusedTargetIds = $$.defocusedTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n\n    c3_chart_fn.defocus = function (targetIds) {\n        var $$ = this.internal, candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))),\n\n        candidates.classed(CLASS.focused, false).classed(CLASS.defocused, true);\n        if ($$.hasArcType()) {\n            $$.unexpandArc(targetIds);\n        }\n        $$.toggleFocusLegend(targetIds, false);\n\n        $$.focusedTargetIds = $$.focusedTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n        $$.defocusedTargetIds = targetIds;\n    };\n\n    c3_chart_fn.revert = function (targetIds) {\n        var $$ = this.internal, candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds)); // should be for all targets\n\n        candidates.classed(CLASS.focused, false).classed(CLASS.defocused, false);\n        if ($$.hasArcType()) {\n            $$.unexpandArc(targetIds);\n        }\n        if ($$.config.legend_show) {\n            $$.showLegend(targetIds.filter($$.isLegendToShow.bind($$)));\n            $$.legend.selectAll($$.selectorLegends(targetIds))\n                .filter(function () {\n                    return $$.d3.select(this).classed(CLASS.legendItemFocused);\n                })\n                .classed(CLASS.legendItemFocused, false);\n        }\n\n        $$.focusedTargetIds = [];\n        $$.defocusedTargetIds = [];\n    };\n\n    c3_chart_fn.show = function (targetIds, options) {\n        var $$ = this.internal, targets;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        options = options || {};\n\n        $$.removeHiddenTargetIds(targetIds);\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n        targets.transition()\n            .style('opacity', 1, 'important')\n            .call($$.endall, function () {\n                targets.style('opacity', null).style('opacity', 1);\n            });\n\n        if (options.withLegend) {\n            $$.showLegend(targetIds);\n        }\n\n        $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n    };\n\n    c3_chart_fn.hide = function (targetIds, options) {\n        var $$ = this.internal, targets;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        options = options || {};\n\n        $$.addHiddenTargetIds(targetIds);\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n        targets.transition()\n            .style('opacity', 0, 'important')\n            .call($$.endall, function () {\n                targets.style('opacity', null).style('opacity', 0);\n            });\n\n        if (options.withLegend) {\n            $$.hideLegend(targetIds);\n        }\n\n        $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n    };\n\n    c3_chart_fn.toggle = function (targetIds, options) {\n        var that = this, $$ = this.internal;\n        $$.mapToTargetIds(targetIds).forEach(function (targetId) {\n            $$.isTargetToShow(targetId) ? that.hide(targetId, options) : that.show(targetId, options);\n        });\n    };\n\n    c3_chart_fn.zoom = function (domain) {\n        var $$ = this.internal;\n        if (domain) {\n            if ($$.isTimeSeries()) {\n                domain = domain.map(function (x) { return $$.parseDate(x); });\n            }\n            $$.brush.extent(domain);\n            $$.redraw({withUpdateXDomain: true, withY: $$.config.zoom_rescale});\n            $$.config.zoom_onzoom.call(this, $$.x.orgDomain());\n        }\n        return $$.brush.extent();\n    };\n    c3_chart_fn.zoom.enable = function (enabled) {\n        var $$ = this.internal;\n        $$.config.zoom_enabled = enabled;\n        $$.updateAndRedraw();\n    };\n    c3_chart_fn.unzoom = function () {\n        var $$ = this.internal;\n        $$.brush.clear().update();\n        $$.redraw({withUpdateXDomain: true});\n    };\n\n    c3_chart_fn.zoom.max = function (max) {\n        var $$ = this.internal, config = $$.config, d3 = $$.d3;\n        if (max === 0 || max) {\n            config.zoom_x_max = d3.max([$$.orgXDomain[1], max]);\n        }\n        else {\n            return config.zoom_x_max;\n        }\n    };\n\n    c3_chart_fn.zoom.min = function (min) {\n        var $$ = this.internal, config = $$.config, d3 = $$.d3;\n        if (min === 0 || min) {\n            config.zoom_x_min = d3.min([$$.orgXDomain[0], min]);\n        }\n        else {\n            return config.zoom_x_min;\n        }\n    };\n\n    c3_chart_fn.zoom.range = function (range) {\n        if (arguments.length) {\n            if (isDefined(range.max)) { this.domain.max(range.max); }\n            if (isDefined(range.min)) { this.domain.min(range.min); }\n        } else {\n            return {\n                max: this.domain.max(),\n                min: this.domain.min()\n            };\n        }\n    };\n\n    c3_chart_fn.load = function (args) {\n        var $$ = this.internal, config = $$.config;\n        // update xs if specified\n        if (args.xs) {\n            $$.addXs(args.xs);\n        }\n        // update names if exists\n        if ('names' in args) {\n            c3_chart_fn.data.names.bind(this)(args.names);\n        }\n        // update classes if exists\n        if ('classes' in args) {\n            Object.keys(args.classes).forEach(function (id) {\n                config.data_classes[id] = args.classes[id];\n            });\n        }\n        // update categories if exists\n        if ('categories' in args && $$.isCategorized()) {\n            config.axis_x_categories = args.categories;\n        }\n        // update axes if exists\n        if ('axes' in args) {\n            Object.keys(args.axes).forEach(function (id) {\n                config.data_axes[id] = args.axes[id];\n            });\n        }\n        // update colors if exists\n        if ('colors' in args) {\n            Object.keys(args.colors).forEach(function (id) {\n                config.data_colors[id] = args.colors[id];\n            });\n        }\n        // use cache if exists\n        if ('cacheIds' in args && $$.hasCaches(args.cacheIds)) {\n            $$.load($$.getCaches(args.cacheIds), args.done);\n            return;\n        }\n        // unload if needed\n        if ('unload' in args) {\n            // TODO: do not unload if target will load (included in url/rows/columns)\n            $$.unload($$.mapToTargetIds((typeof args.unload === 'boolean' && args.unload) ? null : args.unload), function () {\n                $$.loadFromArgs(args);\n            });\n        } else {\n            $$.loadFromArgs(args);\n        }\n    };\n\n    c3_chart_fn.unload = function (args) {\n        var $$ = this.internal;\n        args = args || {};\n        if (args instanceof Array) {\n            args = {ids: args};\n        } else if (typeof args === 'string') {\n            args = {ids: [args]};\n        }\n        $$.unload($$.mapToTargetIds(args.ids), function () {\n            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n            if (args.done) { args.done(); }\n        });\n    };\n\n    c3_chart_fn.flow = function (args) {\n        var $$ = this.internal,\n            targets, data, notfoundIds = [], orgDataCount = $$.getMaxDataCount(),\n            dataCount, domain, baseTarget, baseValue, length = 0, tail = 0, diff, to;\n\n        if (args.json) {\n            data = $$.convertJsonToData(args.json, args.keys);\n        }\n        else if (args.rows) {\n            data = $$.convertRowsToData(args.rows);\n        }\n        else if (args.columns) {\n            data = $$.convertColumnsToData(args.columns);\n        }\n        else {\n            return;\n        }\n        targets = $$.convertDataToTargets(data, true);\n\n        // Update/Add data\n        $$.data.targets.forEach(function (t) {\n            var found = false, i, j;\n            for (i = 0; i < targets.length; i++) {\n                if (t.id === targets[i].id) {\n                    found = true;\n\n                    if (t.values[t.values.length - 1]) {\n                        tail = t.values[t.values.length - 1].index + 1;\n                    }\n                    length = targets[i].values.length;\n\n                    for (j = 0; j < length; j++) {\n                        targets[i].values[j].index = tail + j;\n                        if (!$$.isTimeSeries()) {\n                            targets[i].values[j].x = tail + j;\n                        }\n                    }\n                    t.values = t.values.concat(targets[i].values);\n\n                    targets.splice(i, 1);\n                    break;\n                }\n            }\n            if (!found) { notfoundIds.push(t.id); }\n        });\n\n        // Append null for not found targets\n        $$.data.targets.forEach(function (t) {\n            var i, j;\n            for (i = 0; i < notfoundIds.length; i++) {\n                if (t.id === notfoundIds[i]) {\n                    tail = t.values[t.values.length - 1].index + 1;\n                    for (j = 0; j < length; j++) {\n                        t.values.push({\n                            id: t.id,\n                            index: tail + j,\n                            x: $$.isTimeSeries() ? $$.getOtherTargetX(tail + j) : tail + j,\n                            value: null\n                        });\n                    }\n                }\n            }\n        });\n\n        // Generate null values for new target\n        if ($$.data.targets.length) {\n            targets.forEach(function (t) {\n                var i, missing = [];\n                for (i = $$.data.targets[0].values[0].index; i < tail; i++) {\n                    missing.push({\n                        id: t.id,\n                        index: i,\n                        x: $$.isTimeSeries() ? $$.getOtherTargetX(i) : i,\n                        value: null\n                    });\n                }\n                t.values.forEach(function (v) {\n                    v.index += tail;\n                    if (!$$.isTimeSeries()) {\n                        v.x += tail;\n                    }\n                });\n                t.values = missing.concat(t.values);\n            });\n        }\n        $$.data.targets = $$.data.targets.concat(targets); // add remained\n\n        // check data count because behavior needs to change when it's only one\n        dataCount = $$.getMaxDataCount();\n        baseTarget = $$.data.targets[0];\n        baseValue = baseTarget.values[0];\n\n        // Update length to flow if needed\n        if (isDefined(args.to)) {\n            length = 0;\n            to = $$.isTimeSeries() ? $$.parseDate(args.to) : args.to;\n            baseTarget.values.forEach(function (v) {\n                if (v.x < to) { length++; }\n            });\n        } else if (isDefined(args.length)) {\n            length = args.length;\n        }\n\n        // If only one data, update the domain to flow from left edge of the chart\n        if (!orgDataCount) {\n            if ($$.isTimeSeries()) {\n                if (baseTarget.values.length > 1) {\n                    diff = baseTarget.values[baseTarget.values.length - 1].x - baseValue.x;\n                } else {\n                    diff = baseValue.x - $$.getXDomain($$.data.targets)[0];\n                }\n            } else {\n                diff = 1;\n            }\n            domain = [baseValue.x - diff, baseValue.x];\n            $$.updateXDomain(null, true, true, false, domain);\n        } else if (orgDataCount === 1) {\n            if ($$.isTimeSeries()) {\n                diff = (baseTarget.values[baseTarget.values.length - 1].x - baseValue.x) / 2;\n                domain = [new Date(+baseValue.x - diff), new Date(+baseValue.x + diff)];\n                $$.updateXDomain(null, true, true, false, domain);\n            }\n        }\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Redraw with new targets\n        $$.redraw({\n            flow: {\n                index: baseValue.index,\n                length: length,\n                duration: isValue(args.duration) ? args.duration : $$.config.transition_duration,\n                done: args.done,\n                orgDataCount: orgDataCount,\n            },\n            withLegend: true,\n            withTransition: orgDataCount > 1,\n            withTrimXDomain: false,\n            withUpdateXAxis: true,\n        });\n    };\n\n    c3_chart_internal_fn.generateFlow = function (args) {\n        var $$ = this, config = $$.config, d3 = $$.d3;\n\n        return function () {\n            var targets = args.targets,\n                flow = args.flow,\n                drawBar = args.drawBar,\n                drawLine = args.drawLine,\n                drawArea = args.drawArea,\n                cx = args.cx,\n                cy = args.cy,\n                xv = args.xv,\n                xForText = args.xForText,\n                yForText = args.yForText,\n                duration = args.duration;\n\n            var translateX, scaleX = 1, transform,\n                flowIndex = flow.index,\n                flowLength = flow.length,\n                flowStart = $$.getValueOnIndex($$.data.targets[0].values, flowIndex),\n                flowEnd = $$.getValueOnIndex($$.data.targets[0].values, flowIndex + flowLength),\n                orgDomain = $$.x.domain(), domain,\n                durationForFlow = flow.duration || duration,\n                done = flow.done || function () {},\n                wait = $$.generateWait();\n\n            var xgrid = $$.xgrid || d3.selectAll([]),\n                xgridLines = $$.xgridLines || d3.selectAll([]),\n                mainRegion = $$.mainRegion || d3.selectAll([]),\n                mainText = $$.mainText || d3.selectAll([]),\n                mainBar = $$.mainBar || d3.selectAll([]),\n                mainLine = $$.mainLine || d3.selectAll([]),\n                mainArea = $$.mainArea || d3.selectAll([]),\n                mainCircle = $$.mainCircle || d3.selectAll([]);\n\n            // set flag\n            $$.flowing = true;\n\n            // remove head data after rendered\n            $$.data.targets.forEach(function (d) {\n                d.values.splice(0, flowLength);\n            });\n\n            // update x domain to generate axis elements for flow\n            domain = $$.updateXDomain(targets, true, true);\n            // update elements related to x scale\n            if ($$.updateXGrid) { $$.updateXGrid(true); }\n\n            // generate transform to flow\n            if (!flow.orgDataCount) { // if empty\n                if ($$.data.targets[0].values.length !== 1) {\n                    translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n                } else {\n                    if ($$.isTimeSeries()) {\n                        flowStart = $$.getValueOnIndex($$.data.targets[0].values, 0);\n                        flowEnd = $$.getValueOnIndex($$.data.targets[0].values, $$.data.targets[0].values.length - 1);\n                        translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n                    } else {\n                        translateX = diffDomain(domain) / 2;\n                    }\n                }\n            } else if (flow.orgDataCount === 1 || (flowStart && flowStart.x) === (flowEnd && flowEnd.x)) {\n                translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n            } else {\n                if ($$.isTimeSeries()) {\n                    translateX = ($$.x(orgDomain[0]) - $$.x(domain[0]));\n                } else {\n                    translateX = ($$.x(flowStart.x) - $$.x(flowEnd.x));\n                }\n            }\n            scaleX = (diffDomain(orgDomain) / diffDomain(domain));\n            transform = 'translate(' + translateX + ',0) scale(' + scaleX + ',1)';\n\n            $$.hideXGridFocus();\n\n            d3.transition().ease('linear').duration(durationForFlow).each(function () {\n                wait.add($$.axes.x.transition().call($$.xAxis));\n                wait.add(mainBar.transition().attr('transform', transform));\n                wait.add(mainLine.transition().attr('transform', transform));\n                wait.add(mainArea.transition().attr('transform', transform));\n                wait.add(mainCircle.transition().attr('transform', transform));\n                wait.add(mainText.transition().attr('transform', transform));\n                wait.add(mainRegion.filter($$.isRegionOnX).transition().attr('transform', transform));\n                wait.add(xgrid.transition().attr('transform', transform));\n                wait.add(xgridLines.transition().attr('transform', transform));\n            })\n            .call(wait, function () {\n                var i, shapes = [], texts = [], eventRects = [];\n\n                // remove flowed elements\n                if (flowLength) {\n                    for (i = 0; i < flowLength; i++) {\n                        shapes.push('.' + CLASS.shape + '-' + (flowIndex + i));\n                        texts.push('.' + CLASS.text + '-' + (flowIndex + i));\n                        eventRects.push('.' + CLASS.eventRect + '-' + (flowIndex + i));\n                    }\n                    $$.svg.selectAll('.' + CLASS.shapes).selectAll(shapes).remove();\n                    $$.svg.selectAll('.' + CLASS.texts).selectAll(texts).remove();\n                    $$.svg.selectAll('.' + CLASS.eventRects).selectAll(eventRects).remove();\n                    $$.svg.select('.' + CLASS.xgrid).remove();\n                }\n\n                // draw again for removing flowed elements and reverting attr\n                xgrid\n                    .attr('transform', null)\n                    .attr($$.xgridAttr);\n                xgridLines\n                    .attr('transform', null);\n                xgridLines.select('line')\n                    .attr(\"x1\", config.axis_rotated ? 0 : xv)\n                    .attr(\"x2\", config.axis_rotated ? $$.width : xv);\n                xgridLines.select('text')\n                    .attr(\"x\", config.axis_rotated ? $$.width : 0)\n                    .attr(\"y\", xv);\n                mainBar\n                    .attr('transform', null)\n                    .attr(\"d\", drawBar);\n                mainLine\n                    .attr('transform', null)\n                    .attr(\"d\", drawLine);\n                mainArea\n                    .attr('transform', null)\n                    .attr(\"d\", drawArea);\n                mainCircle\n                    .attr('transform', null)\n                    .attr(\"cx\", cx)\n                    .attr(\"cy\", cy);\n                mainText\n                    .attr('transform', null)\n                    .attr('x', xForText)\n                    .attr('y', yForText)\n                    .style('fill-opacity', $$.opacityForText.bind($$));\n                mainRegion\n                    .attr('transform', null);\n                mainRegion.select('rect').filter($$.isRegionOnX)\n                    .attr(\"x\", $$.regionX.bind($$))\n                    .attr(\"width\", $$.regionWidth.bind($$));\n\n                if (config.interaction_enabled) {\n                    $$.redrawEventRect();\n                }\n\n                // callback for end of flow\n                done();\n\n                $$.flowing = false;\n            });\n        };\n    };\n\n    c3_chart_fn.selected = function (targetId) {\n        var $$ = this.internal, d3 = $$.d3;\n        return d3.merge(\n            $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(targetId)).selectAll('.' + CLASS.shape)\n                .filter(function () { return d3.select(this).classed(CLASS.SELECTED); })\n                .map(function (d) { return d.map(function (d) { var data = d.__data__; return data.data ? data.data : data; }); })\n        );\n    };\n    c3_chart_fn.select = function (ids, indices, resetOther) {\n        var $$ = this.internal, d3 = $$.d3, config = $$.config;\n        if (! config.data_selection_enabled) { return; }\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n            var shape = d3.select(this), id = d.data ? d.data.id : d.id,\n                toggle = $$.getToggle(this, d).bind($$),\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n                isSelected = shape.classed(CLASS.SELECTED);\n            // line/area selection not supported yet\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n                return;\n            }\n            if (isTargetId && isTargetIndex) {\n                if (config.data_selection_isselectable(d) && !isSelected) {\n                    toggle(true, shape.classed(CLASS.SELECTED, true), d, i);\n                }\n            } else if (isDefined(resetOther) && resetOther) {\n                if (isSelected) {\n                    toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                }\n            }\n        });\n    };\n    c3_chart_fn.unselect = function (ids, indices) {\n        var $$ = this.internal, d3 = $$.d3, config = $$.config;\n        if (! config.data_selection_enabled) { return; }\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n            var shape = d3.select(this), id = d.data ? d.data.id : d.id,\n                toggle = $$.getToggle(this, d).bind($$),\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n                isSelected = shape.classed(CLASS.SELECTED);\n            // line/area selection not supported yet\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n                return;\n            }\n            if (isTargetId && isTargetIndex) {\n                if (config.data_selection_isselectable(d)) {\n                    if (isSelected) {\n                        toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                    }\n                }\n            }\n        });\n    };\n\n    c3_chart_fn.transform = function (type, targetIds) {\n        var $$ = this.internal,\n            options = ['pie', 'donut'].indexOf(type) >= 0 ? {withTransform: true} : null;\n        $$.transformTo(targetIds, type, options);\n    };\n\n    c3_chart_internal_fn.transformTo = function (targetIds, type, optionsForRedraw) {\n        var $$ = this,\n            withTransitionForAxis = !$$.hasArcType(),\n            options = optionsForRedraw || {withTransitionForAxis: withTransitionForAxis};\n        options.withTransitionForTransform = false;\n        $$.transiting = false;\n        $$.setTargetType(targetIds, type);\n        $$.updateTargets($$.data.targets); // this is needed when transforming to arc\n        $$.updateAndRedraw(options);\n    };\n\n    c3_chart_fn.groups = function (groups) {\n        var $$ = this.internal, config = $$.config;\n        if (isUndefined(groups)) { return config.data_groups; }\n        config.data_groups = groups;\n        $$.redraw();\n        return config.data_groups;\n    };\n\n    c3_chart_fn.xgrids = function (grids) {\n        var $$ = this.internal, config = $$.config;\n        if (! grids) { return config.grid_x_lines; }\n        config.grid_x_lines = grids;\n        $$.redrawWithoutRescale();\n        return config.grid_x_lines;\n    };\n    c3_chart_fn.xgrids.add = function (grids) {\n        var $$ = this.internal;\n        return this.xgrids($$.config.grid_x_lines.concat(grids ? grids : []));\n    };\n    c3_chart_fn.xgrids.remove = function (params) { // TODO: multiple\n        var $$ = this.internal;\n        $$.removeGridLines(params, true);\n    };\n\n    c3_chart_fn.ygrids = function (grids) {\n        var $$ = this.internal, config = $$.config;\n        if (! grids) { return config.grid_y_lines; }\n        config.grid_y_lines = grids;\n        $$.redrawWithoutRescale();\n        return config.grid_y_lines;\n    };\n    c3_chart_fn.ygrids.add = function (grids) {\n        var $$ = this.internal;\n        return this.ygrids($$.config.grid_y_lines.concat(grids ? grids : []));\n    };\n    c3_chart_fn.ygrids.remove = function (params) { // TODO: multiple\n        var $$ = this.internal;\n        $$.removeGridLines(params, false);\n    };\n\n    c3_chart_fn.regions = function (regions) {\n        var $$ = this.internal, config = $$.config;\n        if (!regions) { return config.regions; }\n        config.regions = regions;\n        $$.redrawWithoutRescale();\n        return config.regions;\n    };\n    c3_chart_fn.regions.add = function (regions) {\n        var $$ = this.internal, config = $$.config;\n        if (!regions) { return config.regions; }\n        config.regions = config.regions.concat(regions);\n        $$.redrawWithoutRescale();\n        return config.regions;\n    };\n    c3_chart_fn.regions.remove = function (options) {\n        var $$ = this.internal, config = $$.config,\n            duration, classes, regions;\n\n        options = options || {};\n        duration = $$.getOption(options, \"duration\", config.transition_duration);\n        classes = $$.getOption(options, \"classes\", [CLASS.region]);\n\n        regions = $$.main.select('.' + CLASS.regions).selectAll(classes.map(function (c) { return '.' + c; }));\n        (duration ? regions.transition().duration(duration) : regions)\n            .style('opacity', 0)\n            .remove();\n\n        config.regions = config.regions.filter(function (region) {\n            var found = false;\n            if (!region['class']) {\n                return true;\n            }\n            region['class'].split(' ').forEach(function (c) {\n                if (classes.indexOf(c) >= 0) { found = true; }\n            });\n            return !found;\n        });\n\n        return config.regions;\n    };\n\n    c3_chart_fn.data = function (targetIds) {\n        var targets = this.internal.data.targets;\n        return typeof targetIds === 'undefined' ? targets : targets.filter(function (t) {\n            return [].concat(targetIds).indexOf(t.id) >= 0;\n        });\n    };\n    c3_chart_fn.data.shown = function (targetIds) {\n        return this.internal.filterTargetsToShow(this.data(targetIds));\n    };\n    c3_chart_fn.data.values = function (targetId) {\n        var targets, values = null;\n        if (targetId) {\n            targets = this.data(targetId);\n            values = targets[0] ? targets[0].values.map(function (d) { return d.value; }) : null;\n        }\n        return values;\n    };\n    c3_chart_fn.data.names = function (names) {\n        this.internal.clearLegendItemTextBoxCache();\n        return this.internal.updateDataAttributes('names', names);\n    };\n    c3_chart_fn.data.colors = function (colors) {\n        return this.internal.updateDataAttributes('colors', colors);\n    };\n    c3_chart_fn.data.axes = function (axes) {\n        return this.internal.updateDataAttributes('axes', axes);\n    };\n\n    c3_chart_fn.category = function (i, category) {\n        var $$ = this.internal, config = $$.config;\n        if (arguments.length > 1) {\n            config.axis_x_categories[i] = category;\n            $$.redraw();\n        }\n        return config.axis_x_categories[i];\n    };\n    c3_chart_fn.categories = function (categories) {\n        var $$ = this.internal, config = $$.config;\n        if (!arguments.length) { return config.axis_x_categories; }\n        config.axis_x_categories = categories;\n        $$.redraw();\n        return config.axis_x_categories;\n    };\n\n    // TODO: fix\n    c3_chart_fn.color = function (id) {\n        var $$ = this.internal;\n        return $$.color(id); // more patterns\n    };\n\n    c3_chart_fn.x = function (x) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            $$.updateTargetX($$.data.targets, x);\n            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n        }\n        return $$.data.xs;\n    };\n    c3_chart_fn.xs = function (xs) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            $$.updateTargetXs($$.data.targets, xs);\n            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n        }\n        return $$.data.xs;\n    };\n\n    c3_chart_fn.axis = function () {};\n    c3_chart_fn.axis.labels = function (labels) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            Object.keys(labels).forEach(function (axisId) {\n                $$.axis.setLabelText(axisId, labels[axisId]);\n            });\n            $$.axis.updateLabels();\n        }\n        // TODO: return some values?\n    };\n    c3_chart_fn.axis.max = function (max) {\n        var $$ = this.internal, config = $$.config;\n        if (arguments.length) {\n            if (typeof max === 'object') {\n                if (isValue(max.x)) { config.axis_x_max = max.x; }\n                if (isValue(max.y)) { config.axis_y_max = max.y; }\n                if (isValue(max.y2)) { config.axis_y2_max = max.y2; }\n            } else {\n                config.axis_y_max = config.axis_y2_max = max;\n            }\n            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n        } else {\n            return {\n                x: config.axis_x_max,\n                y: config.axis_y_max,\n                y2: config.axis_y2_max\n            };\n        }\n    };\n    c3_chart_fn.axis.min = function (min) {\n        var $$ = this.internal, config = $$.config;\n        if (arguments.length) {\n            if (typeof min === 'object') {\n                if (isValue(min.x)) { config.axis_x_min = min.x; }\n                if (isValue(min.y)) { config.axis_y_min = min.y; }\n                if (isValue(min.y2)) { config.axis_y2_min = min.y2; }\n            } else {\n                config.axis_y_min = config.axis_y2_min = min;\n            }\n            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n        } else {\n            return {\n                x: config.axis_x_min,\n                y: config.axis_y_min,\n                y2: config.axis_y2_min\n            };\n        }\n    };\n    c3_chart_fn.axis.range = function (range) {\n        if (arguments.length) {\n            if (isDefined(range.max)) { this.axis.max(range.max); }\n            if (isDefined(range.min)) { this.axis.min(range.min); }\n        } else {\n            return {\n                max: this.axis.max(),\n                min: this.axis.min()\n            };\n        }\n    };\n\n    c3_chart_fn.legend = function () {};\n    c3_chart_fn.legend.show = function (targetIds) {\n        var $$ = this.internal;\n        $$.showLegend($$.mapToTargetIds(targetIds));\n        $$.updateAndRedraw({withLegend: true});\n    };\n    c3_chart_fn.legend.hide = function (targetIds) {\n        var $$ = this.internal;\n        $$.hideLegend($$.mapToTargetIds(targetIds));\n        $$.updateAndRedraw({withLegend: true});\n    };\n\n    c3_chart_fn.resize = function (size) {\n        var $$ = this.internal, config = $$.config;\n        config.size_width = size ? size.width : null;\n        config.size_height = size ? size.height : null;\n        this.flush();\n    };\n\n    c3_chart_fn.flush = function () {\n        var $$ = this.internal;\n        $$.updateAndRedraw({withLegend: true, withTransition: false, withTransitionForTransform: false});\n    };\n\n    c3_chart_fn.destroy = function () {\n        var $$ = this.internal;\n\n        window.clearInterval($$.intervalForObserveInserted);\n\n        if ($$.resizeTimeout !== undefined) {\n            window.clearTimeout($$.resizeTimeout);\n        }\n\n        if (window.detachEvent) {\n            window.detachEvent('onresize', $$.resizeFunction);\n        } else if (window.removeEventListener) {\n            window.removeEventListener('resize', $$.resizeFunction);\n        } else {\n            var wrapper = window.onresize;\n            // check if no one else removed our wrapper and remove our resizeFunction from it\n            if (wrapper && wrapper.add && wrapper.remove) {\n                wrapper.remove($$.resizeFunction);\n            }\n        }\n\n        $$.selectChart.classed('c3', false).html(\"\");\n\n        // MEMO: this is needed because the reference of some elements will not be released, then memory leak will happen.\n        Object.keys($$).forEach(function (key) {\n            $$[key] = null;\n        });\n\n        return null;\n    };\n\n    c3_chart_fn.tooltip = function () {};\n    c3_chart_fn.tooltip.show = function (args) {\n        var $$ = this.internal, index, mouse;\n\n        // determine mouse position on the chart\n        if (args.mouse) {\n            mouse = args.mouse;\n        }\n\n        // determine focus data\n        if (args.data) {\n            if ($$.isMultipleX()) {\n                // if multiple xs, target point will be determined by mouse\n                mouse = [$$.x(args.data.x), $$.getYScale(args.data.id)(args.data.value)];\n                index = null;\n            } else {\n                // TODO: when tooltip_grouped = false\n                index = isValue(args.data.index) ? args.data.index : $$.getIndexByX(args.data.x);\n            }\n        }\n        else if (typeof args.x !== 'undefined') {\n            index = $$.getIndexByX(args.x);\n        }\n        else if (typeof args.index !== 'undefined') {\n            index = args.index;\n        }\n\n        // emulate mouse events to show\n        $$.dispatchEvent('mouseover', index, mouse);\n        $$.dispatchEvent('mousemove', index, mouse);\n\n        $$.config.tooltip_onshow.call($$, args.data);\n    };\n    c3_chart_fn.tooltip.hide = function () {\n        // TODO: get target data by checking the state of focus\n        this.internal.dispatchEvent('mouseout', 0);\n\n        this.internal.config.tooltip_onhide.call(this);\n    };\n\n    // Features:\n    // 1. category axis\n    // 2. ceil values of translate/x/y to int for half pixel antialiasing\n    // 3. multiline tick text\n    var tickTextCharSize;\n    function c3_axis(d3, params) {\n        var scale = d3.scale.linear(), orient = \"bottom\", innerTickSize = 6, outerTickSize, tickPadding = 3, tickValues = null, tickFormat, tickArguments;\n\n        var tickOffset = 0, tickCulling = true, tickCentered;\n\n        params = params || {};\n        outerTickSize = params.withOuterTick ? 6 : 0;\n\n        function axisX(selection, x) {\n            selection.attr(\"transform\", function (d) {\n                return \"translate(\" + Math.ceil(x(d) + tickOffset) + \", 0)\";\n            });\n        }\n        function axisY(selection, y) {\n            selection.attr(\"transform\", function (d) {\n                return \"translate(0,\" + Math.ceil(y(d)) + \")\";\n            });\n        }\n        function scaleExtent(domain) {\n            var start = domain[0], stop = domain[domain.length - 1];\n            return start < stop ? [ start, stop ] : [ stop, start ];\n        }\n        function generateTicks(scale) {\n            var i, domain, ticks = [];\n            if (scale.ticks) {\n                return scale.ticks.apply(scale, tickArguments);\n            }\n            domain = scale.domain();\n            for (i = Math.ceil(domain[0]); i < domain[1]; i++) {\n                ticks.push(i);\n            }\n            if (ticks.length > 0 && ticks[0] > 0) {\n                ticks.unshift(ticks[0] - (ticks[1] - ticks[0]));\n            }\n            return ticks;\n        }\n        function copyScale() {\n            var newScale = scale.copy(), domain;\n            if (params.isCategory) {\n                domain = scale.domain();\n                newScale.domain([domain[0], domain[1] - 1]);\n            }\n            return newScale;\n        }\n        function textFormatted(v) {\n            var formatted = tickFormat ? tickFormat(v) : v;\n            return typeof formatted !== 'undefined' ? formatted : '';\n        }\n        function getSizeFor1Char(tick) {\n            if (tickTextCharSize) {\n                return tickTextCharSize;\n            }\n            var size = {\n                h: 11.5,\n                w: 5.5\n            };\n            tick.select('text').text(textFormatted).each(function (d) {\n                var box = this.getBoundingClientRect(),\n                    text = textFormatted(d),\n                    h = box.height,\n                    w = text ? (box.width / text.length) : undefined;\n                if (h && w) {\n                    size.h = h;\n                    size.w = w;\n                }\n            }).text('');\n            tickTextCharSize = size;\n            return size;\n        }\n        function transitionise(selection) {\n            return params.withoutTransition ? selection : d3.transition(selection);\n        }\n        function axis(g) {\n            g.each(function () {\n                var g = axis.g = d3.select(this);\n\n                var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = copyScale();\n\n                var ticks = tickValues ? tickValues : generateTicks(scale1),\n                    tick = g.selectAll(\".tick\").data(ticks, scale1),\n                    tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", 1e-6),\n                    // MEMO: No exit transition. The reason is this transition affects max tick width calculation because old tick will be included in the ticks.\n                    tickExit = tick.exit().remove(),\n                    tickUpdate = transitionise(tick).style(\"opacity\", 1),\n                    tickTransform, tickX, tickY;\n\n                var range = scale.rangeExtent ? scale.rangeExtent() : scaleExtent(scale.range()),\n                    path = g.selectAll(\".domain\").data([ 0 ]),\n                    pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), transitionise(path));\n                tickEnter.append(\"line\");\n                tickEnter.append(\"text\");\n\n                var lineEnter = tickEnter.select(\"line\"),\n                    lineUpdate = tickUpdate.select(\"line\"),\n                    textEnter = tickEnter.select(\"text\"),\n                    textUpdate = tickUpdate.select(\"text\");\n\n                if (params.isCategory) {\n                    tickOffset = Math.ceil((scale1(1) - scale1(0)) / 2);\n                    tickX = tickCentered ? 0 : tickOffset;\n                    tickY = tickCentered ? tickOffset : 0;\n                } else {\n                    tickOffset = tickX = 0;\n                }\n\n                var text, tspan, sizeFor1Char = getSizeFor1Char(g.select('.tick')), counts = [];\n                var tickLength = Math.max(innerTickSize, 0) + tickPadding,\n                    isVertical = orient === 'left' || orient === 'right';\n\n                // this should be called only when category axis\n                function splitTickText(d, maxWidth) {\n                    var tickText = textFormatted(d),\n                        subtext, spaceIndex, textWidth, splitted = [];\n\n                    if (Object.prototype.toString.call(tickText) === \"[object Array]\") {\n                        return tickText;\n                    }\n\n                    if (!maxWidth || maxWidth <= 0) {\n                        maxWidth = isVertical ? 95 : params.isCategory ? (Math.ceil(scale1(ticks[1]) - scale1(ticks[0])) - 12) : 110;\n                    }\n\n                    function split(splitted, text) {\n                        spaceIndex = undefined;\n                        for (var i = 1; i < text.length; i++) {\n                            if (text.charAt(i) === ' ') {\n                                spaceIndex = i;\n                            }\n                            subtext = text.substr(0, i + 1);\n                            textWidth = sizeFor1Char.w * subtext.length;\n                            // if text width gets over tick width, split by space index or crrent index\n                            if (maxWidth < textWidth) {\n                                return split(\n                                    splitted.concat(text.substr(0, spaceIndex ? spaceIndex : i)),\n                                    text.slice(spaceIndex ? spaceIndex + 1 : i)\n                                );\n                            }\n                        }\n                        return splitted.concat(text);\n                    }\n\n                    return split(splitted, tickText + \"\");\n                }\n\n                function tspanDy(d, i) {\n                    var dy = sizeFor1Char.h;\n                    if (i === 0) {\n                        if (orient === 'left' || orient === 'right') {\n                            dy = -((counts[d.index] - 1) * (sizeFor1Char.h / 2) - 3);\n                        } else {\n                            dy = \".71em\";\n                        }\n                    }\n                    return dy;\n                }\n\n                function tickSize(d) {\n                    var tickPosition = scale(d) + (tickCentered ? 0 : tickOffset);\n                    return range[0] < tickPosition && tickPosition < range[1] ? innerTickSize : 0;\n                }\n\n                text = tick.select(\"text\");\n                tspan = text.selectAll('tspan')\n                    .data(function (d, i) {\n                        var splitted = params.tickMultiline ? splitTickText(d, params.tickWidth) : [].concat(textFormatted(d));\n                        counts[i] = splitted.length;\n                        return splitted.map(function (s) {\n                            return { index: i, splitted: s };\n                        });\n                    });\n                tspan.enter().append('tspan');\n                tspan.exit().remove();\n                tspan.text(function (d) { return d.splitted; });\n\n                var rotate = params.tickTextRotate;\n\n                function textAnchorForText(rotate) {\n                    if (!rotate) {\n                        return 'middle';\n                    }\n                    return rotate > 0 ? \"start\" : \"end\";\n                }\n                function textTransform(rotate) {\n                    if (!rotate) {\n                        return '';\n                    }\n                    return \"rotate(\" + rotate + \")\";\n                }\n                function dxForText(rotate) {\n                    if (!rotate) {\n                        return 0;\n                    }\n                    return 8 * Math.sin(Math.PI * (rotate / 180));\n                }\n                function yForText(rotate) {\n                    if (!rotate) {\n                        return tickLength;\n                    }\n                    return 11.5 - 2.5 * (rotate / 15) * (rotate > 0 ? 1 : -1);\n                }\n\n                switch (orient) {\n                case \"bottom\":\n                    {\n                        tickTransform = axisX;\n                        lineEnter.attr(\"y2\", innerTickSize);\n                        textEnter.attr(\"y\", tickLength);\n                        lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", tickSize);\n                        textUpdate.attr(\"x\", 0).attr(\"y\", yForText(rotate))\n                            .style(\"text-anchor\", textAnchorForText(rotate))\n                            .attr(\"transform\", textTransform(rotate));\n                        tspan.attr('x', 0).attr(\"dy\", tspanDy).attr('dx', dxForText(rotate));\n                        pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + outerTickSize + \"V0H\" + range[1] + \"V\" + outerTickSize);\n                        break;\n                    }\n                case \"top\":\n                    {\n                        // TODO: rotated tick text\n                        tickTransform = axisX;\n                        lineEnter.attr(\"y2\", -innerTickSize);\n                        textEnter.attr(\"y\", -tickLength);\n                        lineUpdate.attr(\"x2\", 0).attr(\"y2\", -innerTickSize);\n                        textUpdate.attr(\"x\", 0).attr(\"y\", -tickLength);\n                        text.style(\"text-anchor\", \"middle\");\n                        tspan.attr('x', 0).attr(\"dy\", \"0em\");\n                        pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + -outerTickSize + \"V0H\" + range[1] + \"V\" + -outerTickSize);\n                        break;\n                    }\n                case \"left\":\n                    {\n                        tickTransform = axisY;\n                        lineEnter.attr(\"x2\", -innerTickSize);\n                        textEnter.attr(\"x\", -tickLength);\n                        lineUpdate.attr(\"x2\", -innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n                        textUpdate.attr(\"x\", -tickLength).attr(\"y\", tickOffset);\n                        text.style(\"text-anchor\", \"end\");\n                        tspan.attr('x', -tickLength).attr(\"dy\", tspanDy);\n                        pathUpdate.attr(\"d\", \"M\" + -outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + -outerTickSize);\n                        break;\n                    }\n                case \"right\":\n                    {\n                        tickTransform = axisY;\n                        lineEnter.attr(\"x2\", innerTickSize);\n                        textEnter.attr(\"x\", tickLength);\n                        lineUpdate.attr(\"x2\", innerTickSize).attr(\"y2\", 0);\n                        textUpdate.attr(\"x\", tickLength).attr(\"y\", 0);\n                        text.style(\"text-anchor\", \"start\");\n                        tspan.attr('x', tickLength).attr(\"dy\", tspanDy);\n                        pathUpdate.attr(\"d\", \"M\" + outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + outerTickSize);\n                        break;\n                    }\n                }\n                if (scale1.rangeBand) {\n                    var x = scale1, dx = x.rangeBand() / 2;\n                    scale0 = scale1 = function (d) {\n                        return x(d) + dx;\n                    };\n                } else if (scale0.rangeBand) {\n                    scale0 = scale1;\n                } else {\n                    tickExit.call(tickTransform, scale1);\n                }\n                tickEnter.call(tickTransform, scale0);\n                tickUpdate.call(tickTransform, scale1);\n            });\n        }\n        axis.scale = function (x) {\n            if (!arguments.length) { return scale; }\n            scale = x;\n            return axis;\n        };\n        axis.orient = function (x) {\n            if (!arguments.length) { return orient; }\n            orient = x in {top: 1, right: 1, bottom: 1, left: 1} ? x + \"\" : \"bottom\";\n            return axis;\n        };\n        axis.tickFormat = function (format) {\n            if (!arguments.length) { return tickFormat; }\n            tickFormat = format;\n            return axis;\n        };\n        axis.tickCentered = function (isCentered) {\n            if (!arguments.length) { return tickCentered; }\n            tickCentered = isCentered;\n            return axis;\n        };\n        axis.tickOffset = function () {\n            return tickOffset;\n        };\n        axis.tickInterval = function () {\n            var interval, length;\n            if (params.isCategory) {\n                interval = tickOffset * 2;\n            }\n            else {\n                length = axis.g.select('path.domain').node().getTotalLength() - outerTickSize * 2;\n                interval = length / axis.g.selectAll('line').size();\n            }\n            return interval === Infinity ? 0 : interval;\n        };\n        axis.ticks = function () {\n            if (!arguments.length) { return tickArguments; }\n            tickArguments = arguments;\n            return axis;\n        };\n        axis.tickCulling = function (culling) {\n            if (!arguments.length) { return tickCulling; }\n            tickCulling = culling;\n            return axis;\n        };\n        axis.tickValues = function (x) {\n            if (typeof x === 'function') {\n                tickValues = function () {\n                    return x(scale.domain());\n                };\n            }\n            else {\n                if (!arguments.length) { return tickValues; }\n                tickValues = x;\n            }\n            return axis;\n        };\n        return axis;\n    }\n\n    c3_chart_internal_fn.isSafari = function () {\n        var ua = window.navigator.userAgent;\n        return ua.indexOf('Safari') >= 0 && ua.indexOf('Chrome') < 0;\n    };\n    c3_chart_internal_fn.isChrome = function () {\n        var ua = window.navigator.userAgent;\n        return ua.indexOf('Chrome') >= 0;\n    };\n\n    /* jshint ignore:start */\n\n    // PhantomJS doesn't have support for Function.prototype.bind, which has caused confusion. Use\n    // this polyfill to avoid the confusion.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill\n\n    if (!Function.prototype.bind) {\n      Function.prototype.bind = function(oThis) {\n        if (typeof this !== 'function') {\n          // closest thing possible to the ECMAScript 5\n          // internal IsCallable function\n          throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n        }\n\n        var aArgs   = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP    = function() {},\n            fBound  = function() {\n              return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n            };\n\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n      };\n    }\n\n    //SVGPathSeg API polyfill\n    //https://github.com/progers/pathseg\n    //\n    //This is a drop-in replacement for the SVGPathSeg and SVGPathSegList APIs that were removed from\n    //SVG2 (https://lists.w3.org/Archives/Public/www-svg/2015Jun/0044.html), including the latest spec\n    //changes which were implemented in Firefox 43 and Chrome 46.\n    //Chrome 48 removes these APIs, so this polyfill is required.\n\n    (function() { \"use strict\";\n     if (!(\"SVGPathSeg\" in window)) {\n         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSeg\n         window.SVGPathSeg = function(type, typeAsLetter, owningPathSegList) {\n             this.pathSegType = type;\n             this.pathSegTypeAsLetter = typeAsLetter;\n             this._owningPathSegList = owningPathSegList;\n         }\n\n         SVGPathSeg.PATHSEG_UNKNOWN = 0;\n         SVGPathSeg.PATHSEG_CLOSEPATH = 1;\n         SVGPathSeg.PATHSEG_MOVETO_ABS = 2;\n         SVGPathSeg.PATHSEG_MOVETO_REL = 3;\n         SVGPathSeg.PATHSEG_LINETO_ABS = 4;\n         SVGPathSeg.PATHSEG_LINETO_REL = 5;\n         SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS = 6;\n         SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL = 7;\n         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS = 8;\n         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL = 9;\n         SVGPathSeg.PATHSEG_ARC_ABS = 10;\n         SVGPathSeg.PATHSEG_ARC_REL = 11;\n         SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS = 12;\n         SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL = 13;\n         SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS = 14;\n         SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL = 15;\n         SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;\n         SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;\n         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;\n         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19;\n\n         // Notify owning PathSegList on any changes so they can be synchronized back to the path element.\n         SVGPathSeg.prototype._segmentChanged = function() {\n             if (this._owningPathSegList)\n                 this._owningPathSegList.segmentChanged(this);\n         }\n\n         window.SVGPathSegClosePath = function(owningPathSegList) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CLOSEPATH, \"z\", owningPathSegList);\n         }\n         SVGPathSegClosePath.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegClosePath.prototype.toString = function() { return \"[object SVGPathSegClosePath]\"; }\n         SVGPathSegClosePath.prototype._asPathString = function() { return this.pathSegTypeAsLetter; }\n         SVGPathSegClosePath.prototype.clone = function() { return new SVGPathSegClosePath(undefined); }\n\n         window.SVGPathSegMovetoAbs = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_MOVETO_ABS, \"M\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegMovetoAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegMovetoAbs.prototype.toString = function() { return \"[object SVGPathSegMovetoAbs]\"; }\n         SVGPathSegMovetoAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegMovetoAbs.prototype.clone = function() { return new SVGPathSegMovetoAbs(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegMovetoAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegMovetoAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegMovetoRel = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_MOVETO_REL, \"m\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegMovetoRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegMovetoRel.prototype.toString = function() { return \"[object SVGPathSegMovetoRel]\"; }\n         SVGPathSegMovetoRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegMovetoRel.prototype.clone = function() { return new SVGPathSegMovetoRel(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegMovetoRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegMovetoRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoAbs = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_ABS, \"L\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegLinetoAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoAbs.prototype.toString = function() { return \"[object SVGPathSegLinetoAbs]\"; }\n         SVGPathSegLinetoAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegLinetoAbs.prototype.clone = function() { return new SVGPathSegLinetoAbs(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegLinetoAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegLinetoAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoRel = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_REL, \"l\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegLinetoRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoRel.prototype.toString = function() { return \"[object SVGPathSegLinetoRel]\"; }\n         SVGPathSegLinetoRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegLinetoRel.prototype.clone = function() { return new SVGPathSegLinetoRel(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegLinetoRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegLinetoRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoCubicAbs = function(owningPathSegList, x, y, x1, y1, x2, y2) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS, \"C\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x1 = x1;\n             this._y1 = y1;\n             this._x2 = x2;\n             this._y2 = y2;\n         }\n         SVGPathSegCurvetoCubicAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoCubicAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicAbs]\"; }\n         SVGPathSegCurvetoCubicAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoCubicAbs.prototype.clone = function() { return new SVGPathSegCurvetoCubicAbs(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2); }\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoCubicRel = function(owningPathSegList, x, y, x1, y1, x2, y2) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL, \"c\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x1 = x1;\n             this._y1 = y1;\n             this._x2 = x2;\n             this._y2 = y2;\n         }\n         SVGPathSegCurvetoCubicRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoCubicRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicRel]\"; }\n         SVGPathSegCurvetoCubicRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoCubicRel.prototype.clone = function() { return new SVGPathSegCurvetoCubicRel(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2); }\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoQuadraticAbs = function(owningPathSegList, x, y, x1, y1) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS, \"Q\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x1 = x1;\n             this._y1 = y1;\n         }\n         SVGPathSegCurvetoQuadraticAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoQuadraticAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticAbs]\"; }\n         SVGPathSegCurvetoQuadraticAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoQuadraticAbs.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticAbs(undefined, this._x, this._y, this._x1, this._y1); }\n         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoQuadraticRel = function(owningPathSegList, x, y, x1, y1) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL, \"q\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x1 = x1;\n             this._y1 = y1;\n         }\n         SVGPathSegCurvetoQuadraticRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoQuadraticRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticRel]\"; }\n         SVGPathSegCurvetoQuadraticRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoQuadraticRel.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticRel(undefined, this._x, this._y, this._x1, this._y1); }\n         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegArcAbs = function(owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_ARC_ABS, \"A\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._r1 = r1;\n             this._r2 = r2;\n             this._angle = angle;\n             this._largeArcFlag = largeArcFlag;\n             this._sweepFlag = sweepFlag;\n         }\n         SVGPathSegArcAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegArcAbs.prototype.toString = function() { return \"[object SVGPathSegArcAbs]\"; }\n         SVGPathSegArcAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegArcAbs.prototype.clone = function() { return new SVGPathSegArcAbs(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag); }\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"r1\", { get: function() { return this._r1; }, set: function(r1) { this._r1 = r1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"r2\", { get: function() { return this._r2; }, set: function(r2) { this._r2 = r2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"angle\", { get: function() { return this._angle; }, set: function(angle) { this._angle = angle; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"largeArcFlag\", { get: function() { return this._largeArcFlag; }, set: function(largeArcFlag) { this._largeArcFlag = largeArcFlag; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"sweepFlag\", { get: function() { return this._sweepFlag; }, set: function(sweepFlag) { this._sweepFlag = sweepFlag; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegArcRel = function(owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_ARC_REL, \"a\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._r1 = r1;\n             this._r2 = r2;\n             this._angle = angle;\n             this._largeArcFlag = largeArcFlag;\n             this._sweepFlag = sweepFlag;\n         }\n         SVGPathSegArcRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegArcRel.prototype.toString = function() { return \"[object SVGPathSegArcRel]\"; }\n         SVGPathSegArcRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegArcRel.prototype.clone = function() { return new SVGPathSegArcRel(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag); }\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"r1\", { get: function() { return this._r1; }, set: function(r1) { this._r1 = r1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"r2\", { get: function() { return this._r2; }, set: function(r2) { this._r2 = r2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"angle\", { get: function() { return this._angle; }, set: function(angle) { this._angle = angle; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"largeArcFlag\", { get: function() { return this._largeArcFlag; }, set: function(largeArcFlag) { this._largeArcFlag = largeArcFlag; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"sweepFlag\", { get: function() { return this._sweepFlag; }, set: function(sweepFlag) { this._sweepFlag = sweepFlag; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoHorizontalAbs = function(owningPathSegList, x) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS, \"H\", owningPathSegList);\n             this._x = x;\n         }\n         SVGPathSegLinetoHorizontalAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoHorizontalAbs.prototype.toString = function() { return \"[object SVGPathSegLinetoHorizontalAbs]\"; }\n         SVGPathSegLinetoHorizontalAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x; }\n         SVGPathSegLinetoHorizontalAbs.prototype.clone = function() { return new SVGPathSegLinetoHorizontalAbs(undefined, this._x); }\n         Object.defineProperty(SVGPathSegLinetoHorizontalAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoHorizontalRel = function(owningPathSegList, x) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL, \"h\", owningPathSegList);\n             this._x = x;\n         }\n         SVGPathSegLinetoHorizontalRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoHorizontalRel.prototype.toString = function() { return \"[object SVGPathSegLinetoHorizontalRel]\"; }\n         SVGPathSegLinetoHorizontalRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x; }\n         SVGPathSegLinetoHorizontalRel.prototype.clone = function() { return new SVGPathSegLinetoHorizontalRel(undefined, this._x); }\n         Object.defineProperty(SVGPathSegLinetoHorizontalRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoVerticalAbs = function(owningPathSegList, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS, \"V\", owningPathSegList);\n             this._y = y;\n         }\n         SVGPathSegLinetoVerticalAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoVerticalAbs.prototype.toString = function() { return \"[object SVGPathSegLinetoVerticalAbs]\"; }\n         SVGPathSegLinetoVerticalAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._y; }\n         SVGPathSegLinetoVerticalAbs.prototype.clone = function() { return new SVGPathSegLinetoVerticalAbs(undefined, this._y); }\n         Object.defineProperty(SVGPathSegLinetoVerticalAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoVerticalRel = function(owningPathSegList, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL, \"v\", owningPathSegList);\n             this._y = y;\n         }\n         SVGPathSegLinetoVerticalRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoVerticalRel.prototype.toString = function() { return \"[object SVGPathSegLinetoVerticalRel]\"; }\n         SVGPathSegLinetoVerticalRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._y; }\n         SVGPathSegLinetoVerticalRel.prototype.clone = function() { return new SVGPathSegLinetoVerticalRel(undefined, this._y); }\n         Object.defineProperty(SVGPathSegLinetoVerticalRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoCubicSmoothAbs = function(owningPathSegList, x, y, x2, y2) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS, \"S\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x2 = x2;\n             this._y2 = y2;\n         }\n         SVGPathSegCurvetoCubicSmoothAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoCubicSmoothAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicSmoothAbs]\"; }\n         SVGPathSegCurvetoCubicSmoothAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoCubicSmoothAbs.prototype.clone = function() { return new SVGPathSegCurvetoCubicSmoothAbs(undefined, this._x, this._y, this._x2, this._y2); }\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoCubicSmoothRel = function(owningPathSegList, x, y, x2, y2) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL, \"s\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x2 = x2;\n             this._y2 = y2;\n         }\n         SVGPathSegCurvetoCubicSmoothRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoCubicSmoothRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicSmoothRel]\"; }\n         SVGPathSegCurvetoCubicSmoothRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoCubicSmoothRel.prototype.clone = function() { return new SVGPathSegCurvetoCubicSmoothRel(undefined, this._x, this._y, this._x2, this._y2); }\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoQuadraticSmoothAbs = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS, \"T\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegCurvetoQuadraticSmoothAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoQuadraticSmoothAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticSmoothAbs]\"; }\n         SVGPathSegCurvetoQuadraticSmoothAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoQuadraticSmoothAbs.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticSmoothAbs(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoQuadraticSmoothRel = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL, \"t\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegCurvetoQuadraticSmoothRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoQuadraticSmoothRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticSmoothRel]\"; }\n         SVGPathSegCurvetoQuadraticSmoothRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoQuadraticSmoothRel.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticSmoothRel(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         // Add createSVGPathSeg* functions to SVGPathElement.\n         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathElement.\n         SVGPathElement.prototype.createSVGPathSegClosePath = function() { return new SVGPathSegClosePath(undefined); }\n         SVGPathElement.prototype.createSVGPathSegMovetoAbs = function(x, y) { return new SVGPathSegMovetoAbs(undefined, x, y); }\n         SVGPathElement.prototype.createSVGPathSegMovetoRel = function(x, y) { return new SVGPathSegMovetoRel(undefined, x, y); }\n         SVGPathElement.prototype.createSVGPathSegLinetoAbs = function(x, y) { return new SVGPathSegLinetoAbs(undefined, x, y); }\n         SVGPathElement.prototype.createSVGPathSegLinetoRel = function(x, y) { return new SVGPathSegLinetoRel(undefined, x, y); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function(x, y, x1, y1, x2, y2) { return new SVGPathSegCurvetoCubicAbs(undefined, x, y, x1, y1, x2, y2); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function(x, y, x1, y1, x2, y2) { return new SVGPathSegCurvetoCubicRel(undefined, x, y, x1, y1, x2, y2); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function(x, y, x1, y1) { return new SVGPathSegCurvetoQuadraticAbs(undefined, x, y, x1, y1); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function(x, y, x1, y1) { return new SVGPathSegCurvetoQuadraticRel(undefined, x, y, x1, y1); }\n         SVGPathElement.prototype.createSVGPathSegArcAbs = function(x, y, r1, r2, angle, largeArcFlag, sweepFlag) { return new SVGPathSegArcAbs(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag); }\n         SVGPathElement.prototype.createSVGPathSegArcRel = function(x, y, r1, r2, angle, largeArcFlag, sweepFlag) { return new SVGPathSegArcRel(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag); }\n         SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function(x) { return new SVGPathSegLinetoHorizontalAbs(undefined, x); }\n         SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function(x) { return new SVGPathSegLinetoHorizontalRel(undefined, x); }\n         SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function(y) { return new SVGPathSegLinetoVerticalAbs(undefined, y); }\n         SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function(y) { return new SVGPathSegLinetoVerticalRel(undefined, y); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function(x, y, x2, y2) { return new SVGPathSegCurvetoCubicSmoothAbs(undefined, x, y, x2, y2); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function(x, y, x2, y2) { return new SVGPathSegCurvetoCubicSmoothRel(undefined, x, y, x2, y2); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function(x, y) { return new SVGPathSegCurvetoQuadraticSmoothAbs(undefined, x, y); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function(x, y) { return new SVGPathSegCurvetoQuadraticSmoothRel(undefined, x, y); }\n     }\n\n     if (!(\"SVGPathSegList\" in window)) {\n         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSegList\n         window.SVGPathSegList = function(pathElement) {\n             this._pathElement = pathElement;\n             this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n\n             // Use a MutationObserver to catch changes to the path's \"d\" attribute.\n             this._mutationObserverConfig = { \"attributes\": true, \"attributeFilter\": [\"d\"] };\n             this._pathElementMutationObserver = new MutationObserver(this._updateListFromPathMutations.bind(this));\n             this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n         }\n\n         Object.defineProperty(SVGPathSegList.prototype, \"numberOfItems\", {\n             get: function() {\n                 this._checkPathSynchronizedToList();\n                 return this._list.length;\n             },\n             enumerable: true\n         });\n\n         // Add the pathSegList accessors to SVGPathElement.\n         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGAnimatedPathData\n         Object.defineProperty(SVGPathElement.prototype, \"pathSegList\", {\n             get: function() {\n                 if (!this._pathSegList)\n                     this._pathSegList = new SVGPathSegList(this);\n                 return this._pathSegList;\n             },\n             enumerable: true\n         });\n         // FIXME: The following are not implemented and simply return SVGPathElement.pathSegList.\n         Object.defineProperty(SVGPathElement.prototype, \"normalizedPathSegList\", { get: function() { return this.pathSegList; }, enumerable: true });\n         Object.defineProperty(SVGPathElement.prototype, \"animatedPathSegList\", { get: function() { return this.pathSegList; }, enumerable: true });\n         Object.defineProperty(SVGPathElement.prototype, \"animatedNormalizedPathSegList\", { get: function() { return this.pathSegList; }, enumerable: true });\n\n         // Process any pending mutations to the path element and update the list as needed.\n         // This should be the first call of all public functions and is needed because\n         // MutationObservers are not synchronous so we can have pending asynchronous mutations.\n         SVGPathSegList.prototype._checkPathSynchronizedToList = function() {\n             this._updateListFromPathMutations(this._pathElementMutationObserver.takeRecords());\n         }\n\n         SVGPathSegList.prototype._updateListFromPathMutations = function(mutationRecords) {\n             if (!this._pathElement)\n                 return;\n             var hasPathMutations = false;\n             mutationRecords.forEach(function(record) {\n                 if (record.attributeName == \"d\")\n                     hasPathMutations = true;\n             });\n             if (hasPathMutations)\n                 this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n         }\n\n         // Serialize the list and update the path's 'd' attribute.\n         SVGPathSegList.prototype._writeListToPath = function() {\n             this._pathElementMutationObserver.disconnect();\n             this._pathElement.setAttribute(\"d\", SVGPathSegList._pathSegArrayAsString(this._list));\n             this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n         }\n\n         // When a path segment changes the list needs to be synchronized back to the path element.\n         SVGPathSegList.prototype.segmentChanged = function(pathSeg) {\n             this._writeListToPath();\n         }\n\n         SVGPathSegList.prototype.clear = function() {\n             this._checkPathSynchronizedToList();\n\n             this._list.forEach(function(pathSeg) {\n                 pathSeg._owningPathSegList = null;\n             });\n             this._list = [];\n             this._writeListToPath();\n         }\n\n         SVGPathSegList.prototype.initialize = function(newItem) {\n             this._checkPathSynchronizedToList();\n\n             this._list = [newItem];\n             newItem._owningPathSegList = this;\n             this._writeListToPath();\n             return newItem;\n         }\n\n         SVGPathSegList.prototype._checkValidIndex = function(index) {\n             if (isNaN(index) || index < 0 || index >= this.numberOfItems)\n                 throw \"INDEX_SIZE_ERR\";\n         }\n\n         SVGPathSegList.prototype.getItem = function(index) {\n             this._checkPathSynchronizedToList();\n\n             this._checkValidIndex(index);\n             return this._list[index];\n         }\n\n         SVGPathSegList.prototype.insertItemBefore = function(newItem, index) {\n             this._checkPathSynchronizedToList();\n\n             // Spec: If the index is greater than or equal to numberOfItems, then the new item is appended to the end of the list.\n             if (index > this.numberOfItems)\n                 index = this.numberOfItems;\n             if (newItem._owningPathSegList) {\n                 // SVG2 spec says to make a copy.\n                 newItem = newItem.clone();\n             }\n             this._list.splice(index, 0, newItem);\n             newItem._owningPathSegList = this;\n             this._writeListToPath();\n             return newItem;\n         }\n\n         SVGPathSegList.prototype.replaceItem = function(newItem, index) {\n             this._checkPathSynchronizedToList();\n\n             if (newItem._owningPathSegList) {\n                 // SVG2 spec says to make a copy.\n                 newItem = newItem.clone();\n             }\n             this._checkValidIndex(index);\n             this._list[index] = newItem;\n             newItem._owningPathSegList = this;\n             this._writeListToPath();\n             return newItem;\n         }\n\n         SVGPathSegList.prototype.removeItem = function(index) {\n             this._checkPathSynchronizedToList();\n\n             this._checkValidIndex(index);\n             var item = this._list[index];\n             this._list.splice(index, 1);\n             this._writeListToPath();\n             return item;\n         }\n\n         SVGPathSegList.prototype.appendItem = function(newItem) {\n             this._checkPathSynchronizedToList();\n\n             if (newItem._owningPathSegList) {\n                 // SVG2 spec says to make a copy.\n                 newItem = newItem.clone();\n             }\n             this._list.push(newItem);\n             newItem._owningPathSegList = this;\n             // TODO: Optimize this to just append to the existing attribute.\n             this._writeListToPath();\n             return newItem;\n         }\n\n         SVGPathSegList._pathSegArrayAsString = function(pathSegArray) {\n             var string = \"\";\n             var first = true;\n             pathSegArray.forEach(function(pathSeg) {\n                 if (first) {\n                     first = false;\n                     string += pathSeg._asPathString();\n                 } else {\n                     string += \" \" + pathSeg._asPathString();\n                 }\n             });\n             return string;\n         }\n\n         // This closely follows SVGPathParser::parsePath from Source/core/svg/SVGPathParser.cpp.\n         SVGPathSegList.prototype._parsePath = function(string) {\n             if (!string || string.length == 0)\n                 return [];\n\n             var owningPathSegList = this;\n\n             var Builder = function() {\n                 this.pathSegList = [];\n             }\n\n             Builder.prototype.appendSegment = function(pathSeg) {\n                 this.pathSegList.push(pathSeg);\n             }\n\n             var Source = function(string) {\n                 this._string = string;\n                 this._currentIndex = 0;\n                 this._endIndex = this._string.length;\n                 this._previousCommand = SVGPathSeg.PATHSEG_UNKNOWN;\n\n                 this._skipOptionalSpaces();\n             }\n\n             Source.prototype._isCurrentSpace = function() {\n                 var character = this._string[this._currentIndex];\n                 return character <= \" \" && (character == \" \" || character == \"\\n\" || character == \"\\t\" || character == \"\\r\" || character == \"\\f\");\n             }\n\n             Source.prototype._skipOptionalSpaces = function() {\n                 while (this._currentIndex < this._endIndex && this._isCurrentSpace())\n                     this._currentIndex++;\n                 return this._currentIndex < this._endIndex;\n             }\n\n             Source.prototype._skipOptionalSpacesOrDelimiter = function() {\n                 if (this._currentIndex < this._endIndex && !this._isCurrentSpace() && this._string.charAt(this._currentIndex) != \",\")\n                     return false;\n                 if (this._skipOptionalSpaces()) {\n                     if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \",\") {\n                         this._currentIndex++;\n                         this._skipOptionalSpaces();\n                     }\n                 }\n                 return this._currentIndex < this._endIndex;\n             }\n\n             Source.prototype.hasMoreData = function() {\n                 return this._currentIndex < this._endIndex;\n             }\n\n             Source.prototype.peekSegmentType = function() {\n                 var lookahead = this._string[this._currentIndex];\n                 return this._pathSegTypeFromChar(lookahead);\n             }\n\n             Source.prototype._pathSegTypeFromChar = function(lookahead) {\n                 switch (lookahead) {\n                 case \"Z\":\n                 case \"z\":\n                     return SVGPathSeg.PATHSEG_CLOSEPATH;\n                 case \"M\":\n                     return SVGPathSeg.PATHSEG_MOVETO_ABS;\n                 case \"m\":\n                     return SVGPathSeg.PATHSEG_MOVETO_REL;\n                 case \"L\":\n                     return SVGPathSeg.PATHSEG_LINETO_ABS;\n                 case \"l\":\n                     return SVGPathSeg.PATHSEG_LINETO_REL;\n                 case \"C\":\n                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;\n                 case \"c\":\n                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;\n                 case \"Q\":\n                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;\n                 case \"q\":\n                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;\n                 case \"A\":\n                     return SVGPathSeg.PATHSEG_ARC_ABS;\n                 case \"a\":\n                     return SVGPathSeg.PATHSEG_ARC_REL;\n                 case \"H\":\n                     return SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;\n                 case \"h\":\n                     return SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;\n                 case \"V\":\n                     return SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;\n                 case \"v\":\n                     return SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;\n                 case \"S\":\n                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;\n                 case \"s\":\n                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;\n                 case \"T\":\n                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;\n                 case \"t\":\n                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;\n                 default:\n                     return SVGPathSeg.PATHSEG_UNKNOWN;\n                 }\n             }\n\n             Source.prototype._nextCommandHelper = function(lookahead, previousCommand) {\n                 // Check for remaining coordinates in the current command.\n                 if ((lookahead == \"+\" || lookahead == \"-\" || lookahead == \".\" || (lookahead >= \"0\" && lookahead <= \"9\")) && previousCommand != SVGPathSeg.PATHSEG_CLOSEPATH) {\n                     if (previousCommand == SVGPathSeg.PATHSEG_MOVETO_ABS)\n                         return SVGPathSeg.PATHSEG_LINETO_ABS;\n                     if (previousCommand == SVGPathSeg.PATHSEG_MOVETO_REL)\n                         return SVGPathSeg.PATHSEG_LINETO_REL;\n                     return previousCommand;\n                 }\n                 return SVGPathSeg.PATHSEG_UNKNOWN;\n             }\n\n             Source.prototype.initialCommandIsMoveTo = function() {\n                 // If the path is empty it is still valid, so return true.\n                 if (!this.hasMoreData())\n                     return true;\n                 var command = this.peekSegmentType();\n                 // Path must start with moveTo.\n                 return command == SVGPathSeg.PATHSEG_MOVETO_ABS || command == SVGPathSeg.PATHSEG_MOVETO_REL;\n             }\n\n             // Parse a number from an SVG path. This very closely follows genericParseNumber(...) from Source/core/svg/SVGParserUtilities.cpp.\n             // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-PathDataBNF\n             Source.prototype._parseNumber = function() {\n                 var exponent = 0;\n                 var integer = 0;\n                 var frac = 1;\n                 var decimal = 0;\n                 var sign = 1;\n                 var expsign = 1;\n\n                 var startIndex = this._currentIndex;\n\n                 this._skipOptionalSpaces();\n\n                 // Read the sign.\n                 if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"+\")\n                     this._currentIndex++;\n                 else if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"-\") {\n                     this._currentIndex++;\n                     sign = -1;\n                 }\n\n                 if (this._currentIndex == this._endIndex || ((this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") && this._string.charAt(this._currentIndex) != \".\"))\n                     // The first character of a number must be one of [0-9+-.].\n                     return undefined;\n\n                 // Read the integer part, build right-to-left.\n                 var startIntPartIndex = this._currentIndex;\n                 while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\")\n                     this._currentIndex++; // Advance to first non-digit.\n\n                 if (this._currentIndex != startIntPartIndex) {\n                     var scanIntPartIndex = this._currentIndex - 1;\n                     var multiplier = 1;\n                     while (scanIntPartIndex >= startIntPartIndex) {\n                         integer += multiplier * (this._string.charAt(scanIntPartIndex--) - \"0\");\n                         multiplier *= 10;\n                     }\n                 }\n\n                 // Read the decimals.\n                 if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \".\") {\n                     this._currentIndex++;\n\n                     // There must be a least one digit following the .\n                     if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\")\n                         return undefined;\n                     while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\")\n                         decimal += (this._string.charAt(this._currentIndex++) - \"0\") * (frac *= 0.1);\n                 }\n\n                 // Read the exponent part.\n                 if (this._currentIndex != startIndex && this._currentIndex + 1 < this._endIndex && (this._string.charAt(this._currentIndex) == \"e\" || this._string.charAt(this._currentIndex) == \"E\") && (this._string.charAt(this._currentIndex + 1) != \"x\" && this._string.charAt(this._currentIndex + 1) != \"m\")) {\n                     this._currentIndex++;\n\n                     // Read the sign of the exponent.\n                     if (this._string.charAt(this._currentIndex) == \"+\") {\n                         this._currentIndex++;\n                     } else if (this._string.charAt(this._currentIndex) == \"-\") {\n                         this._currentIndex++;\n                         expsign = -1;\n                     }\n\n                     // There must be an exponent.\n                     if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\")\n                         return undefined;\n\n                     while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                         exponent *= 10;\n                         exponent += (this._string.charAt(this._currentIndex) - \"0\");\n                         this._currentIndex++;\n                     }\n                 }\n\n                 var number = integer + decimal;\n                 number *= sign;\n\n                 if (exponent)\n                     number *= Math.pow(10, expsign * exponent);\n\n                 if (startIndex == this._currentIndex)\n                     return undefined;\n\n                 this._skipOptionalSpacesOrDelimiter();\n\n                 return number;\n             }\n\n             Source.prototype._parseArcFlag = function() {\n                 if (this._currentIndex >= this._endIndex)\n                     return undefined;\n                 var flag = false;\n                 var flagChar = this._string.charAt(this._currentIndex++);\n                 if (flagChar == \"0\")\n                     flag = false;\n                 else if (flagChar == \"1\")\n                     flag = true;\n                 else\n                     return undefined;\n\n                 this._skipOptionalSpacesOrDelimiter();\n                 return flag;\n             }\n\n             Source.prototype.parseSegment = function() {\n                 var lookahead = this._string[this._currentIndex];\n                 var command = this._pathSegTypeFromChar(lookahead);\n                 if (command == SVGPathSeg.PATHSEG_UNKNOWN) {\n                     // Possibly an implicit command. Not allowed if this is the first command.\n                     if (this._previousCommand == SVGPathSeg.PATHSEG_UNKNOWN)\n                         return null;\n                     command = this._nextCommandHelper(lookahead, this._previousCommand);\n                     if (command == SVGPathSeg.PATHSEG_UNKNOWN)\n                         return null;\n                 } else {\n                     this._currentIndex++;\n                 }\n\n                 this._previousCommand = command;\n\n                 switch (command) {\n                 case SVGPathSeg.PATHSEG_MOVETO_REL:\n                     return new SVGPathSegMovetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_MOVETO_ABS:\n                     return new SVGPathSegMovetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_REL:\n                     return new SVGPathSegLinetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_ABS:\n                     return new SVGPathSegLinetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                     return new SVGPathSegLinetoHorizontalRel(owningPathSegList, this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                     return new SVGPathSegLinetoHorizontalAbs(owningPathSegList, this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                     return new SVGPathSegLinetoVerticalRel(owningPathSegList, this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                     return new SVGPathSegLinetoVerticalAbs(owningPathSegList, this._parseNumber());\n                 case SVGPathSeg.PATHSEG_CLOSEPATH:\n                     this._skipOptionalSpaces();\n                     return new SVGPathSegClosePath(owningPathSegList);\n                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoCubicRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoCubicAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                     var points = {x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoCubicSmoothRel(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                     var points = {x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoCubicSmoothAbs(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoQuadraticRel(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoQuadraticAbs(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n                     return new SVGPathSegCurvetoQuadraticSmoothRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n                     return new SVGPathSegCurvetoQuadraticSmoothAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_ARC_REL:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegArcRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                 case SVGPathSeg.PATHSEG_ARC_ABS:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegArcAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                 default:\n                     throw \"Unknown path seg type.\"\n                 }\n             }\n\n             var builder = new Builder();\n             var source = new Source(string);\n\n             if (!source.initialCommandIsMoveTo())\n                 return [];\n             while (source.hasMoreData()) {\n                 var pathSeg = source.parseSegment();\n                 if (!pathSeg)\n                     return [];\n                 builder.appendSegment(pathSeg);\n             }\n\n             return builder.pathSegList;\n         }\n     }\n    }());\n\n    /* jshint ignore:end */\n\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(728)], __WEBPACK_AMD_DEFINE_RESULT__ = function () { return c3; }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if ('undefined' !== typeof exports && 'undefined' !== typeof module) {\n        module.exports = c3;\n    } else {\n        window.c3 = c3;\n    }\n\n})(window);\n\n\n/***/ },\n\n/***/ 748:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_c3__ = __webpack_require__(736);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_c3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_c3__);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return HomeComponent; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\n\r\n\r\nvar HomeComponent = (function () {\r\n    function HomeComponent() {\r\n    }\r\n    HomeComponent.prototype.ngOnInit = function () {\r\n        var vmap = $('#vmap');\r\n        vmap.vectorMap({\r\n            map: 'world_en',\r\n            backgroundColor: '#FFF',\r\n            borderColor: '#D9D9D9',\r\n            borderOpacity: 0.25,\r\n            borderWidth: 1,\r\n            color: '#CCCCCC',\r\n            enableZoom: true,\r\n            hoverColor: '#63B4E6',\r\n            hoverOpacity: null,\r\n            normalizeFunction: 'linear',\r\n            scaleColors: ['#b6d6ff', '#005ace'],\r\n            selectedColor: '#63B4E6',\r\n            selectedRegions: [],\r\n            showTooltip: true,\r\n            onRegionClick: function (element, code, region) {\r\n                var message = 'You clicked \"'\r\n                    + region\r\n                    + '\" which has the code: '\r\n                    + code.toUpperCase();\r\n                console.log(message);\r\n            }\r\n        });\r\n        __WEBPACK_IMPORTED_MODULE_1_c3__[\"generate\"]({\r\n            bindto: '#lineChart',\r\n            data: {\r\n                columns: [\r\n                    ['Newuser', 30, 200, 100, 400, 150, 250],\r\n                    ['Returning user', 50, 120, 210, 140, 115, 425],\r\n                    ['Referral user', 40, 150, 98, 300, 175, 100]\r\n                ]\r\n            },\r\n            color: {\r\n                pattern: ['#3CA2E0', '#5CB85C', '#F1B35B']\r\n            },\r\n            axis: {\r\n                x: {\r\n                    show: false\r\n                },\r\n                y: {\r\n                    show: false\r\n                }\r\n            }\r\n        });\r\n        __WEBPACK_IMPORTED_MODULE_1_c3__[\"generate\"]({\r\n            bindto: '#cbar',\r\n            data: {\r\n                columns: [\r\n                    [10, 40, 20, 90, 35, 70, 10, 50, 20, 80, 60, 10, 20, 40, 70, 65]\r\n                ],\r\n                type: 'bar'\r\n            },\r\n            bar: {\r\n                width: {\r\n                    ratio: 0.5 // this makes bar width 50% of length between ticks\r\n                }\r\n            },\r\n            color: {\r\n                pattern: ['#DB5B57']\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            axis: {\r\n                x: {\r\n                    show: false\r\n                },\r\n                y: {\r\n                    show: false\r\n                }\r\n            }\r\n        });\r\n        __WEBPACK_IMPORTED_MODULE_1_c3__[\"generate\"]({\r\n            bindto: '#pie',\r\n            data: {\r\n                columns: [\r\n                    ['data1', 11],\r\n                    ['data2', 23],\r\n                    ['data3', 66]\r\n                ],\r\n                type: 'pie'\r\n            },\r\n            color: {\r\n                pattern: ['#5CB85C', '#F0AD4E', '#3CA2E0']\r\n            },\r\n            legend: {\r\n                show: false\r\n            }\r\n        });\r\n    };\r\n    HomeComponent = __decorate([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"])({\r\n            selector: 'app-home',\r\n            template: __webpack_require__(925),\r\n            styles: [__webpack_require__(899)]\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], HomeComponent);\r\n    return HomeComponent;\r\n}());\r\n\n\n/***/ },\n\n/***/ 766:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return StatsComponent; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\n\r\nvar StatsComponent = (function () {\r\n    function StatsComponent() {\r\n    }\r\n    __decorate([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"])(), \r\n        __metadata('design:type', String)\r\n    ], StatsComponent.prototype, \"icon\", void 0);\r\n    __decorate([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"])(), \r\n        __metadata('design:type', String)\r\n    ], StatsComponent.prototype, \"value\", void 0);\r\n    __decorate([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"])(), \r\n        __metadata('design:type', String)\r\n    ], StatsComponent.prototype, \"text\", void 0);\r\n    __decorate([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"])(), \r\n        __metadata('design:type', String)\r\n    ], StatsComponent.prototype, \"bgclass\", void 0);\r\n    __decorate([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"])(), \r\n        __metadata('design:type', String)\r\n    ], StatsComponent.prototype, \"link\", void 0);\r\n    __decorate([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"])(), \r\n        __metadata('design:type', String)\r\n    ], StatsComponent.prototype, \"progressValue\", void 0);\r\n    StatsComponent = __decorate([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"])({\r\n            selector: 'stats-cmp',\r\n            template: __webpack_require__(942)\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], StatsComponent);\r\n    return StatsComponent;\r\n}());\r\n\n\n/***/ },\n\n/***/ 767:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return TodoComponent; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\n\r\nvar TodoComponent = (function () {\r\n    function TodoComponent() {\r\n        this.nameList = [\r\n            'Meeting with Nabindar Singh.',\r\n            'Exercise at 6:pm with Nicholas.',\r\n            'Avengers Age of Ultron.',\r\n            'Henna birthday at Mezbaan.'\r\n        ];\r\n    }\r\n    TodoComponent.prototype.addName = function () {\r\n        this.nameList.unshift(this.newName);\r\n        this.newName = '';\r\n        return true;\r\n    };\r\n    TodoComponent.prototype.ngOnInit = function () {\r\n        var todoListWraper = $('.todo-list-wrap');\r\n        todoListWraper.perfectScrollbar({});\r\n    };\r\n    TodoComponent = __decorate([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"])({\r\n            selector: 'todo-cmp',\r\n            template: __webpack_require__(943)\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], TodoComponent);\r\n    return TodoComponent;\r\n}());\r\n\n\n/***/ },\n\n/***/ 815:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_router__ = __webpack_require__(388);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__home_component__ = __webpack_require__(748);\n\r\n\r\nvar homeRoutes = [\r\n    { path: '', component: __WEBPACK_IMPORTED_MODULE_1__home_component__[\"a\" /* HomeComponent */] }\r\n];\r\n/* harmony default export */ exports[\"a\"] = __WEBPACK_IMPORTED_MODULE_0__angular_router__[\"b\" /* RouterModule */].forChild(homeRoutes);\r\n\n\n/***/ },\n\n/***/ 833:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__todo_index__ = __webpack_require__(836);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__stats_index__ = __webpack_require__(834);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(exports, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__todo_index__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(exports, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__stats_index__[\"a\"]; });\n\r\n\r\n\n\n/***/ },\n\n/***/ 834:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__stats_component__ = __webpack_require__(766);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__stats_module__ = __webpack_require__(835);\n/* unused harmony namespace reexport */\n/* harmony namespace reexport (by used) */ __webpack_require__.d(exports, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_1__stats_module__[\"a\"]; });\n\r\n\r\n\n\n/***/ },\n\n/***/ 835:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__stats_component__ = __webpack_require__(766);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return StatsModule; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\n\r\n\r\nvar StatsModule = (function () {\r\n    function StatsModule() {\r\n    }\r\n    StatsModule = __decorate([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"])({\r\n            imports: [],\r\n            declarations: [__WEBPACK_IMPORTED_MODULE_1__stats_component__[\"a\" /* StatsComponent */]],\r\n            exports: [__WEBPACK_IMPORTED_MODULE_1__stats_component__[\"a\" /* StatsComponent */]],\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], StatsModule);\r\n    return StatsModule;\r\n}());\r\n\n\n/***/ },\n\n/***/ 836:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__todo_component__ = __webpack_require__(767);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__todo_module__ = __webpack_require__(837);\n/* unused harmony namespace reexport */\n/* harmony namespace reexport (by used) */ __webpack_require__.d(exports, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_1__todo_module__[\"a\"]; });\n\r\n\r\n\n\n/***/ },\n\n/***/ 837:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(101);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(390);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__todo_component__ = __webpack_require__(767);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return TodoModule; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\n\r\n\r\n\r\n\r\nvar TodoModule = (function () {\r\n    function TodoModule() {\r\n    }\r\n    TodoModule = __decorate([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"])({\r\n            imports: [__WEBPACK_IMPORTED_MODULE_1__angular_common__[\"CommonModule\"], __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"CommonModule\"], __WEBPACK_IMPORTED_MODULE_2__angular_forms__[\"FormsModule\"]],\r\n            declarations: [__WEBPACK_IMPORTED_MODULE_3__todo_component__[\"a\" /* TodoComponent */]],\r\n            exports: [__WEBPACK_IMPORTED_MODULE_3__todo_component__[\"a\" /* TodoComponent */]],\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], TodoModule);\r\n    return TodoModule;\r\n}());\r\n\n\n/***/ },\n\n/***/ 899:\n/***/ function(module, exports) {\n\nmodule.exports = \"\"\n\n/***/ },\n\n/***/ 925:\n/***/ function(module, exports) {\n\nmodule.exports = \"<div class=\\\"animate\\\">\\n  <div class=\\\"row home-row\\\">\\n    <div class=\\\"col-lg-4 col-xl-3\\\">\\n      <div class=\\\"home-stats\\\">\\n        <stats-cmp icon=\\\"cloud-upload\\\" value=\\\"88%\\\" text=\\\"Server Uptime\\\" bgclass=\\\"info\\\" link=\\\"c3chart\\\" progressValue=\\\"88\\\"></stats-cmp>\\n        <stats-cmp icon=\\\"heartbeat\\\" value=\\\"94%\\\" text=\\\"Positive feedback\\\" bgclass=\\\"success\\\" link=\\\"c3chart\\\" progressValue=\\\"94\\\" ></stats-cmp>\\n        <stats-cmp icon=\\\"flag\\\" value=\\\"12,351\\\" text=\\\"Posts flagged\\\" bgclass=\\\"danger\\\" link=\\\"inbox\\\" progressValue=\\\"72\\\"></stats-cmp>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-4 col-xl-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-block\\\">\\n          <div class=\\\"chart-comment clearfix\\\">\\n            <div class=\\\"text-primary pull-left\\\">\\n              <b>\\n                <span class=\\\"comment-header\\\">56%</span><br />\\n                <span class=\\\"comment-comment\\\">Referral User&nbsp;</span>\\n              </b>\\n            </div>\\n            <div class=\\\"text-success pull-left m-l\\\">\\n              <b>\\n                <span class=\\\"comment-header\\\">25%</span><br />\\n                <span class=\\\"comment-comment\\\">Returning User&nbsp;</span>\\n              </b>\\n            </div>\\n            <div class=\\\"text-warning pull-left m-l\\\">\\n              <b>\\n                <span class=\\\"comment-header\\\">20%</span><br />\\n                <span class=\\\"comment-comment\\\">New User</span>\\n              </b>\\n            </div>\\n          </div>\\n          <div id=\\\"lineChart\\\" style=\\\"height:221px\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-4 col-xl-3\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"\\\">\\n          <div id=\\\"cbar\\\" style=\\\"height:150px; padding-top:7px;\\\"></div>\\n        </div>\\n      </div>\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-block\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-6 text-left\\\">\\n              <div class=\\\"padder\\\">\\n                <span class=\\\"heading\\\">Totol View :</span><br />\\n                <strong class=\\\"text-primary\\\">22068</strong>\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-6\\\">\\n              <div id=\\\"pie\\\" style=\\\"height:125px; margin:-9px 0px -15px\\\"></div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-xl-8\\\">\\n      <div class=\\\"card card-block\\\">\\n        <div id=\\\"vmap\\\" style=\\\"width: 100%; height: 321px;\\\"></div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 col-xl-4\\\">\\n      <todo-cmp></todo-cmp>\\n    </div>\\n  </div>\\n</div>\"\n\n/***/ },\n\n/***/ 942:\n/***/ function(module, exports) {\n\nmodule.exports = \"<a class=\\\"stat card hvr-wobble-horizontal\\\">\\n\\t<div class=\\\" stat-icon\\\">\\n\\t\\t<i class=\\\"fa fa-{{icon}} fa-4x text-{{bgclass}}\\\"></i>\\n\\t</div>\\n\\t<div class=\\\" stat-label\\\">\\n\\t\\t<div class=\\\"label-header\\\">\\n\\t\\t\\t{{value}}\\n\\t\\t</div>\\n\\t\\t<progress class=\\\"progress progress-{{bgclass}}\\\" max=\\\"100\\\" value=\\\"{{progressValue}}\\\">{{progressValue}}%</progress>\\n\\t\\t<div class=\\\"clearfix stat-detail\\\">\\n\\t\\t\\t<div class=\\\"label-body\\\">\\n\\t\\t\\t\\t<i class=\\\"fa fa-arrow-circle-o-right pull-right text-muted\\\"></i> {{ text }}\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</a>\"\n\n/***/ },\n\n/***/ 943:\n/***/ function(module, exports) {\n\nmodule.exports = \"<div class=\\\"todo-container card card-danger\\\">\\n\\t<div class=\\\"card-header\\\">\\n\\t\\t<div class=\\\"todo-header text-xs-center\\\">\\n\\t\\t\\t<h4><i class=\\\"fa fa-tasks\\\"></i>&nbsp;To do Tasks</h4>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"card-block\\\" style=\\\"padding-bottom: 0;\\\">\\n\\t\\t<div class=\\\"todo-body\\\">\\n\\t\\t\\t<div class=\\\"todo-list-wrap\\\">\\n\\t\\t\\t\\t<ul class=\\\"todo-list\\\">\\n\\t\\t\\t\\t\\t<li *ngFor=\\\"let name of nameList\\\">\\n\\t\\t\\t\\t\\t\\t<label class=\\\"checkbox1 animated bounceInDown\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\">\\n\\t\\t\\t\\t\\t\\t\\t<span></span>\\n\\t\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"done animated bounceInRight\\\">{{name}}</span>\\n\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t</div>\\n\\t\\t\\t<form class=\\\"todo-from-bottom\\\" (submit)=\\\"addName()\\\">\\n\\t\\t\\t\\t<p class=\\\"input-group\\\">\\n\\t\\t            <input [(ngModel)]=\\\"newName\\\" name=\\\"newName\\\" class=\\\"form-control\\\">\\n\\t\\t            <span class=\\\"input-group-btn\\\">\\n\\t\\t            \\t<button type=\\\"submit\\\" class=\\\"btn btn-danger\\\">Add</button>\\n\\t\\t            </span>\\n\\t            </p>\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// 2.1440f511e8555aabab75.chunk.js","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeComponent } from './home.component';\nimport homeRoutes from './home.routes';\n\nimport { TodoModule, StatsModule } from '../../widgets/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TodoModule,\n    StatsModule,\n    homeRoutes\n  ],\n  declarations: [HomeComponent]\n})\nexport default class HomeModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/angular2-template-loader!C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/home/home.module.ts","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/d3/d3.js\n// module id = 728\n// module chunks = 0 2 4","(function (window) {\n    'use strict';\n\n    /*global define, module, exports, require */\n\n    var c3 = { version: \"0.4.11\" };\n\n    var c3_chart_fn,\n        c3_chart_internal_fn,\n        c3_chart_internal_axis_fn;\n\n    function API(owner) {\n        this.owner = owner;\n    }\n\n    function inherit(base, derived) {\n\n        if (Object.create) {\n            derived.prototype = Object.create(base.prototype);\n        } else {\n            var f = function f() {};\n            f.prototype = base.prototype;\n            derived.prototype = new f();\n        }\n\n        derived.prototype.constructor = derived;\n\n        return derived;\n    }\n\n    function Chart(config) {\n        var $$ = this.internal = new ChartInternal(this);\n        $$.loadConfig(config);\n\n        $$.beforeInit(config);\n        $$.init();\n        $$.afterInit(config);\n\n        // bind \"this\" to nested API\n        (function bindThis(fn, target, argThis) {\n            Object.keys(fn).forEach(function (key) {\n                target[key] = fn[key].bind(argThis);\n                if (Object.keys(fn[key]).length > 0) {\n                    bindThis(fn[key], target[key], argThis);\n                }\n            });\n        })(c3_chart_fn, this, this);\n    }\n\n    function ChartInternal(api) {\n        var $$ = this;\n        $$.d3 = window.d3 ? window.d3 : typeof require !== 'undefined' ? require(\"d3\") : undefined;\n        $$.api = api;\n        $$.config = $$.getDefaultConfig();\n        $$.data = {};\n        $$.cache = {};\n        $$.axes = {};\n    }\n\n    c3.generate = function (config) {\n        return new Chart(config);\n    };\n\n    c3.chart = {\n        fn: Chart.prototype,\n        internal: {\n            fn: ChartInternal.prototype,\n            axis: {\n                fn: Axis.prototype\n            }\n        }\n    };\n    c3_chart_fn = c3.chart.fn;\n    c3_chart_internal_fn = c3.chart.internal.fn;\n    c3_chart_internal_axis_fn = c3.chart.internal.axis.fn;\n\n    c3_chart_internal_fn.beforeInit = function () {\n        // can do something\n    };\n    c3_chart_internal_fn.afterInit = function () {\n        // can do something\n    };\n    c3_chart_internal_fn.init = function () {\n        var $$ = this, config = $$.config;\n\n        $$.initParams();\n\n        if (config.data_url) {\n            $$.convertUrlToData(config.data_url, config.data_mimeType, config.data_headers, config.data_keys, $$.initWithData);\n        }\n        else if (config.data_json) {\n            $$.initWithData($$.convertJsonToData(config.data_json, config.data_keys));\n        }\n        else if (config.data_rows) {\n            $$.initWithData($$.convertRowsToData(config.data_rows));\n        }\n        else if (config.data_columns) {\n            $$.initWithData($$.convertColumnsToData(config.data_columns));\n        }\n        else {\n            throw Error('url or json or rows or columns is required.');\n        }\n    };\n\n    c3_chart_internal_fn.initParams = function () {\n        var $$ = this, d3 = $$.d3, config = $$.config;\n\n        // MEMO: clipId needs to be unique because it conflicts when multiple charts exist\n        $$.clipId = \"c3-\" + (+new Date()) + '-clip',\n        $$.clipIdForXAxis = $$.clipId + '-xaxis',\n        $$.clipIdForYAxis = $$.clipId + '-yaxis',\n        $$.clipIdForGrid = $$.clipId + '-grid',\n        $$.clipIdForSubchart = $$.clipId + '-subchart',\n        $$.clipPath = $$.getClipPath($$.clipId),\n        $$.clipPathForXAxis = $$.getClipPath($$.clipIdForXAxis),\n        $$.clipPathForYAxis = $$.getClipPath($$.clipIdForYAxis);\n        $$.clipPathForGrid = $$.getClipPath($$.clipIdForGrid),\n        $$.clipPathForSubchart = $$.getClipPath($$.clipIdForSubchart),\n\n        $$.dragStart = null;\n        $$.dragging = false;\n        $$.flowing = false;\n        $$.cancelClick = false;\n        $$.mouseover = false;\n        $$.transiting = false;\n\n        $$.color = $$.generateColor();\n        $$.levelColor = $$.generateLevelColor();\n\n        $$.dataTimeFormat = config.data_xLocaltime ? d3.time.format : d3.time.format.utc;\n        $$.axisTimeFormat = config.axis_x_localtime ? d3.time.format : d3.time.format.utc;\n        $$.defaultAxisTimeFormat = $$.axisTimeFormat.multi([\n            [\".%L\", function (d) { return d.getMilliseconds(); }],\n            [\":%S\", function (d) { return d.getSeconds(); }],\n            [\"%I:%M\", function (d) { return d.getMinutes(); }],\n            [\"%I %p\", function (d) { return d.getHours(); }],\n            [\"%-m/%-d\", function (d) { return d.getDay() && d.getDate() !== 1; }],\n            [\"%-m/%-d\", function (d) { return d.getDate() !== 1; }],\n            [\"%-m/%-d\", function (d) { return d.getMonth(); }],\n            [\"%Y/%-m/%-d\", function () { return true; }]\n        ]);\n\n        $$.hiddenTargetIds = [];\n        $$.hiddenLegendIds = [];\n        $$.focusedTargetIds = [];\n        $$.defocusedTargetIds = [];\n\n        $$.xOrient = config.axis_rotated ? \"left\" : \"bottom\";\n        $$.yOrient = config.axis_rotated ? (config.axis_y_inner ? \"top\" : \"bottom\") : (config.axis_y_inner ? \"right\" : \"left\");\n        $$.y2Orient = config.axis_rotated ? (config.axis_y2_inner ? \"bottom\" : \"top\") : (config.axis_y2_inner ? \"left\" : \"right\");\n        $$.subXOrient = config.axis_rotated ? \"left\" : \"bottom\";\n\n        $$.isLegendRight = config.legend_position === 'right';\n        $$.isLegendInset = config.legend_position === 'inset';\n        $$.isLegendTop = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'top-right';\n        $$.isLegendLeft = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'bottom-left';\n        $$.legendStep = 0;\n        $$.legendItemWidth = 0;\n        $$.legendItemHeight = 0;\n\n        $$.currentMaxTickWidths = {\n            x: 0,\n            y: 0,\n            y2: 0\n        };\n\n        $$.rotated_padding_left = 30;\n        $$.rotated_padding_right = config.axis_rotated && !config.axis_x_show ? 0 : 30;\n        $$.rotated_padding_top = 5;\n\n        $$.withoutFadeIn = {};\n\n        $$.intervalForObserveInserted = undefined;\n\n        $$.axes.subx = d3.selectAll([]); // needs when excluding subchart.js\n    };\n\n    c3_chart_internal_fn.initChartElements = function () {\n        if (this.initBar) { this.initBar(); }\n        if (this.initLine) { this.initLine(); }\n        if (this.initArc) { this.initArc(); }\n        if (this.initGauge) { this.initGauge(); }\n        if (this.initText) { this.initText(); }\n    };\n\n    c3_chart_internal_fn.initWithData = function (data) {\n        var $$ = this, d3 = $$.d3, config = $$.config;\n        var defs, main, binding = true;\n\n        $$.axis = new Axis($$);\n\n        if ($$.initPie) { $$.initPie(); }\n        if ($$.initBrush) { $$.initBrush(); }\n        if ($$.initZoom) { $$.initZoom(); }\n\n        if (!config.bindto) {\n            $$.selectChart = d3.selectAll([]);\n        }\n        else if (typeof config.bindto.node === 'function') {\n            $$.selectChart = config.bindto;\n        }\n        else {\n            $$.selectChart = d3.select(config.bindto);\n        }\n        if ($$.selectChart.empty()) {\n            $$.selectChart = d3.select(document.createElement('div')).style('opacity', 0);\n            $$.observeInserted($$.selectChart);\n            binding = false;\n        }\n        $$.selectChart.html(\"\").classed(\"c3\", true);\n\n        // Init data as targets\n        $$.data.xs = {};\n        $$.data.targets = $$.convertDataToTargets(data);\n\n        if (config.data_filter) {\n            $$.data.targets = $$.data.targets.filter(config.data_filter);\n        }\n\n        // Set targets to hide if needed\n        if (config.data_hide) {\n            $$.addHiddenTargetIds(config.data_hide === true ? $$.mapToIds($$.data.targets) : config.data_hide);\n        }\n        if (config.legend_hide) {\n            $$.addHiddenLegendIds(config.legend_hide === true ? $$.mapToIds($$.data.targets) : config.legend_hide);\n        }\n\n        // when gauge, hide legend // TODO: fix\n        if ($$.hasType('gauge')) {\n            config.legend_show = false;\n        }\n\n        // Init sizes and scales\n        $$.updateSizes();\n        $$.updateScales();\n\n        // Set domains for each scale\n        $$.x.domain(d3.extent($$.getXDomain($$.data.targets)));\n        $$.y.domain($$.getYDomain($$.data.targets, 'y'));\n        $$.y2.domain($$.getYDomain($$.data.targets, 'y2'));\n        $$.subX.domain($$.x.domain());\n        $$.subY.domain($$.y.domain());\n        $$.subY2.domain($$.y2.domain());\n\n        // Save original x domain for zoom update\n        $$.orgXDomain = $$.x.domain();\n\n        // Set initialized scales to brush and zoom\n        if ($$.brush) { $$.brush.scale($$.subX); }\n        if (config.zoom_enabled) { $$.zoom.scale($$.x); }\n\n        /*-- Basic Elements --*/\n\n        // Define svgs\n        $$.svg = $$.selectChart.append(\"svg\")\n            .style(\"overflow\", \"hidden\")\n            .on('mouseenter', function () { return config.onmouseover.call($$); })\n            .on('mouseleave', function () { return config.onmouseout.call($$); });\n\n        if ($$.config.svg_classname) {\n            $$.svg.attr('class', $$.config.svg_classname);\n        }\n\n        // Define defs\n        defs = $$.svg.append(\"defs\");\n        $$.clipChart = $$.appendClip(defs, $$.clipId);\n        $$.clipXAxis = $$.appendClip(defs, $$.clipIdForXAxis);\n        $$.clipYAxis = $$.appendClip(defs, $$.clipIdForYAxis);\n        $$.clipGrid = $$.appendClip(defs, $$.clipIdForGrid);\n        $$.clipSubchart = $$.appendClip(defs, $$.clipIdForSubchart);\n        $$.updateSvgSize();\n\n        // Define regions\n        main = $$.main = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('main'));\n\n        if ($$.initSubchart) { $$.initSubchart(); }\n        if ($$.initTooltip) { $$.initTooltip(); }\n        if ($$.initLegend) { $$.initLegend(); }\n        if ($$.initTitle) { $$.initTitle(); }\n\n        /*-- Main Region --*/\n\n        // text when empty\n        main.append(\"text\")\n            .attr(\"class\", CLASS.text + ' ' + CLASS.empty)\n            .attr(\"text-anchor\", \"middle\") // horizontal centering of text at x position in all browsers.\n            .attr(\"dominant-baseline\", \"middle\"); // vertical centering of text at y position in all browsers, except IE.\n\n        // Regions\n        $$.initRegion();\n\n        // Grids\n        $$.initGrid();\n\n        // Define g for chart area\n        main.append('g')\n            .attr(\"clip-path\", $$.clipPath)\n            .attr('class', CLASS.chart);\n\n        // Grid lines\n        if (config.grid_lines_front) { $$.initGridLines(); }\n\n        // Cover whole with rects for events\n        $$.initEventRect();\n\n        // Define g for chart\n        $$.initChartElements();\n\n        // if zoom privileged, insert rect to forefront\n        // TODO: is this needed?\n        main.insert('rect', config.zoom_privileged ? null : 'g.' + CLASS.regions)\n            .attr('class', CLASS.zoomRect)\n            .attr('width', $$.width)\n            .attr('height', $$.height)\n            .style('opacity', 0)\n            .on(\"dblclick.zoom\", null);\n\n        // Set default extent if defined\n        if (config.axis_x_extent) { $$.brush.extent($$.getDefaultExtent()); }\n\n        // Add Axis\n        $$.axis.init();\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Draw with targets\n        if (binding) {\n            $$.updateDimension();\n            $$.config.oninit.call($$);\n            $$.redraw({\n                withTransition: false,\n                withTransform: true,\n                withUpdateXDomain: true,\n                withUpdateOrgXDomain: true,\n                withTransitionForAxis: false\n            });\n        }\n\n        // Bind resize event\n        $$.bindResize();\n\n        // export element of the chart\n        $$.api.element = $$.selectChart.node();\n    };\n\n    c3_chart_internal_fn.smoothLines = function (el, type) {\n        var $$ = this;\n        if (type === 'grid') {\n            el.each(function () {\n                var g = $$.d3.select(this),\n                    x1 = g.attr('x1'),\n                    x2 = g.attr('x2'),\n                    y1 = g.attr('y1'),\n                    y2 = g.attr('y2');\n                g.attr({\n                    'x1': Math.ceil(x1),\n                    'x2': Math.ceil(x2),\n                    'y1': Math.ceil(y1),\n                    'y2': Math.ceil(y2)\n                });\n            });\n        }\n    };\n\n\n    c3_chart_internal_fn.updateSizes = function () {\n        var $$ = this, config = $$.config;\n        var legendHeight = $$.legend ? $$.getLegendHeight() : 0,\n            legendWidth = $$.legend ? $$.getLegendWidth() : 0,\n            legendHeightForBottom = $$.isLegendRight || $$.isLegendInset ? 0 : legendHeight,\n            hasArc = $$.hasArcType(),\n            xAxisHeight = config.axis_rotated || hasArc ? 0 : $$.getHorizontalAxisHeight('x'),\n            subchartHeight = config.subchart_show && !hasArc ? (config.subchart_size_height + xAxisHeight) : 0;\n\n        $$.currentWidth = $$.getCurrentWidth();\n        $$.currentHeight = $$.getCurrentHeight();\n\n        // for main\n        $$.margin = config.axis_rotated ? {\n            top: $$.getHorizontalAxisHeight('y2') + $$.getCurrentPaddingTop(),\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n            bottom: $$.getHorizontalAxisHeight('y') + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n            left: subchartHeight + (hasArc ? 0 : $$.getCurrentPaddingLeft())\n        } : {\n            top: 4 + $$.getCurrentPaddingTop(), // for top tick text\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n            bottom: xAxisHeight + subchartHeight + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n            left: hasArc ? 0 : $$.getCurrentPaddingLeft()\n        };\n\n        // for subchart\n        $$.margin2 = config.axis_rotated ? {\n            top: $$.margin.top,\n            right: NaN,\n            bottom: 20 + legendHeightForBottom,\n            left: $$.rotated_padding_left\n        } : {\n            top: $$.currentHeight - subchartHeight - legendHeightForBottom,\n            right: NaN,\n            bottom: xAxisHeight + legendHeightForBottom,\n            left: $$.margin.left\n        };\n\n        // for legend\n        $$.margin3 = {\n            top: 0,\n            right: NaN,\n            bottom: 0,\n            left: 0\n        };\n        if ($$.updateSizeForLegend) { $$.updateSizeForLegend(legendHeight, legendWidth); }\n\n        $$.width = $$.currentWidth - $$.margin.left - $$.margin.right;\n        $$.height = $$.currentHeight - $$.margin.top - $$.margin.bottom;\n        if ($$.width < 0) { $$.width = 0; }\n        if ($$.height < 0) { $$.height = 0; }\n\n        $$.width2 = config.axis_rotated ? $$.margin.left - $$.rotated_padding_left - $$.rotated_padding_right : $$.width;\n        $$.height2 = config.axis_rotated ? $$.height : $$.currentHeight - $$.margin2.top - $$.margin2.bottom;\n        if ($$.width2 < 0) { $$.width2 = 0; }\n        if ($$.height2 < 0) { $$.height2 = 0; }\n\n        // for arc\n        $$.arcWidth = $$.width - ($$.isLegendRight ? legendWidth + 10 : 0);\n        $$.arcHeight = $$.height - ($$.isLegendRight ? 0 : 10);\n        if ($$.hasType('gauge') && !config.gauge_fullCircle) {\n            $$.arcHeight += $$.height - $$.getGaugeLabelHeight();\n        }\n        if ($$.updateRadius) { $$.updateRadius(); }\n\n        if ($$.isLegendRight && hasArc) {\n            $$.margin3.left = $$.arcWidth / 2 + $$.radiusExpanded * 1.1;\n        }\n    };\n\n    c3_chart_internal_fn.updateTargets = function (targets) {\n        var $$ = this;\n\n        /*-- Main --*/\n\n        //-- Text --//\n        $$.updateTargetsForText(targets);\n\n        //-- Bar --//\n        $$.updateTargetsForBar(targets);\n\n        //-- Line --//\n        $$.updateTargetsForLine(targets);\n\n        //-- Arc --//\n        if ($$.hasArcType() && $$.updateTargetsForArc) { $$.updateTargetsForArc(targets); }\n\n        /*-- Sub --*/\n\n        if ($$.updateTargetsForSubchart) { $$.updateTargetsForSubchart(targets); }\n\n        // Fade-in each chart\n        $$.showTargets();\n    };\n    c3_chart_internal_fn.showTargets = function () {\n        var $$ = this;\n        $$.svg.selectAll('.' + CLASS.target).filter(function (d) { return $$.isTargetToShow(d.id); })\n          .transition().duration($$.config.transition_duration)\n            .style(\"opacity\", 1);\n    };\n\n    c3_chart_internal_fn.redraw = function (options, transitions) {\n        var $$ = this, main = $$.main, d3 = $$.d3, config = $$.config;\n        var areaIndices = $$.getShapeIndices($$.isAreaType), barIndices = $$.getShapeIndices($$.isBarType), lineIndices = $$.getShapeIndices($$.isLineType);\n        var withY, withSubchart, withTransition, withTransitionForExit, withTransitionForAxis,\n            withTransform, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain, withLegend,\n            withEventRect, withDimension, withUpdateXAxis;\n        var hideAxis = $$.hasArcType();\n        var drawArea, drawBar, drawLine, xForText, yForText;\n        var duration, durationForExit, durationForAxis;\n        var waitForDraw, flow;\n        var targetsToShow = $$.filterTargetsToShow($$.data.targets), tickValues, i, intervalForCulling, xDomainForZoom;\n        var xv = $$.xv.bind($$), cx, cy;\n\n        options = options || {};\n        withY = getOption(options, \"withY\", true);\n        withSubchart = getOption(options, \"withSubchart\", true);\n        withTransition = getOption(options, \"withTransition\", true);\n        withTransform = getOption(options, \"withTransform\", false);\n        withUpdateXDomain = getOption(options, \"withUpdateXDomain\", false);\n        withUpdateOrgXDomain = getOption(options, \"withUpdateOrgXDomain\", false);\n        withTrimXDomain = getOption(options, \"withTrimXDomain\", true);\n        withUpdateXAxis = getOption(options, \"withUpdateXAxis\", withUpdateXDomain);\n        withLegend = getOption(options, \"withLegend\", false);\n        withEventRect = getOption(options, \"withEventRect\", true);\n        withDimension = getOption(options, \"withDimension\", true);\n        withTransitionForExit = getOption(options, \"withTransitionForExit\", withTransition);\n        withTransitionForAxis = getOption(options, \"withTransitionForAxis\", withTransition);\n\n        duration = withTransition ? config.transition_duration : 0;\n        durationForExit = withTransitionForExit ? duration : 0;\n        durationForAxis = withTransitionForAxis ? duration : 0;\n\n        transitions = transitions || $$.axis.generateTransitions(durationForAxis);\n\n        // update legend and transform each g\n        if (withLegend && config.legend_show) {\n            $$.updateLegend($$.mapToIds($$.data.targets), options, transitions);\n        } else if (withDimension) {\n            // need to update dimension (e.g. axis.y.tick.values) because y tick values should change\n            // no need to update axis in it because they will be updated in redraw()\n            $$.updateDimension(true);\n        }\n\n        // MEMO: needed for grids calculation\n        if ($$.isCategorized() && targetsToShow.length === 0) {\n            $$.x.domain([0, $$.axes.x.selectAll('.tick').size()]);\n        }\n\n        if (targetsToShow.length) {\n            $$.updateXDomain(targetsToShow, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain);\n            if (!config.axis_x_tick_values) {\n                tickValues = $$.axis.updateXAxisTickValues(targetsToShow);\n            }\n        } else {\n            $$.xAxis.tickValues([]);\n            $$.subXAxis.tickValues([]);\n        }\n\n        if (config.zoom_rescale && !options.flow) {\n            xDomainForZoom = $$.x.orgDomain();\n        }\n\n        $$.y.domain($$.getYDomain(targetsToShow, 'y', xDomainForZoom));\n        $$.y2.domain($$.getYDomain(targetsToShow, 'y2', xDomainForZoom));\n\n        if (!config.axis_y_tick_values && config.axis_y_tick_count) {\n            $$.yAxis.tickValues($$.axis.generateTickValues($$.y.domain(), config.axis_y_tick_count));\n        }\n        if (!config.axis_y2_tick_values && config.axis_y2_tick_count) {\n            $$.y2Axis.tickValues($$.axis.generateTickValues($$.y2.domain(), config.axis_y2_tick_count));\n        }\n\n        // axes\n        $$.axis.redraw(transitions, hideAxis);\n\n        // Update axis label\n        $$.axis.updateLabels(withTransition);\n\n        // show/hide if manual culling needed\n        if ((withUpdateXDomain || withUpdateXAxis) && targetsToShow.length) {\n            if (config.axis_x_tick_culling && tickValues) {\n                for (i = 1; i < tickValues.length; i++) {\n                    if (tickValues.length / i < config.axis_x_tick_culling_max) {\n                        intervalForCulling = i;\n                        break;\n                    }\n                }\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').each(function (e) {\n                    var index = tickValues.indexOf(e);\n                    if (index >= 0) {\n                        d3.select(this).style('display', index % intervalForCulling ? 'none' : 'block');\n                    }\n                });\n            } else {\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').style('display', 'block');\n            }\n        }\n\n        // setup drawer - MEMO: these must be called after axis updated\n        drawArea = $$.generateDrawArea ? $$.generateDrawArea(areaIndices, false) : undefined;\n        drawBar = $$.generateDrawBar ? $$.generateDrawBar(barIndices) : undefined;\n        drawLine = $$.generateDrawLine ? $$.generateDrawLine(lineIndices, false) : undefined;\n        xForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, true);\n        yForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, false);\n\n        // Update sub domain\n        if (withY) {\n            $$.subY.domain($$.getYDomain(targetsToShow, 'y'));\n            $$.subY2.domain($$.getYDomain(targetsToShow, 'y2'));\n        }\n\n        // xgrid focus\n        $$.updateXgridFocus();\n\n        // Data empty label positioning and text.\n        main.select(\"text.\" + CLASS.text + '.' + CLASS.empty)\n            .attr(\"x\", $$.width / 2)\n            .attr(\"y\", $$.height / 2)\n            .text(config.data_empty_label_text)\n          .transition()\n            .style('opacity', targetsToShow.length ? 0 : 1);\n\n        // grid\n        $$.updateGrid(duration);\n\n        // rect for regions\n        $$.updateRegion(duration);\n\n        // bars\n        $$.updateBar(durationForExit);\n\n        // lines, areas and cricles\n        $$.updateLine(durationForExit);\n        $$.updateArea(durationForExit);\n        $$.updateCircle();\n\n        // text\n        if ($$.hasDataLabel()) {\n            $$.updateText(durationForExit);\n        }\n\n        // title\n        if ($$.redrawTitle) { $$.redrawTitle(); }\n\n        // arc\n        if ($$.redrawArc) { $$.redrawArc(duration, durationForExit, withTransform); }\n\n        // subchart\n        if ($$.redrawSubchart) {\n            $$.redrawSubchart(withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices);\n        }\n\n        // circles for select\n        main.selectAll('.' + CLASS.selectedCircles)\n            .filter($$.isBarType.bind($$))\n            .selectAll('circle')\n            .remove();\n\n        // event rects will redrawn when flow called\n        if (config.interaction_enabled && !options.flow && withEventRect) {\n            $$.redrawEventRect();\n            if ($$.updateZoom) { $$.updateZoom(); }\n        }\n\n        // update circleY based on updated parameters\n        $$.updateCircleY();\n\n        // generate circle x/y functions depending on updated params\n        cx = ($$.config.axis_rotated ? $$.circleY : $$.circleX).bind($$);\n        cy = ($$.config.axis_rotated ? $$.circleX : $$.circleY).bind($$);\n\n        if (options.flow) {\n            flow = $$.generateFlow({\n                targets: targetsToShow,\n                flow: options.flow,\n                duration: options.flow.duration,\n                drawBar: drawBar,\n                drawLine: drawLine,\n                drawArea: drawArea,\n                cx: cx,\n                cy: cy,\n                xv: xv,\n                xForText: xForText,\n                yForText: yForText\n            });\n        }\n\n        if ((duration || flow) && $$.isTabVisible()) { // Only use transition if tab visible. See #938.\n            // transition should be derived from one transition\n            d3.transition().duration(duration).each(function () {\n                var transitionsToWait = [];\n\n                // redraw and gather transitions\n                [\n                    $$.redrawBar(drawBar, true),\n                    $$.redrawLine(drawLine, true),\n                    $$.redrawArea(drawArea, true),\n                    $$.redrawCircle(cx, cy, true),\n                    $$.redrawText(xForText, yForText, options.flow, true),\n                    $$.redrawRegion(true),\n                    $$.redrawGrid(true),\n                ].forEach(function (transitions) {\n                    transitions.forEach(function (transition) {\n                        transitionsToWait.push(transition);\n                    });\n                });\n\n                // Wait for end of transitions to call flow and onrendered callback\n                waitForDraw = $$.generateWait();\n                transitionsToWait.forEach(function (t) {\n                    waitForDraw.add(t);\n                });\n            })\n            .call(waitForDraw, function () {\n                if (flow) {\n                    flow();\n                }\n                if (config.onrendered) {\n                    config.onrendered.call($$);\n                }\n            });\n        }\n        else {\n            $$.redrawBar(drawBar);\n            $$.redrawLine(drawLine);\n            $$.redrawArea(drawArea);\n            $$.redrawCircle(cx, cy);\n            $$.redrawText(xForText, yForText, options.flow);\n            $$.redrawRegion();\n            $$.redrawGrid();\n            if (config.onrendered) {\n                config.onrendered.call($$);\n            }\n        }\n\n        // update fadein condition\n        $$.mapToIds($$.data.targets).forEach(function (id) {\n            $$.withoutFadeIn[id] = true;\n        });\n    };\n\n    c3_chart_internal_fn.updateAndRedraw = function (options) {\n        var $$ = this, config = $$.config, transitions;\n        options = options || {};\n        // same with redraw\n        options.withTransition = getOption(options, \"withTransition\", true);\n        options.withTransform = getOption(options, \"withTransform\", false);\n        options.withLegend = getOption(options, \"withLegend\", false);\n        // NOT same with redraw\n        options.withUpdateXDomain = true;\n        options.withUpdateOrgXDomain = true;\n        options.withTransitionForExit = false;\n        options.withTransitionForTransform = getOption(options, \"withTransitionForTransform\", options.withTransition);\n        // MEMO: this needs to be called before updateLegend and it means this ALWAYS needs to be called)\n        $$.updateSizes();\n        // MEMO: called in updateLegend in redraw if withLegend\n        if (!(options.withLegend && config.legend_show)) {\n            transitions = $$.axis.generateTransitions(options.withTransitionForAxis ? config.transition_duration : 0);\n            // Update scales\n            $$.updateScales();\n            $$.updateSvgSize();\n            // Update g positions\n            $$.transformAll(options.withTransitionForTransform, transitions);\n        }\n        // Draw with new sizes & scales\n        $$.redraw(options, transitions);\n    };\n    c3_chart_internal_fn.redrawWithoutRescale = function () {\n        this.redraw({\n            withY: false,\n            withSubchart: false,\n            withEventRect: false,\n            withTransitionForAxis: false\n        });\n    };\n\n    c3_chart_internal_fn.isTimeSeries = function () {\n        return this.config.axis_x_type === 'timeseries';\n    };\n    c3_chart_internal_fn.isCategorized = function () {\n        return this.config.axis_x_type.indexOf('categor') >= 0;\n    };\n    c3_chart_internal_fn.isCustomX = function () {\n        var $$ = this, config = $$.config;\n        return !$$.isTimeSeries() && (config.data_x || notEmpty(config.data_xs));\n    };\n\n    c3_chart_internal_fn.isTimeSeriesY = function () {\n        return this.config.axis_y_type === 'timeseries';\n    };\n\n    c3_chart_internal_fn.getTranslate = function (target) {\n        var $$ = this, config = $$.config, x, y;\n        if (target === 'main') {\n            x = asHalfPixel($$.margin.left);\n            y = asHalfPixel($$.margin.top);\n        } else if (target === 'context') {\n            x = asHalfPixel($$.margin2.left);\n            y = asHalfPixel($$.margin2.top);\n        } else if (target === 'legend') {\n            x = $$.margin3.left;\n            y = $$.margin3.top;\n        } else if (target === 'x') {\n            x = 0;\n            y = config.axis_rotated ? 0 : $$.height;\n        } else if (target === 'y') {\n            x = 0;\n            y = config.axis_rotated ? $$.height : 0;\n        } else if (target === 'y2') {\n            x = config.axis_rotated ? 0 : $$.width;\n            y = config.axis_rotated ? 1 : 0;\n        } else if (target === 'subx') {\n            x = 0;\n            y = config.axis_rotated ? 0 : $$.height2;\n        } else if (target === 'arc') {\n            x = $$.arcWidth / 2;\n            y = $$.arcHeight / 2;\n        }\n        return \"translate(\" + x + \",\" + y + \")\";\n    };\n    c3_chart_internal_fn.initialOpacity = function (d) {\n        return d.value !== null && this.withoutFadeIn[d.id] ? 1 : 0;\n    };\n    c3_chart_internal_fn.initialOpacityForCircle = function (d) {\n        return d.value !== null && this.withoutFadeIn[d.id] ? this.opacityForCircle(d) : 0;\n    };\n    c3_chart_internal_fn.opacityForCircle = function (d) {\n        var opacity = this.config.point_show ? 1 : 0;\n        return isValue(d.value) ? (this.isScatterType(d) ? 0.5 : opacity) : 0;\n    };\n    c3_chart_internal_fn.opacityForText = function () {\n        return this.hasDataLabel() ? 1 : 0;\n    };\n    c3_chart_internal_fn.xx = function (d) {\n        return d ? this.x(d.x) : null;\n    };\n    c3_chart_internal_fn.xv = function (d) {\n        var $$ = this, value = d.value;\n        if ($$.isTimeSeries()) {\n            value = $$.parseDate(d.value);\n        }\n        else if ($$.isCategorized() && typeof d.value === 'string') {\n            value = $$.config.axis_x_categories.indexOf(d.value);\n        }\n        return Math.ceil($$.x(value));\n    };\n    c3_chart_internal_fn.yv = function (d) {\n        var $$ = this,\n            yScale = d.axis && d.axis === 'y2' ? $$.y2 : $$.y;\n        return Math.ceil(yScale(d.value));\n    };\n    c3_chart_internal_fn.subxx = function (d) {\n        return d ? this.subX(d.x) : null;\n    };\n\n    c3_chart_internal_fn.transformMain = function (withTransition, transitions) {\n        var $$ = this,\n            xAxis, yAxis, y2Axis;\n        if (transitions && transitions.axisX) {\n            xAxis = transitions.axisX;\n        } else {\n            xAxis  = $$.main.select('.' + CLASS.axisX);\n            if (withTransition) { xAxis = xAxis.transition(); }\n        }\n        if (transitions && transitions.axisY) {\n            yAxis = transitions.axisY;\n        } else {\n            yAxis = $$.main.select('.' + CLASS.axisY);\n            if (withTransition) { yAxis = yAxis.transition(); }\n        }\n        if (transitions && transitions.axisY2) {\n            y2Axis = transitions.axisY2;\n        } else {\n            y2Axis = $$.main.select('.' + CLASS.axisY2);\n            if (withTransition) { y2Axis = y2Axis.transition(); }\n        }\n        (withTransition ? $$.main.transition() : $$.main).attr(\"transform\", $$.getTranslate('main'));\n        xAxis.attr(\"transform\", $$.getTranslate('x'));\n        yAxis.attr(\"transform\", $$.getTranslate('y'));\n        y2Axis.attr(\"transform\", $$.getTranslate('y2'));\n        $$.main.select('.' + CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n    };\n    c3_chart_internal_fn.transformAll = function (withTransition, transitions) {\n        var $$ = this;\n        $$.transformMain(withTransition, transitions);\n        if ($$.config.subchart_show) { $$.transformContext(withTransition, transitions); }\n        if ($$.legend) { $$.transformLegend(withTransition); }\n    };\n\n    c3_chart_internal_fn.updateSvgSize = function () {\n        var $$ = this,\n            brush = $$.svg.select(\".c3-brush .background\");\n        $$.svg.attr('width', $$.currentWidth).attr('height', $$.currentHeight);\n        $$.svg.selectAll(['#' + $$.clipId, '#' + $$.clipIdForGrid]).select('rect')\n            .attr('width', $$.width)\n            .attr('height', $$.height);\n        $$.svg.select('#' + $$.clipIdForXAxis).select('rect')\n            .attr('x', $$.getXAxisClipX.bind($$))\n            .attr('y', $$.getXAxisClipY.bind($$))\n            .attr('width', $$.getXAxisClipWidth.bind($$))\n            .attr('height', $$.getXAxisClipHeight.bind($$));\n        $$.svg.select('#' + $$.clipIdForYAxis).select('rect')\n            .attr('x', $$.getYAxisClipX.bind($$))\n            .attr('y', $$.getYAxisClipY.bind($$))\n            .attr('width', $$.getYAxisClipWidth.bind($$))\n            .attr('height', $$.getYAxisClipHeight.bind($$));\n        $$.svg.select('#' + $$.clipIdForSubchart).select('rect')\n            .attr('width', $$.width)\n            .attr('height', brush.size() ? brush.attr('height') : 0);\n        $$.svg.select('.' + CLASS.zoomRect)\n            .attr('width', $$.width)\n            .attr('height', $$.height);\n        // MEMO: parent div's height will be bigger than svg when <!DOCTYPE html>\n        $$.selectChart.style('max-height', $$.currentHeight + \"px\");\n    };\n\n\n    c3_chart_internal_fn.updateDimension = function (withoutAxis) {\n        var $$ = this;\n        if (!withoutAxis) {\n            if ($$.config.axis_rotated) {\n                $$.axes.x.call($$.xAxis);\n                $$.axes.subx.call($$.subXAxis);\n            } else {\n                $$.axes.y.call($$.yAxis);\n                $$.axes.y2.call($$.y2Axis);\n            }\n        }\n        $$.updateSizes();\n        $$.updateScales();\n        $$.updateSvgSize();\n        $$.transformAll(false);\n    };\n\n    c3_chart_internal_fn.observeInserted = function (selection) {\n        var $$ = this, observer;\n        if (typeof MutationObserver === 'undefined') {\n            window.console.error(\"MutationObserver not defined.\");\n            return;\n        }\n        observer= new MutationObserver(function (mutations) {\n            mutations.forEach(function (mutation) {\n                if (mutation.type === 'childList' && mutation.previousSibling) {\n                    observer.disconnect();\n                    // need to wait for completion of load because size calculation requires the actual sizes determined after that completion\n                    $$.intervalForObserveInserted = window.setInterval(function () {\n                        // parentNode will NOT be null when completed\n                        if (selection.node().parentNode) {\n                            window.clearInterval($$.intervalForObserveInserted);\n                            $$.updateDimension();\n                            if ($$.brush) { $$.brush.update(); }\n                            $$.config.oninit.call($$);\n                            $$.redraw({\n                                withTransform: true,\n                                withUpdateXDomain: true,\n                                withUpdateOrgXDomain: true,\n                                withTransition: false,\n                                withTransitionForTransform: false,\n                                withLegend: true\n                            });\n                            selection.transition().style('opacity', 1);\n                        }\n                    }, 10);\n                }\n            });\n        });\n        observer.observe(selection.node(), {attributes: true, childList: true, characterData: true});\n    };\n\n    c3_chart_internal_fn.bindResize = function () {\n        var $$ = this, config = $$.config;\n\n        $$.resizeFunction = $$.generateResize();\n\n        $$.resizeFunction.add(function () {\n            config.onresize.call($$);\n        });\n        if (config.resize_auto) {\n            $$.resizeFunction.add(function () {\n                if ($$.resizeTimeout !== undefined) {\n                    window.clearTimeout($$.resizeTimeout);\n                }\n                $$.resizeTimeout = window.setTimeout(function () {\n                    delete $$.resizeTimeout;\n                    $$.api.flush();\n                }, 100);\n            });\n        }\n        $$.resizeFunction.add(function () {\n            config.onresized.call($$);\n        });\n\n        if (window.attachEvent) {\n            window.attachEvent('onresize', $$.resizeFunction);\n        } else if (window.addEventListener) {\n            window.addEventListener('resize', $$.resizeFunction, false);\n        } else {\n            // fallback to this, if this is a very old browser\n            var wrapper = window.onresize;\n            if (!wrapper) {\n                // create a wrapper that will call all charts\n                wrapper = $$.generateResize();\n            } else if (!wrapper.add || !wrapper.remove) {\n                // there is already a handler registered, make sure we call it too\n                wrapper = $$.generateResize();\n                wrapper.add(window.onresize);\n            }\n            // add this graph to the wrapper, we will be removed if the user calls destroy\n            wrapper.add($$.resizeFunction);\n            window.onresize = wrapper;\n        }\n    };\n\n    c3_chart_internal_fn.generateResize = function () {\n        var resizeFunctions = [];\n        function callResizeFunctions() {\n            resizeFunctions.forEach(function (f) {\n                f();\n            });\n        }\n        callResizeFunctions.add = function (f) {\n            resizeFunctions.push(f);\n        };\n        callResizeFunctions.remove = function (f) {\n            for (var i = 0; i < resizeFunctions.length; i++) {\n                if (resizeFunctions[i] === f) {\n                    resizeFunctions.splice(i, 1);\n                    break;\n                }\n            }\n        };\n        return callResizeFunctions;\n    };\n\n    c3_chart_internal_fn.endall = function (transition, callback) {\n        var n = 0;\n        transition\n            .each(function () { ++n; })\n            .each(\"end\", function () {\n                if (!--n) { callback.apply(this, arguments); }\n            });\n    };\n    c3_chart_internal_fn.generateWait = function () {\n        var transitionsToWait = [],\n            f = function (transition, callback) {\n                var timer = setInterval(function () {\n                    var done = 0;\n                    transitionsToWait.forEach(function (t) {\n                        if (t.empty()) {\n                            done += 1;\n                            return;\n                        }\n                        try {\n                            t.transition();\n                        } catch (e) {\n                            done += 1;\n                        }\n                    });\n                    if (done === transitionsToWait.length) {\n                        clearInterval(timer);\n                        if (callback) { callback(); }\n                    }\n                }, 10);\n            };\n        f.add = function (transition) {\n            transitionsToWait.push(transition);\n        };\n        return f;\n    };\n\n    c3_chart_internal_fn.parseDate = function (date) {\n        var $$ = this, parsedDate;\n        if (date instanceof Date) {\n            parsedDate = date;\n        } else if (typeof date === 'string') {\n            parsedDate = $$.dataTimeFormat($$.config.data_xFormat).parse(date);\n        } else if (typeof date === 'number' && !isNaN(date)) {\n            parsedDate = new Date(+date);\n        }\n        if (!parsedDate || isNaN(+parsedDate)) {\n            window.console.error(\"Failed to parse x '\" + date + \"' to Date object\");\n        }\n        return parsedDate;\n    };\n\n    c3_chart_internal_fn.isTabVisible = function () {\n        var hidden;\n        if (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support\n            hidden = \"hidden\";\n        } else if (typeof document.mozHidden !== \"undefined\") {\n            hidden = \"mozHidden\";\n        } else if (typeof document.msHidden !== \"undefined\") {\n            hidden = \"msHidden\";\n        } else if (typeof document.webkitHidden !== \"undefined\") {\n            hidden = \"webkitHidden\";\n        }\n\n        return document[hidden] ? false : true;\n    };\n\n    c3_chart_internal_fn.getDefaultConfig = function () {\n        var config = {\n            bindto: '#chart',\n            svg_classname: undefined,\n            size_width: undefined,\n            size_height: undefined,\n            padding_left: undefined,\n            padding_right: undefined,\n            padding_top: undefined,\n            padding_bottom: undefined,\n            resize_auto: true,\n            zoom_enabled: false,\n            zoom_extent: undefined,\n            zoom_privileged: false,\n            zoom_rescale: false,\n            zoom_onzoom: function () {},\n            zoom_onzoomstart: function () {},\n            zoom_onzoomend: function () {},\n            zoom_x_min: undefined,\n            zoom_x_max: undefined,\n            interaction_brighten: true,\n            interaction_enabled: true,\n            onmouseover: function () {},\n            onmouseout: function () {},\n            onresize: function () {},\n            onresized: function () {},\n            oninit: function () {},\n            onrendered: function () {},\n            transition_duration: 350,\n            data_x: undefined,\n            data_xs: {},\n            data_xFormat: '%Y-%m-%d',\n            data_xLocaltime: true,\n            data_xSort: true,\n            data_idConverter: function (id) { return id; },\n            data_names: {},\n            data_classes: {},\n            data_groups: [],\n            data_axes: {},\n            data_type: undefined,\n            data_types: {},\n            data_labels: {},\n            data_order: 'desc',\n            data_regions: {},\n            data_color: undefined,\n            data_colors: {},\n            data_hide: false,\n            data_filter: undefined,\n            data_selection_enabled: false,\n            data_selection_grouped: false,\n            data_selection_isselectable: function () { return true; },\n            data_selection_multiple: true,\n            data_selection_draggable: false,\n            data_onclick: function () {},\n            data_onmouseover: function () {},\n            data_onmouseout: function () {},\n            data_onselected: function () {},\n            data_onunselected: function () {},\n            data_url: undefined,\n            data_headers: undefined,\n            data_json: undefined,\n            data_rows: undefined,\n            data_columns: undefined,\n            data_mimeType: undefined,\n            data_keys: undefined,\n            // configuration for no plot-able data supplied.\n            data_empty_label_text: \"\",\n            // subchart\n            subchart_show: false,\n            subchart_size_height: 60,\n            subchart_axis_x_show: true,\n            subchart_onbrush: function () {},\n            // color\n            color_pattern: [],\n            color_threshold: {},\n            // legend\n            legend_show: true,\n            legend_hide: false,\n            legend_position: 'bottom',\n            legend_inset_anchor: 'top-left',\n            legend_inset_x: 10,\n            legend_inset_y: 0,\n            legend_inset_step: undefined,\n            legend_item_onclick: undefined,\n            legend_item_onmouseover: undefined,\n            legend_item_onmouseout: undefined,\n            legend_equally: false,\n            legend_padding: 0,\n            legend_item_tile_width: 10,\n            legend_item_tile_height: 10,\n            // axis\n            axis_rotated: false,\n            axis_x_show: true,\n            axis_x_type: 'indexed',\n            axis_x_localtime: true,\n            axis_x_categories: [],\n            axis_x_tick_centered: false,\n            axis_x_tick_format: undefined,\n            axis_x_tick_culling: {},\n            axis_x_tick_culling_max: 10,\n            axis_x_tick_count: undefined,\n            axis_x_tick_fit: true,\n            axis_x_tick_values: null,\n            axis_x_tick_rotate: 0,\n            axis_x_tick_outer: true,\n            axis_x_tick_multiline: true,\n            axis_x_tick_width: null,\n            axis_x_max: undefined,\n            axis_x_min: undefined,\n            axis_x_padding: {},\n            axis_x_height: undefined,\n            axis_x_extent: undefined,\n            axis_x_label: {},\n            axis_y_show: true,\n            axis_y_type: undefined,\n            axis_y_max: undefined,\n            axis_y_min: undefined,\n            axis_y_inverted: false,\n            axis_y_center: undefined,\n            axis_y_inner: undefined,\n            axis_y_label: {},\n            axis_y_tick_format: undefined,\n            axis_y_tick_outer: true,\n            axis_y_tick_values: null,        \n            axis_y_tick_rotate: 0,\n            axis_y_tick_count: undefined,\n            axis_y_tick_time_value: undefined,\n            axis_y_tick_time_interval: undefined,\n            axis_y_padding: {},\n            axis_y_default: undefined,\n            axis_y2_show: false,\n            axis_y2_max: undefined,\n            axis_y2_min: undefined,\n            axis_y2_inverted: false,\n            axis_y2_center: undefined,\n            axis_y2_inner: undefined,\n            axis_y2_label: {},\n            axis_y2_tick_format: undefined,\n            axis_y2_tick_outer: true,\n            axis_y2_tick_values: null,\n            axis_y2_tick_count: undefined,\n            axis_y2_padding: {},\n            axis_y2_default: undefined,\n            // grid\n            grid_x_show: false,\n            grid_x_type: 'tick',\n            grid_x_lines: [],\n            grid_y_show: false,\n            // not used\n            // grid_y_type: 'tick',\n            grid_y_lines: [],\n            grid_y_ticks: 10,\n            grid_focus_show: true,\n            grid_lines_front: true,\n            // point - point of each data\n            point_show: true,\n            point_r: 2.5,\n            point_sensitivity: 10,\n            point_focus_expand_enabled: true,\n            point_focus_expand_r: undefined,\n            point_select_r: undefined,\n            // line\n            line_connectNull: false,\n            line_step_type: 'step',\n            // bar\n            bar_width: undefined,\n            bar_width_ratio: 0.6,\n            bar_width_max: undefined,\n            bar_zerobased: true,\n            // area\n            area_zerobased: true,\n            area_above: false,\n            // pie\n            pie_label_show: true,\n            pie_label_format: undefined,\n            pie_label_threshold: 0.05,\n            pie_label_ratio: undefined,\n            pie_expand: {},\n            pie_expand_duration: 50,\n            // gauge\n            gauge_fullCircle: false,\n            gauge_label_show: true,\n            gauge_label_format: undefined,\n            gauge_min: 0,\n            gauge_max: 100,\n            gauge_startingAngle: -1 * Math.PI/2,\n            gauge_units: undefined,\n            gauge_width: undefined,\n            gauge_expand: {},\n            gauge_expand_duration: 50,\n            // donut\n            donut_label_show: true,\n            donut_label_format: undefined,\n            donut_label_threshold: 0.05,\n            donut_label_ratio: undefined,\n            donut_width: undefined,\n            donut_title: \"\",\n            donut_expand: {},\n            donut_expand_duration: 50,\n            // spline\n            spline_interpolation_type: 'cardinal',\n            // region - region to change style\n            regions: [],\n            // tooltip - show when mouseover on each data\n            tooltip_show: true,\n            tooltip_grouped: true,\n            tooltip_format_title: undefined,\n            tooltip_format_name: undefined,\n            tooltip_format_value: undefined,\n            tooltip_position: undefined,\n            tooltip_contents: function (d, defaultTitleFormat, defaultValueFormat, color) {\n                return this.getTooltipContent ? this.getTooltipContent(d, defaultTitleFormat, defaultValueFormat, color) : '';\n            },\n            tooltip_init_show: false,\n            tooltip_init_x: 0,\n            tooltip_init_position: {top: '0px', left: '50px'},\n            tooltip_onshow: function () {},\n            tooltip_onhide: function () {},\n            // title\n            title_text: undefined,\n            title_padding: {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            },\n            title_position: 'top-center',\n        };\n\n        Object.keys(this.additionalConfig).forEach(function (key) {\n            config[key] = this.additionalConfig[key];\n        }, this);\n\n        return config;\n    };\n    c3_chart_internal_fn.additionalConfig = {};\n\n    c3_chart_internal_fn.loadConfig = function (config) {\n        var this_config = this.config, target, keys, read;\n        function find() {\n            var key = keys.shift();\n    //        console.log(\"key =>\", key, \", target =>\", target);\n            if (key && target && typeof target === 'object' && key in target) {\n                target = target[key];\n                return find();\n            }\n            else if (!key) {\n                return target;\n            }\n            else {\n                return undefined;\n            }\n        }\n        Object.keys(this_config).forEach(function (key) {\n            target = config;\n            keys = key.split('_');\n            read = find();\n    //        console.log(\"CONFIG : \", key, read);\n            if (isDefined(read)) {\n                this_config[key] = read;\n            }\n        });\n    };\n\n    c3_chart_internal_fn.getScale = function (min, max, forTimeseries) {\n        return (forTimeseries ? this.d3.time.scale() : this.d3.scale.linear()).range([min, max]);\n    };\n    c3_chart_internal_fn.getX = function (min, max, domain, offset) {\n        var $$ = this,\n            scale = $$.getScale(min, max, $$.isTimeSeries()),\n            _scale = domain ? scale.domain(domain) : scale, key;\n        // Define customized scale if categorized axis\n        if ($$.isCategorized()) {\n            offset = offset || function () { return 0; };\n            scale = function (d, raw) {\n                var v = _scale(d) + offset(d);\n                return raw ? v : Math.ceil(v);\n            };\n        } else {\n            scale = function (d, raw) {\n                var v = _scale(d);\n                return raw ? v : Math.ceil(v);\n            };\n        }\n        // define functions\n        for (key in _scale) {\n            scale[key] = _scale[key];\n        }\n        scale.orgDomain = function () {\n            return _scale.domain();\n        };\n        // define custom domain() for categorized axis\n        if ($$.isCategorized()) {\n            scale.domain = function (domain) {\n                if (!arguments.length) {\n                    domain = this.orgDomain();\n                    return [domain[0], domain[1] + 1];\n                }\n                _scale.domain(domain);\n                return scale;\n            };\n        }\n        return scale;\n    };\n    c3_chart_internal_fn.getY = function (min, max, domain) {\n        var scale = this.getScale(min, max, this.isTimeSeriesY());\n        if (domain) { scale.domain(domain); }\n        return scale;\n    };\n    c3_chart_internal_fn.getYScale = function (id) {\n        return this.axis.getId(id) === 'y2' ? this.y2 : this.y;\n    };\n    c3_chart_internal_fn.getSubYScale = function (id) {\n        return this.axis.getId(id) === 'y2' ? this.subY2 : this.subY;\n    };\n    c3_chart_internal_fn.updateScales = function () {\n        var $$ = this, config = $$.config,\n            forInit = !$$.x;\n        // update edges\n        $$.xMin = config.axis_rotated ? 1 : 0;\n        $$.xMax = config.axis_rotated ? $$.height : $$.width;\n        $$.yMin = config.axis_rotated ? 0 : $$.height;\n        $$.yMax = config.axis_rotated ? $$.width : 1;\n        $$.subXMin = $$.xMin;\n        $$.subXMax = $$.xMax;\n        $$.subYMin = config.axis_rotated ? 0 : $$.height2;\n        $$.subYMax = config.axis_rotated ? $$.width2 : 1;\n        // update scales\n        $$.x = $$.getX($$.xMin, $$.xMax, forInit ? undefined : $$.x.orgDomain(), function () { return $$.xAxis.tickOffset(); });\n        $$.y = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y_default : $$.y.domain());\n        $$.y2 = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y2_default : $$.y2.domain());\n        $$.subX = $$.getX($$.xMin, $$.xMax, $$.orgXDomain, function (d) { return d % 1 ? 0 : $$.subXAxis.tickOffset(); });\n        $$.subY = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y_default : $$.subY.domain());\n        $$.subY2 = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y2_default : $$.subY2.domain());\n        // update axes\n        $$.xAxisTickFormat = $$.axis.getXAxisTickFormat();\n        $$.xAxisTickValues = $$.axis.getXAxisTickValues();\n        $$.yAxisTickValues = $$.axis.getYAxisTickValues();\n        $$.y2AxisTickValues = $$.axis.getY2AxisTickValues();\n\n        $$.xAxis = $$.axis.getXAxis($$.x, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n        $$.subXAxis = $$.axis.getXAxis($$.subX, $$.subXOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n        $$.yAxis = $$.axis.getYAxis($$.y, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, config.axis_y_tick_outer);\n        $$.y2Axis = $$.axis.getYAxis($$.y2, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, config.axis_y2_tick_outer);\n\n        // Set initialized scales to brush and zoom\n        if (!forInit) {\n            if ($$.brush) { $$.brush.scale($$.subX); }\n            if (config.zoom_enabled) { $$.zoom.scale($$.x); }\n        }\n        // update for arc\n        if ($$.updateArc) { $$.updateArc(); }\n    };\n\n    c3_chart_internal_fn.getYDomainMin = function (targets) {\n        var $$ = this, config = $$.config,\n            ids = $$.mapToIds(targets), ys = $$.getValuesAsIdKeyed(targets),\n            j, k, baseId, idsInGroup, id, hasNegativeValue;\n        if (config.data_groups.length > 0) {\n            hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n            for (j = 0; j < config.data_groups.length; j++) {\n                // Determine baseId\n                idsInGroup = config.data_groups[j].filter(function (id) { return ids.indexOf(id) >= 0; });\n                if (idsInGroup.length === 0) { continue; }\n                baseId = idsInGroup[0];\n                // Consider negative values\n                if (hasNegativeValue && ys[baseId]) {\n                    ys[baseId].forEach(function (v, i) {\n                        ys[baseId][i] = v < 0 ? v : 0;\n                    });\n                }\n                // Compute min\n                for (k = 1; k < idsInGroup.length; k++) {\n                    id = idsInGroup[k];\n                    if (! ys[id]) { continue; }\n                    ys[id].forEach(function (v, i) {\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasNegativeValue && +v > 0)) {\n                            ys[baseId][i] += +v;\n                        }\n                    });\n                }\n            }\n        }\n        return $$.d3.min(Object.keys(ys).map(function (key) { return $$.d3.min(ys[key]); }));\n    };\n    c3_chart_internal_fn.getYDomainMax = function (targets) {\n        var $$ = this, config = $$.config,\n            ids = $$.mapToIds(targets), ys = $$.getValuesAsIdKeyed(targets),\n            j, k, baseId, idsInGroup, id, hasPositiveValue;\n        if (config.data_groups.length > 0) {\n            hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n            for (j = 0; j < config.data_groups.length; j++) {\n                // Determine baseId\n                idsInGroup = config.data_groups[j].filter(function (id) { return ids.indexOf(id) >= 0; });\n                if (idsInGroup.length === 0) { continue; }\n                baseId = idsInGroup[0];\n                // Consider positive values\n                if (hasPositiveValue && ys[baseId]) {\n                    ys[baseId].forEach(function (v, i) {\n                        ys[baseId][i] = v > 0 ? v : 0;\n                    });\n                }\n                // Compute max\n                for (k = 1; k < idsInGroup.length; k++) {\n                    id = idsInGroup[k];\n                    if (! ys[id]) { continue; }\n                    ys[id].forEach(function (v, i) {\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasPositiveValue && +v < 0)) {\n                            ys[baseId][i] += +v;\n                        }\n                    });\n                }\n            }\n        }\n        return $$.d3.max(Object.keys(ys).map(function (key) { return $$.d3.max(ys[key]); }));\n    };\n    c3_chart_internal_fn.getYDomain = function (targets, axisId, xDomain) {\n        var $$ = this, config = $$.config,\n            targetsByAxisId = targets.filter(function (t) { return $$.axis.getId(t.id) === axisId; }),\n            yTargets = xDomain ? $$.filterByXDomain(targetsByAxisId, xDomain) : targetsByAxisId,\n            yMin = axisId === 'y2' ? config.axis_y2_min : config.axis_y_min,\n            yMax = axisId === 'y2' ? config.axis_y2_max : config.axis_y_max,\n            yDomainMin = $$.getYDomainMin(yTargets),\n            yDomainMax = $$.getYDomainMax(yTargets),\n            domain, domainLength, padding, padding_top, padding_bottom,\n            center = axisId === 'y2' ? config.axis_y2_center : config.axis_y_center,\n            yDomainAbs, lengths, diff, ratio, isAllPositive, isAllNegative,\n            isZeroBased = ($$.hasType('bar', yTargets) && config.bar_zerobased) || ($$.hasType('area', yTargets) && config.area_zerobased),\n            isInverted = axisId === 'y2' ? config.axis_y2_inverted : config.axis_y_inverted,\n            showHorizontalDataLabel = $$.hasDataLabel() && config.axis_rotated,\n            showVerticalDataLabel = $$.hasDataLabel() && !config.axis_rotated;\n\n        // MEMO: avoid inverting domain unexpectedly\n        yDomainMin = isValue(yMin) ? yMin : isValue(yMax) ? (yDomainMin < yMax ? yDomainMin : yMax - 10) : yDomainMin;\n        yDomainMax = isValue(yMax) ? yMax : isValue(yMin) ? (yMin < yDomainMax ? yDomainMax : yMin + 10) : yDomainMax;\n\n        if (yTargets.length === 0) { // use current domain if target of axisId is none\n            return axisId === 'y2' ? $$.y2.domain() : $$.y.domain();\n        }\n        if (isNaN(yDomainMin)) { // set minimum to zero when not number\n            yDomainMin = 0;\n        }\n        if (isNaN(yDomainMax)) { // set maximum to have same value as yDomainMin\n            yDomainMax = yDomainMin;\n        }\n        if (yDomainMin === yDomainMax) {\n            yDomainMin < 0 ? yDomainMax = 0 : yDomainMin = 0;\n        }\n        isAllPositive = yDomainMin >= 0 && yDomainMax >= 0;\n        isAllNegative = yDomainMin <= 0 && yDomainMax <= 0;\n\n        // Cancel zerobased if axis_*_min / axis_*_max specified\n        if ((isValue(yMin) && isAllPositive) || (isValue(yMax) && isAllNegative)) {\n            isZeroBased = false;\n        }\n\n        // Bar/Area chart should be 0-based if all positive|negative\n        if (isZeroBased) {\n            if (isAllPositive) { yDomainMin = 0; }\n            if (isAllNegative) { yDomainMax = 0; }\n        }\n\n        domainLength = Math.abs(yDomainMax - yDomainMin);\n        padding = padding_top = padding_bottom = domainLength * 0.1;\n\n        if (typeof center !== 'undefined') {\n            yDomainAbs = Math.max(Math.abs(yDomainMin), Math.abs(yDomainMax));\n            yDomainMax = center + yDomainAbs;\n            yDomainMin = center - yDomainAbs;\n        }\n        // add padding for data label\n        if (showHorizontalDataLabel) {\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'width');\n            diff = diffDomain($$.y.range());\n            ratio = [lengths[0] / diff, lengths[1] / diff];\n            padding_top += domainLength * (ratio[1] / (1 - ratio[0] - ratio[1]));\n            padding_bottom += domainLength * (ratio[0] / (1 - ratio[0] - ratio[1]));\n        } else if (showVerticalDataLabel) {\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'height');\n            padding_top += $$.axis.convertPixelsToAxisPadding(lengths[1], domainLength);\n            padding_bottom += $$.axis.convertPixelsToAxisPadding(lengths[0], domainLength);\n        }\n        if (axisId === 'y' && notEmpty(config.axis_y_padding)) {\n            padding_top = $$.axis.getPadding(config.axis_y_padding, 'top', padding_top, domainLength);\n            padding_bottom = $$.axis.getPadding(config.axis_y_padding, 'bottom', padding_bottom, domainLength);\n        }\n        if (axisId === 'y2' && notEmpty(config.axis_y2_padding)) {\n            padding_top = $$.axis.getPadding(config.axis_y2_padding, 'top', padding_top, domainLength);\n            padding_bottom = $$.axis.getPadding(config.axis_y2_padding, 'bottom', padding_bottom, domainLength);\n        }\n        // Bar/Area chart should be 0-based if all positive|negative\n        if (isZeroBased) {\n            if (isAllPositive) { padding_bottom = yDomainMin; }\n            if (isAllNegative) { padding_top = -yDomainMax; }\n        }\n        domain = [yDomainMin - padding_bottom, yDomainMax + padding_top];\n        return isInverted ? domain.reverse() : domain;\n    };\n    c3_chart_internal_fn.getXDomainMin = function (targets) {\n        var $$ = this, config = $$.config;\n        return isDefined(config.axis_x_min) ?\n            ($$.isTimeSeries() ? this.parseDate(config.axis_x_min) : config.axis_x_min) :\n        $$.d3.min(targets, function (t) { return $$.d3.min(t.values, function (v) { return v.x; }); });\n    };\n    c3_chart_internal_fn.getXDomainMax = function (targets) {\n        var $$ = this, config = $$.config;\n        return isDefined(config.axis_x_max) ?\n            ($$.isTimeSeries() ? this.parseDate(config.axis_x_max) : config.axis_x_max) :\n        $$.d3.max(targets, function (t) { return $$.d3.max(t.values, function (v) { return v.x; }); });\n    };\n    c3_chart_internal_fn.getXDomainPadding = function (domain) {\n        var $$ = this, config = $$.config,\n            diff = domain[1] - domain[0],\n            maxDataCount, padding, paddingLeft, paddingRight;\n        if ($$.isCategorized()) {\n            padding = 0;\n        } else if ($$.hasType('bar')) {\n            maxDataCount = $$.getMaxDataCount();\n            padding = maxDataCount > 1 ? (diff / (maxDataCount - 1)) / 2 : 0.5;\n        } else {\n            padding = diff * 0.01;\n        }\n        if (typeof config.axis_x_padding === 'object' && notEmpty(config.axis_x_padding)) {\n            paddingLeft = isValue(config.axis_x_padding.left) ? config.axis_x_padding.left : padding;\n            paddingRight = isValue(config.axis_x_padding.right) ? config.axis_x_padding.right : padding;\n        } else if (typeof config.axis_x_padding === 'number') {\n            paddingLeft = paddingRight = config.axis_x_padding;\n        } else {\n            paddingLeft = paddingRight = padding;\n        }\n        return {left: paddingLeft, right: paddingRight};\n    };\n    c3_chart_internal_fn.getXDomain = function (targets) {\n        var $$ = this,\n            xDomain = [$$.getXDomainMin(targets), $$.getXDomainMax(targets)],\n            firstX = xDomain[0], lastX = xDomain[1],\n            padding = $$.getXDomainPadding(xDomain),\n            min = 0, max = 0;\n        // show center of x domain if min and max are the same\n        if ((firstX - lastX) === 0 && !$$.isCategorized()) {\n            if ($$.isTimeSeries()) {\n                firstX = new Date(firstX.getTime() * 0.5);\n                lastX = new Date(lastX.getTime() * 1.5);\n            } else {\n                firstX = firstX === 0 ? 1 : (firstX * 0.5);\n                lastX = lastX === 0 ? -1 : (lastX * 1.5);\n            }\n        }\n        if (firstX || firstX === 0) {\n            min = $$.isTimeSeries() ? new Date(firstX.getTime() - padding.left) : firstX - padding.left;\n        }\n        if (lastX || lastX === 0) {\n            max = $$.isTimeSeries() ? new Date(lastX.getTime() + padding.right) : lastX + padding.right;\n        }\n        return [min, max];\n    };\n    c3_chart_internal_fn.updateXDomain = function (targets, withUpdateXDomain, withUpdateOrgXDomain, withTrim, domain) {\n        var $$ = this, config = $$.config;\n\n        if (withUpdateOrgXDomain) {\n            $$.x.domain(domain ? domain : $$.d3.extent($$.getXDomain(targets)));\n            $$.orgXDomain = $$.x.domain();\n            if (config.zoom_enabled) { $$.zoom.scale($$.x).updateScaleExtent(); }\n            $$.subX.domain($$.x.domain());\n            if ($$.brush) { $$.brush.scale($$.subX); }\n        }\n        if (withUpdateXDomain) {\n            $$.x.domain(domain ? domain : (!$$.brush || $$.brush.empty()) ? $$.orgXDomain : $$.brush.extent());\n            if (config.zoom_enabled) { $$.zoom.scale($$.x).updateScaleExtent(); }\n        }\n\n        // Trim domain when too big by zoom mousemove event\n        if (withTrim) { $$.x.domain($$.trimXDomain($$.x.orgDomain())); }\n\n        return $$.x.domain();\n    };\n    c3_chart_internal_fn.trimXDomain = function (domain) {\n        var zoomDomain = this.getZoomDomain(),\n            min = zoomDomain[0], max = zoomDomain[1];\n        if (domain[0] <= min) {\n            domain[1] = +domain[1] + (min - domain[0]);\n            domain[0] = min;\n        }\n        if (max <= domain[1]) {\n            domain[0] = +domain[0] - (domain[1] - max);\n            domain[1] = max;\n        }\n        return domain;\n    };\n\n    c3_chart_internal_fn.isX = function (key) {\n        var $$ = this, config = $$.config;\n        return (config.data_x && key === config.data_x) || (notEmpty(config.data_xs) && hasValue(config.data_xs, key));\n    };\n    c3_chart_internal_fn.isNotX = function (key) {\n        return !this.isX(key);\n    };\n    c3_chart_internal_fn.getXKey = function (id) {\n        var $$ = this, config = $$.config;\n        return config.data_x ? config.data_x : notEmpty(config.data_xs) ? config.data_xs[id] : null;\n    };\n    c3_chart_internal_fn.getXValuesOfXKey = function (key, targets) {\n        var $$ = this,\n            xValues, ids = targets && notEmpty(targets) ? $$.mapToIds(targets) : [];\n        ids.forEach(function (id) {\n            if ($$.getXKey(id) === key) {\n                xValues = $$.data.xs[id];\n            }\n        });\n        return xValues;\n    };\n    c3_chart_internal_fn.getIndexByX = function (x) {\n        var $$ = this,\n            data = $$.filterByX($$.data.targets, x);\n        return data.length ? data[0].index : null;\n    };\n    c3_chart_internal_fn.getXValue = function (id, i) {\n        var $$ = this;\n        return id in $$.data.xs && $$.data.xs[id] && isValue($$.data.xs[id][i]) ? $$.data.xs[id][i] : i;\n    };\n    c3_chart_internal_fn.getOtherTargetXs = function () {\n        var $$ = this,\n            idsForX = Object.keys($$.data.xs);\n        return idsForX.length ? $$.data.xs[idsForX[0]] : null;\n    };\n    c3_chart_internal_fn.getOtherTargetX = function (index) {\n        var xs = this.getOtherTargetXs();\n        return xs && index < xs.length ? xs[index] : null;\n    };\n    c3_chart_internal_fn.addXs = function (xs) {\n        var $$ = this;\n        Object.keys(xs).forEach(function (id) {\n            $$.config.data_xs[id] = xs[id];\n        });\n    };\n    c3_chart_internal_fn.hasMultipleX = function (xs) {\n        return this.d3.set(Object.keys(xs).map(function (id) { return xs[id]; })).size() > 1;\n    };\n    c3_chart_internal_fn.isMultipleX = function () {\n        return notEmpty(this.config.data_xs) || !this.config.data_xSort || this.hasType('scatter');\n    };\n    c3_chart_internal_fn.addName = function (data) {\n        var $$ = this, name;\n        if (data) {\n            name = $$.config.data_names[data.id];\n            data.name = name !== undefined ? name : data.id;\n        }\n        return data;\n    };\n    c3_chart_internal_fn.getValueOnIndex = function (values, index) {\n        var valueOnIndex = values.filter(function (v) { return v.index === index; });\n        return valueOnIndex.length ? valueOnIndex[0] : null;\n    };\n    c3_chart_internal_fn.updateTargetX = function (targets, x) {\n        var $$ = this;\n        targets.forEach(function (t) {\n            t.values.forEach(function (v, i) {\n                v.x = $$.generateTargetX(x[i], t.id, i);\n            });\n            $$.data.xs[t.id] = x;\n        });\n    };\n    c3_chart_internal_fn.updateTargetXs = function (targets, xs) {\n        var $$ = this;\n        targets.forEach(function (t) {\n            if (xs[t.id]) {\n                $$.updateTargetX([t], xs[t.id]);\n            }\n        });\n    };\n    c3_chart_internal_fn.generateTargetX = function (rawX, id, index) {\n        var $$ = this, x;\n        if ($$.isTimeSeries()) {\n            x = rawX ? $$.parseDate(rawX) : $$.parseDate($$.getXValue(id, index));\n        }\n        else if ($$.isCustomX() && !$$.isCategorized()) {\n            x = isValue(rawX) ? +rawX : $$.getXValue(id, index);\n        }\n        else {\n            x = index;\n        }\n        return x;\n    };\n    c3_chart_internal_fn.cloneTarget = function (target) {\n        return {\n            id : target.id,\n            id_org : target.id_org,\n            values : target.values.map(function (d) {\n                return {x: d.x, value: d.value, id: d.id};\n            })\n        };\n    };\n    c3_chart_internal_fn.updateXs = function () {\n        var $$ = this;\n        if ($$.data.targets.length) {\n            $$.xs = [];\n            $$.data.targets[0].values.forEach(function (v) {\n                $$.xs[v.index] = v.x;\n            });\n        }\n    };\n    c3_chart_internal_fn.getPrevX = function (i) {\n        var x = this.xs[i - 1];\n        return typeof x !== 'undefined' ? x : null;\n    };\n    c3_chart_internal_fn.getNextX = function (i) {\n        var x = this.xs[i + 1];\n        return typeof x !== 'undefined' ? x : null;\n    };\n    c3_chart_internal_fn.getMaxDataCount = function () {\n        var $$ = this;\n        return $$.d3.max($$.data.targets, function (t) { return t.values.length; });\n    };\n    c3_chart_internal_fn.getMaxDataCountTarget = function (targets) {\n        var length = targets.length, max = 0, maxTarget;\n        if (length > 1) {\n            targets.forEach(function (t) {\n                if (t.values.length > max) {\n                    maxTarget = t;\n                    max = t.values.length;\n                }\n            });\n        } else {\n            maxTarget = length ? targets[0] : null;\n        }\n        return maxTarget;\n    };\n    c3_chart_internal_fn.getEdgeX = function (targets) {\n        var $$ = this;\n        return !targets.length ? [0, 0] : [\n            $$.d3.min(targets, function (t) { return t.values[0].x; }),\n            $$.d3.max(targets, function (t) { return t.values[t.values.length - 1].x; })\n        ];\n    };\n    c3_chart_internal_fn.mapToIds = function (targets) {\n        return targets.map(function (d) { return d.id; });\n    };\n    c3_chart_internal_fn.mapToTargetIds = function (ids) {\n        var $$ = this;\n        return ids ? [].concat(ids) : $$.mapToIds($$.data.targets);\n    };\n    c3_chart_internal_fn.hasTarget = function (targets, id) {\n        var ids = this.mapToIds(targets), i;\n        for (i = 0; i < ids.length; i++) {\n            if (ids[i] === id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    c3_chart_internal_fn.isTargetToShow = function (targetId) {\n        return this.hiddenTargetIds.indexOf(targetId) < 0;\n    };\n    c3_chart_internal_fn.isLegendToShow = function (targetId) {\n        return this.hiddenLegendIds.indexOf(targetId) < 0;\n    };\n    c3_chart_internal_fn.filterTargetsToShow = function (targets) {\n        var $$ = this;\n        return targets.filter(function (t) { return $$.isTargetToShow(t.id); });\n    };\n    c3_chart_internal_fn.mapTargetsToUniqueXs = function (targets) {\n        var $$ = this;\n        var xs = $$.d3.set($$.d3.merge(targets.map(function (t) { return t.values.map(function (v) { return +v.x; }); }))).values();\n        xs = $$.isTimeSeries() ? xs.map(function (x) { return new Date(+x); }) : xs.map(function (x) { return +x; });\n        return xs.sort(function (a, b) { return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN; });\n    };\n    c3_chart_internal_fn.addHiddenTargetIds = function (targetIds) {\n        this.hiddenTargetIds = this.hiddenTargetIds.concat(targetIds);\n    };\n    c3_chart_internal_fn.removeHiddenTargetIds = function (targetIds) {\n        this.hiddenTargetIds = this.hiddenTargetIds.filter(function (id) { return targetIds.indexOf(id) < 0; });\n    };\n    c3_chart_internal_fn.addHiddenLegendIds = function (targetIds) {\n        this.hiddenLegendIds = this.hiddenLegendIds.concat(targetIds);\n    };\n    c3_chart_internal_fn.removeHiddenLegendIds = function (targetIds) {\n        this.hiddenLegendIds = this.hiddenLegendIds.filter(function (id) { return targetIds.indexOf(id) < 0; });\n    };\n    c3_chart_internal_fn.getValuesAsIdKeyed = function (targets) {\n        var ys = {};\n        targets.forEach(function (t) {\n            ys[t.id] = [];\n            t.values.forEach(function (v) {\n                ys[t.id].push(v.value);\n            });\n        });\n        return ys;\n    };\n    c3_chart_internal_fn.checkValueInTargets = function (targets, checker) {\n        var ids = Object.keys(targets), i, j, values;\n        for (i = 0; i < ids.length; i++) {\n            values = targets[ids[i]].values;\n            for (j = 0; j < values.length; j++) {\n                if (checker(values[j].value)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    c3_chart_internal_fn.hasNegativeValueInTargets = function (targets) {\n        return this.checkValueInTargets(targets, function (v) { return v < 0; });\n    };\n    c3_chart_internal_fn.hasPositiveValueInTargets = function (targets) {\n        return this.checkValueInTargets(targets, function (v) { return v > 0; });\n    };\n    c3_chart_internal_fn.isOrderDesc = function () {\n        var config = this.config;\n        return typeof(config.data_order) === 'string' && config.data_order.toLowerCase() === 'desc';\n    };\n    c3_chart_internal_fn.isOrderAsc = function () {\n        var config = this.config;\n        return typeof(config.data_order) === 'string' && config.data_order.toLowerCase() === 'asc';\n    };\n    c3_chart_internal_fn.orderTargets = function (targets) {\n        var $$ = this, config = $$.config, orderAsc = $$.isOrderAsc(), orderDesc = $$.isOrderDesc();\n        if (orderAsc || orderDesc) {\n            targets.sort(function (t1, t2) {\n                var reducer = function (p, c) { return p + Math.abs(c.value); };\n                var t1Sum = t1.values.reduce(reducer, 0),\n                    t2Sum = t2.values.reduce(reducer, 0);\n                return orderAsc ? t2Sum - t1Sum : t1Sum - t2Sum;\n            });\n        } else if (isFunction(config.data_order)) {\n            targets.sort(config.data_order);\n        } // TODO: accept name array for order\n        return targets;\n    };\n    c3_chart_internal_fn.filterByX = function (targets, x) {\n        return this.d3.merge(targets.map(function (t) { return t.values; })).filter(function (v) { return v.x - x === 0; });\n    };\n    c3_chart_internal_fn.filterRemoveNull = function (data) {\n        return data.filter(function (d) { return isValue(d.value); });\n    };\n    c3_chart_internal_fn.filterByXDomain = function (targets, xDomain) {\n        return targets.map(function (t) {\n            return {\n                id: t.id,\n                id_org: t.id_org,\n                values: t.values.filter(function (v) {\n                    return xDomain[0] <= v.x && v.x <= xDomain[1];\n                })\n            };\n        });\n    };\n    c3_chart_internal_fn.hasDataLabel = function () {\n        var config = this.config;\n        if (typeof config.data_labels === 'boolean' && config.data_labels) {\n            return true;\n        } else if (typeof config.data_labels === 'object' && notEmpty(config.data_labels)) {\n            return true;\n        }\n        return false;\n    };\n    c3_chart_internal_fn.getDataLabelLength = function (min, max, key) {\n        var $$ = this,\n            lengths = [0, 0], paddingCoef = 1.3;\n        $$.selectChart.select('svg').selectAll('.dummy')\n            .data([min, max])\n            .enter().append('text')\n            .text(function (d) { return $$.dataLabelFormat(d.id)(d); })\n            .each(function (d, i) {\n                lengths[i] = this.getBoundingClientRect()[key] * paddingCoef;\n            })\n            .remove();\n        return lengths;\n    };\n    c3_chart_internal_fn.isNoneArc = function (d) {\n        return this.hasTarget(this.data.targets, d.id);\n    },\n    c3_chart_internal_fn.isArc = function (d) {\n        return 'data' in d && this.hasTarget(this.data.targets, d.data.id);\n    };\n    c3_chart_internal_fn.findSameXOfValues = function (values, index) {\n        var i, targetX = values[index].x, sames = [];\n        for (i = index - 1; i >= 0; i--) {\n            if (targetX !== values[i].x) { break; }\n            sames.push(values[i]);\n        }\n        for (i = index; i < values.length; i++) {\n            if (targetX !== values[i].x) { break; }\n            sames.push(values[i]);\n        }\n        return sames;\n    };\n\n    c3_chart_internal_fn.findClosestFromTargets = function (targets, pos) {\n        var $$ = this, candidates;\n\n        // map to array of closest points of each target\n        candidates = targets.map(function (target) {\n            return $$.findClosest(target.values, pos);\n        });\n\n        // decide closest point and return\n        return $$.findClosest(candidates, pos);\n    };\n    c3_chart_internal_fn.findClosest = function (values, pos) {\n        var $$ = this, minDist = $$.config.point_sensitivity, closest;\n\n        // find mouseovering bar\n        values.filter(function (v) { return v && $$.isBarType(v.id); }).forEach(function (v) {\n            var shape = $$.main.select('.' + CLASS.bars + $$.getTargetSelectorSuffix(v.id) + ' .' + CLASS.bar + '-' + v.index).node();\n            if (!closest && $$.isWithinBar(shape)) {\n                closest = v;\n            }\n        });\n\n        // find closest point from non-bar\n        values.filter(function (v) { return v && !$$.isBarType(v.id); }).forEach(function (v) {\n            var d = $$.dist(v, pos);\n            if (d < minDist) {\n                minDist = d;\n                closest = v;\n            }\n        });\n\n        return closest;\n    };\n    c3_chart_internal_fn.dist = function (data, pos) {\n        var $$ = this, config = $$.config,\n            xIndex = config.axis_rotated ? 1 : 0,\n            yIndex = config.axis_rotated ? 0 : 1,\n            y = $$.circleY(data, data.index),\n            x = $$.x(data.x);\n        return Math.sqrt(Math.pow(x - pos[xIndex], 2) + Math.pow(y - pos[yIndex], 2));\n    };\n    c3_chart_internal_fn.convertValuesToStep = function (values) {\n        var converted = [].concat(values), i;\n\n        if (!this.isCategorized()) {\n            return values;\n        }\n\n        for (i = values.length + 1; 0 < i; i--) {\n            converted[i] = converted[i - 1];\n        }\n\n        converted[0] = {\n            x: converted[0].x - 1,\n            value: converted[0].value,\n            id: converted[0].id\n        };\n        converted[values.length + 1] = {\n            x: converted[values.length].x + 1,\n            value: converted[values.length].value,\n            id: converted[values.length].id\n        };\n\n        return converted;\n    };\n    c3_chart_internal_fn.updateDataAttributes = function (name, attrs) {\n        var $$ = this, config = $$.config, current = config['data_' + name];\n        if (typeof attrs === 'undefined') { return current; }\n        Object.keys(attrs).forEach(function (id) {\n            current[id] = attrs[id];\n        });\n        $$.redraw({withLegend: true});\n        return current;\n    };\n\n    c3_chart_internal_fn.convertUrlToData = function (url, mimeType, headers, keys, done) {\n        var $$ = this, type = mimeType ? mimeType : 'csv';\n        var req = $$.d3.xhr(url);\n        if (headers) {\n            Object.keys(headers).forEach(function (header) {\n                req.header(header, headers[header]);\n            });\n        }\n        req.get(function (error, data) {\n            var d;\n            if (!data) {\n                throw new Error(error.responseURL + ' ' + error.status + ' (' + error.statusText + ')');\n            }\n            if (type === 'json') {\n                d = $$.convertJsonToData(JSON.parse(data.response), keys);\n            } else if (type === 'tsv') {\n                d = $$.convertTsvToData(data.response);\n            } else {\n                d = $$.convertCsvToData(data.response);\n            }\n            done.call($$, d);\n        });\n    };\n    c3_chart_internal_fn.convertXsvToData = function (xsv, parser) {\n        var rows = parser.parseRows(xsv), d;\n        if (rows.length === 1) {\n            d = [{}];\n            rows[0].forEach(function (id) {\n                d[0][id] = null;\n            });\n        } else {\n            d = parser.parse(xsv);\n        }\n        return d;\n    };\n    c3_chart_internal_fn.convertCsvToData = function (csv) {\n        return this.convertXsvToData(csv, this.d3.csv);\n    };\n    c3_chart_internal_fn.convertTsvToData = function (tsv) {\n        return this.convertXsvToData(tsv, this.d3.tsv);\n    };\n    c3_chart_internal_fn.convertJsonToData = function (json, keys) {\n        var $$ = this,\n            new_rows = [], targetKeys, data;\n        if (keys) { // when keys specified, json would be an array that includes objects\n            if (keys.x) {\n                targetKeys = keys.value.concat(keys.x);\n                $$.config.data_x = keys.x;\n            } else {\n                targetKeys = keys.value;\n            }\n            new_rows.push(targetKeys);\n            json.forEach(function (o) {\n                var new_row = [];\n                targetKeys.forEach(function (key) {\n                    // convert undefined to null because undefined data will be removed in convertDataToTargets()\n                    var v = $$.findValueInJson(o, key);\n                    if (isUndefined(v)) {\n                        v = null;\n                    }\n                    new_row.push(v);\n                });\n                new_rows.push(new_row);\n            });\n            data = $$.convertRowsToData(new_rows);\n        } else {\n            Object.keys(json).forEach(function (key) {\n                new_rows.push([key].concat(json[key]));\n            });\n            data = $$.convertColumnsToData(new_rows);\n        }\n        return data;\n    };\n    c3_chart_internal_fn.findValueInJson = function (object, path) {\n        path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties (replace [] with .)\n        path = path.replace(/^\\./, '');           // strip a leading dot\n        var pathArray = path.split('.');\n        for (var i = 0; i < pathArray.length; ++i) {\n            var k = pathArray[i];\n            if (k in object) {\n                object = object[k];\n            } else {\n                return;\n            }\n        }\n        return object;\n    };\n    c3_chart_internal_fn.convertRowsToData = function (rows) {\n        var keys = rows[0], new_row = {}, new_rows = [], i, j;\n        for (i = 1; i < rows.length; i++) {\n            new_row = {};\n            for (j = 0; j < rows[i].length; j++) {\n                if (isUndefined(rows[i][j])) {\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n                }\n                new_row[keys[j]] = rows[i][j];\n            }\n            new_rows.push(new_row);\n        }\n        return new_rows;\n    };\n    c3_chart_internal_fn.convertColumnsToData = function (columns) {\n        var new_rows = [], i, j, key;\n        for (i = 0; i < columns.length; i++) {\n            key = columns[i][0];\n            for (j = 1; j < columns[i].length; j++) {\n                if (isUndefined(new_rows[j - 1])) {\n                    new_rows[j - 1] = {};\n                }\n                if (isUndefined(columns[i][j])) {\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n                }\n                new_rows[j - 1][key] = columns[i][j];\n            }\n        }\n        return new_rows;\n    };\n    c3_chart_internal_fn.convertDataToTargets = function (data, appendXs) {\n        var $$ = this, config = $$.config,\n            ids = $$.d3.keys(data[0]).filter($$.isNotX, $$),\n            xs = $$.d3.keys(data[0]).filter($$.isX, $$),\n            targets;\n\n        // save x for update data by load when custom x and c3.x API\n        ids.forEach(function (id) {\n            var xKey = $$.getXKey(id);\n\n            if ($$.isCustomX() || $$.isTimeSeries()) {\n                // if included in input data\n                if (xs.indexOf(xKey) >= 0) {\n                    $$.data.xs[id] = (appendXs && $$.data.xs[id] ? $$.data.xs[id] : []).concat(\n                        data.map(function (d) { return d[xKey]; })\n                            .filter(isValue)\n                            .map(function (rawX, i) { return $$.generateTargetX(rawX, id, i); })\n                    );\n                }\n                // if not included in input data, find from preloaded data of other id's x\n                else if (config.data_x) {\n                    $$.data.xs[id] = $$.getOtherTargetXs();\n                }\n                // if not included in input data, find from preloaded data\n                else if (notEmpty(config.data_xs)) {\n                    $$.data.xs[id] = $$.getXValuesOfXKey(xKey, $$.data.targets);\n                }\n                // MEMO: if no x included, use same x of current will be used\n            } else {\n                $$.data.xs[id] = data.map(function (d, i) { return i; });\n            }\n        });\n\n\n        // check x is defined\n        ids.forEach(function (id) {\n            if (!$$.data.xs[id]) {\n                throw new Error('x is not defined for id = \"' + id + '\".');\n            }\n        });\n\n        // convert to target\n        targets = ids.map(function (id, index) {\n            var convertedId = config.data_idConverter(id);\n            return {\n                id: convertedId,\n                id_org: id,\n                values: data.map(function (d, i) {\n                    var xKey = $$.getXKey(id), rawX = d[xKey],\n                        value = d[id] !== null && !isNaN(d[id]) ? +d[id] : null, x;\n                    // use x as categories if custom x and categorized\n                    if ($$.isCustomX() && $$.isCategorized() && index === 0 && !isUndefined(rawX)) {\n                        if (index === 0 && i === 0) {\n                            config.axis_x_categories = [];\n                        }\n                        x = config.axis_x_categories.indexOf(rawX);\n                        if (x === -1) {\n                            x = config.axis_x_categories.length;\n                            config.axis_x_categories.push(rawX);\n                        }\n                    } else {\n                        x  = $$.generateTargetX(rawX, id, i);\n                    }\n                    // mark as x = undefined if value is undefined and filter to remove after mapped\n                    if (isUndefined(d[id]) || $$.data.xs[id].length <= i) {\n                        x = undefined;\n                    }\n                    return {x: x, value: value, id: convertedId};\n                }).filter(function (v) { return isDefined(v.x); })\n            };\n        });\n\n        // finish targets\n        targets.forEach(function (t) {\n            var i;\n            // sort values by its x\n            if (config.data_xSort) {\n                t.values = t.values.sort(function (v1, v2) {\n                    var x1 = v1.x || v1.x === 0 ? v1.x : Infinity,\n                        x2 = v2.x || v2.x === 0 ? v2.x : Infinity;\n                    return x1 - x2;\n                });\n            }\n            // indexing each value\n            i = 0;\n            t.values.forEach(function (v) {\n                v.index = i++;\n            });\n            // this needs to be sorted because its index and value.index is identical\n            $$.data.xs[t.id].sort(function (v1, v2) {\n                return v1 - v2;\n            });\n        });\n\n        // cache information about values\n        $$.hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n        $$.hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n\n        // set target types\n        if (config.data_type) {\n            $$.setTargetType($$.mapToIds(targets).filter(function (id) { return ! (id in config.data_types); }), config.data_type);\n        }\n\n        // cache as original id keyed\n        targets.forEach(function (d) {\n            $$.addCache(d.id_org, d);\n        });\n\n        return targets;\n    };\n\n    c3_chart_internal_fn.load = function (targets, args) {\n        var $$ = this;\n        if (targets) {\n            // filter loading targets if needed\n            if (args.filter) {\n                targets = targets.filter(args.filter);\n            }\n            // set type if args.types || args.type specified\n            if (args.type || args.types) {\n                targets.forEach(function (t) {\n                    var type = args.types && args.types[t.id] ? args.types[t.id] : args.type;\n                    $$.setTargetType(t.id, type);\n                });\n            }\n            // Update/Add data\n            $$.data.targets.forEach(function (d) {\n                for (var i = 0; i < targets.length; i++) {\n                    if (d.id === targets[i].id) {\n                        d.values = targets[i].values;\n                        targets.splice(i, 1);\n                        break;\n                    }\n                }\n            });\n            $$.data.targets = $$.data.targets.concat(targets); // add remained\n        }\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Redraw with new targets\n        $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n\n        if (args.done) { args.done(); }\n    };\n    c3_chart_internal_fn.loadFromArgs = function (args) {\n        var $$ = this;\n        if (args.data) {\n            $$.load($$.convertDataToTargets(args.data), args);\n        }\n        else if (args.url) {\n            $$.convertUrlToData(args.url, args.mimeType, args.headers, args.keys, function (data) {\n                $$.load($$.convertDataToTargets(data), args);\n            });\n        }\n        else if (args.json) {\n            $$.load($$.convertDataToTargets($$.convertJsonToData(args.json, args.keys)), args);\n        }\n        else if (args.rows) {\n            $$.load($$.convertDataToTargets($$.convertRowsToData(args.rows)), args);\n        }\n        else if (args.columns) {\n            $$.load($$.convertDataToTargets($$.convertColumnsToData(args.columns)), args);\n        }\n        else {\n            $$.load(null, args);\n        }\n    };\n    c3_chart_internal_fn.unload = function (targetIds, done) {\n        var $$ = this;\n        if (!done) {\n            done = function () {};\n        }\n        // filter existing target\n        targetIds = targetIds.filter(function (id) { return $$.hasTarget($$.data.targets, id); });\n        // If no target, call done and return\n        if (!targetIds || targetIds.length === 0) {\n            done();\n            return;\n        }\n        $$.svg.selectAll(targetIds.map(function (id) { return $$.selectorTarget(id); }))\n            .transition()\n            .style('opacity', 0)\n            .remove()\n            .call($$.endall, done);\n        targetIds.forEach(function (id) {\n            // Reset fadein for future load\n            $$.withoutFadeIn[id] = false;\n            // Remove target's elements\n            if ($$.legend) {\n                $$.legend.selectAll('.' + CLASS.legendItem + $$.getTargetSelectorSuffix(id)).remove();\n            }\n            // Remove target\n            $$.data.targets = $$.data.targets.filter(function (t) {\n                return t.id !== id;\n            });\n        });\n    };\n\n    c3_chart_internal_fn.categoryName = function (i) {\n        var config = this.config;\n        return i < config.axis_x_categories.length ? config.axis_x_categories[i] : i;\n    };\n\n    c3_chart_internal_fn.initEventRect = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.eventRects)\n            .style('fill-opacity', 0);\n    };\n    c3_chart_internal_fn.redrawEventRect = function () {\n        var $$ = this, config = $$.config,\n            eventRectUpdate, maxDataCountTarget,\n            isMultipleX = $$.isMultipleX();\n\n        // rects for mouseover\n        var eventRects = $$.main.select('.' + CLASS.eventRects)\n                .style('cursor', config.zoom_enabled ? config.axis_rotated ? 'ns-resize' : 'ew-resize' : null)\n                .classed(CLASS.eventRectsMultiple, isMultipleX)\n                .classed(CLASS.eventRectsSingle, !isMultipleX);\n\n        // clear old rects\n        eventRects.selectAll('.' + CLASS.eventRect).remove();\n\n        // open as public variable\n        $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n\n        if (isMultipleX) {\n            eventRectUpdate = $$.eventRect.data([0]);\n            // enter : only one rect will be added\n            $$.generateEventRectsForMultipleXs(eventRectUpdate.enter());\n            // update\n            $$.updateEventRect(eventRectUpdate);\n            // exit : not needed because always only one rect exists\n        }\n        else {\n            // Set data and update $$.eventRect\n            maxDataCountTarget = $$.getMaxDataCountTarget($$.data.targets);\n            eventRects.datum(maxDataCountTarget ? maxDataCountTarget.values : []);\n            $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n            eventRectUpdate = $$.eventRect.data(function (d) { return d; });\n            // enter\n            $$.generateEventRectsForSingleX(eventRectUpdate.enter());\n            // update\n            $$.updateEventRect(eventRectUpdate);\n            // exit\n            eventRectUpdate.exit().remove();\n        }\n    };\n    c3_chart_internal_fn.updateEventRect = function (eventRectUpdate) {\n        var $$ = this, config = $$.config,\n            x, y, w, h, rectW, rectX;\n\n        // set update selection if null\n        eventRectUpdate = eventRectUpdate || $$.eventRect.data(function (d) { return d; });\n\n        if ($$.isMultipleX()) {\n            // TODO: rotated not supported yet\n            x = 0;\n            y = 0;\n            w = $$.width;\n            h = $$.height;\n        }\n        else {\n            if (($$.isCustomX() || $$.isTimeSeries()) && !$$.isCategorized()) {\n\n                // update index for x that is used by prevX and nextX\n                $$.updateXs();\n\n                rectW = function (d) {\n                    var prevX = $$.getPrevX(d.index), nextX = $$.getNextX(d.index);\n\n                    // if there this is a single data point make the eventRect full width (or height)\n                    if (prevX === null && nextX === null) {\n                        return config.axis_rotated ? $$.height : $$.width;\n                    }\n\n                    if (prevX === null) { prevX = $$.x.domain()[0]; }\n                    if (nextX === null) { nextX = $$.x.domain()[1]; }\n\n                    return Math.max(0, ($$.x(nextX) - $$.x(prevX)) / 2);\n                };\n                rectX = function (d) {\n                    var prevX = $$.getPrevX(d.index), nextX = $$.getNextX(d.index),\n                        thisX = $$.data.xs[d.id][d.index];\n\n                    // if there this is a single data point position the eventRect at 0\n                    if (prevX === null && nextX === null) {\n                        return 0;\n                    }\n\n                    if (prevX === null) { prevX = $$.x.domain()[0]; }\n\n                    return ($$.x(thisX) + $$.x(prevX)) / 2;\n                };\n            } else {\n                rectW = $$.getEventRectWidth();\n                rectX = function (d) {\n                    return $$.x(d.x) - (rectW / 2);\n                };\n            }\n            x = config.axis_rotated ? 0 : rectX;\n            y = config.axis_rotated ? rectX : 0;\n            w = config.axis_rotated ? $$.width : rectW;\n            h = config.axis_rotated ? rectW : $$.height;\n        }\n\n        eventRectUpdate\n            .attr('class', $$.classEvent.bind($$))\n            .attr(\"x\", x)\n            .attr(\"y\", y)\n            .attr(\"width\", w)\n            .attr(\"height\", h);\n    };\n    c3_chart_internal_fn.generateEventRectsForSingleX = function (eventRectEnter) {\n        var $$ = this, d3 = $$.d3, config = $$.config;\n        eventRectEnter.append(\"rect\")\n            .attr(\"class\", $$.classEvent.bind($$))\n            .style(\"cursor\", config.data_selection_enabled && config.data_selection_grouped ? \"pointer\" : null)\n            .on('mouseover', function (d) {\n                var index = d.index;\n\n                if ($$.dragging || $$.flowing) { return; } // do nothing while dragging/flowing\n                if ($$.hasArcType()) { return; }\n\n                // Expand shapes for selection\n                if (config.point_focus_expand_enabled) { $$.expandCircles(index, null, true); }\n                $$.expandBars(index, null, true);\n\n                // Call event handler\n                $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                    config.data_onmouseover.call($$.api, d);\n                });\n            })\n            .on('mouseout', function (d) {\n                var index = d.index;\n                if (!$$.config) { return; } // chart is destroyed\n                if ($$.hasArcType()) { return; }\n                $$.hideXGridFocus();\n                $$.hideTooltip();\n                // Undo expanded shapes\n                $$.unexpandCircles();\n                $$.unexpandBars();\n                // Call event handler\n                $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                    config.data_onmouseout.call($$.api, d);\n                });\n            })\n            .on('mousemove', function (d) {\n                var selectedData, index = d.index,\n                    eventRect = $$.svg.select('.' + CLASS.eventRect + '-' + index);\n\n                if ($$.dragging || $$.flowing) { return; } // do nothing while dragging/flowing\n                if ($$.hasArcType()) { return; }\n\n                if ($$.isStepType(d) && $$.config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n                    index -= 1;\n                }\n\n                // Show tooltip\n                selectedData = $$.filterTargetsToShow($$.data.targets).map(function (t) {\n                    return $$.addName($$.getValueOnIndex(t.values, index));\n                });\n\n                if (config.tooltip_grouped) {\n                    $$.showTooltip(selectedData, this);\n                    $$.showXGridFocus(selectedData);\n                }\n\n                if (config.tooltip_grouped && (!config.data_selection_enabled || config.data_selection_grouped)) {\n                    return;\n                }\n\n                $$.main.selectAll('.' + CLASS.shape + '-' + index)\n                    .each(function () {\n                        d3.select(this).classed(CLASS.EXPANDED, true);\n                        if (config.data_selection_enabled) {\n                            eventRect.style('cursor', config.data_selection_grouped ? 'pointer' : null);\n                        }\n                        if (!config.tooltip_grouped) {\n                            $$.hideXGridFocus();\n                            $$.hideTooltip();\n                            if (!config.data_selection_grouped) {\n                                $$.unexpandCircles(index);\n                                $$.unexpandBars(index);\n                            }\n                        }\n                    })\n                    .filter(function (d) {\n                        return $$.isWithinShape(this, d);\n                    })\n                    .each(function (d) {\n                        if (config.data_selection_enabled && (config.data_selection_grouped || config.data_selection_isselectable(d))) {\n                            eventRect.style('cursor', 'pointer');\n                        }\n                        if (!config.tooltip_grouped) {\n                            $$.showTooltip([d], this);\n                            $$.showXGridFocus([d]);\n                            if (config.point_focus_expand_enabled) { $$.expandCircles(index, d.id, true); }\n                            $$.expandBars(index, d.id, true);\n                        }\n                    });\n            })\n            .on('click', function (d) {\n                var index = d.index;\n                if ($$.hasArcType() || !$$.toggleShape) { return; }\n                if ($$.cancelClick) {\n                    $$.cancelClick = false;\n                    return;\n                }\n                if ($$.isStepType(d) && config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n                    index -= 1;\n                }\n                $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                    if (config.data_selection_grouped || $$.isWithinShape(this, d)) {\n                        $$.toggleShape(this, d, index);\n                        $$.config.data_onclick.call($$.api, d, this);\n                    }\n                });\n            })\n            .call(\n                config.data_selection_draggable && $$.drag ? (\n                    d3.behavior.drag().origin(Object)\n                        .on('drag', function () { $$.drag(d3.mouse(this)); })\n                        .on('dragstart', function () { $$.dragstart(d3.mouse(this)); })\n                        .on('dragend', function () { $$.dragend(); })\n                ) : function () {}\n            );\n    };\n\n    c3_chart_internal_fn.generateEventRectsForMultipleXs = function (eventRectEnter) {\n        var $$ = this, d3 = $$.d3, config = $$.config;\n\n        function mouseout() {\n            $$.svg.select('.' + CLASS.eventRect).style('cursor', null);\n            $$.hideXGridFocus();\n            $$.hideTooltip();\n            $$.unexpandCircles();\n            $$.unexpandBars();\n        }\n\n        eventRectEnter.append('rect')\n            .attr('x', 0)\n            .attr('y', 0)\n            .attr('width', $$.width)\n            .attr('height', $$.height)\n            .attr('class', CLASS.eventRect)\n            .on('mouseout', function () {\n                if (!$$.config) { return; } // chart is destroyed\n                if ($$.hasArcType()) { return; }\n                mouseout();\n            })\n            .on('mousemove', function () {\n                var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n                var mouse, closest, sameXData, selectedData;\n\n                if ($$.dragging) { return; } // do nothing when dragging\n                if ($$.hasArcType(targetsToShow)) { return; }\n\n                mouse = d3.mouse(this);\n                closest = $$.findClosestFromTargets(targetsToShow, mouse);\n\n                if ($$.mouseover && (!closest || closest.id !== $$.mouseover.id)) {\n                    config.data_onmouseout.call($$.api, $$.mouseover);\n                    $$.mouseover = undefined;\n                }\n\n                if (! closest) {\n                    mouseout();\n                    return;\n                }\n\n                if ($$.isScatterType(closest) || !config.tooltip_grouped) {\n                    sameXData = [closest];\n                } else {\n                    sameXData = $$.filterByX(targetsToShow, closest.x);\n                }\n\n                // show tooltip when cursor is close to some point\n                selectedData = sameXData.map(function (d) {\n                    return $$.addName(d);\n                });\n                $$.showTooltip(selectedData, this);\n\n                // expand points\n                if (config.point_focus_expand_enabled) {\n                    $$.expandCircles(closest.index, closest.id, true);\n                }\n                $$.expandBars(closest.index, closest.id, true);\n\n                // Show xgrid focus line\n                $$.showXGridFocus(selectedData);\n\n                // Show cursor as pointer if point is close to mouse position\n                if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n                    $$.svg.select('.' + CLASS.eventRect).style('cursor', 'pointer');\n                    if (!$$.mouseover) {\n                        config.data_onmouseover.call($$.api, closest);\n                        $$.mouseover = closest;\n                    }\n                }\n            })\n            .on('click', function () {\n                var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n                var mouse, closest;\n                if ($$.hasArcType(targetsToShow)) { return; }\n\n                mouse = d3.mouse(this);\n                closest = $$.findClosestFromTargets(targetsToShow, mouse);\n                if (! closest) { return; }\n                // select if selection enabled\n                if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n                    $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(closest.id)).selectAll('.' + CLASS.shape + '-' + closest.index).each(function () {\n                        if (config.data_selection_grouped || $$.isWithinShape(this, closest)) {\n                            $$.toggleShape(this, closest, closest.index);\n                            $$.config.data_onclick.call($$.api, closest, this);\n                        }\n                    });\n                }\n            })\n            .call(\n                config.data_selection_draggable && $$.drag ? (\n                    d3.behavior.drag().origin(Object)\n                        .on('drag', function () { $$.drag(d3.mouse(this)); })\n                        .on('dragstart', function () { $$.dragstart(d3.mouse(this)); })\n                        .on('dragend', function () { $$.dragend(); })\n                ) : function () {}\n            );\n    };\n    c3_chart_internal_fn.dispatchEvent = function (type, index, mouse) {\n        var $$ = this,\n            selector = '.' + CLASS.eventRect + (!$$.isMultipleX() ? '-' + index : ''),\n            eventRect = $$.main.select(selector).node(),\n            box = eventRect.getBoundingClientRect(),\n            x = box.left + (mouse ? mouse[0] : 0),\n            y = box.top + (mouse ? mouse[1] : 0),\n            event = document.createEvent(\"MouseEvents\");\n\n        event.initMouseEvent(type, true, true, window, 0, x, y, x, y,\n                             false, false, false, false, 0, null);\n        eventRect.dispatchEvent(event);\n    };\n\n    c3_chart_internal_fn.getCurrentWidth = function () {\n        var $$ = this, config = $$.config;\n        return config.size_width ? config.size_width : $$.getParentWidth();\n    };\n    c3_chart_internal_fn.getCurrentHeight = function () {\n        var $$ = this, config = $$.config,\n            h = config.size_height ? config.size_height : $$.getParentHeight();\n        return h > 0 ? h : 320 / ($$.hasType('gauge') && !config.gauge_fullCircle ? 2 : 1); \n    };\n    c3_chart_internal_fn.getCurrentPaddingTop = function () {\n        var $$ = this,\n            config = $$.config,\n            padding = isValue(config.padding_top) ? config.padding_top : 0;\n        if ($$.title && $$.title.node()) {\n            padding += $$.getTitlePadding();\n        }\n        return padding;\n    };\n    c3_chart_internal_fn.getCurrentPaddingBottom = function () {\n        var config = this.config;\n        return isValue(config.padding_bottom) ? config.padding_bottom : 0;\n    };\n    c3_chart_internal_fn.getCurrentPaddingLeft = function (withoutRecompute) {\n        var $$ = this, config = $$.config;\n        if (isValue(config.padding_left)) {\n            return config.padding_left;\n        } else if (config.axis_rotated) {\n            return !config.axis_x_show ? 1 : Math.max(ceil10($$.getAxisWidthByAxisId('x', withoutRecompute)), 40);\n        } else if (!config.axis_y_show || config.axis_y_inner) { // && !config.axis_rotated\n            return $$.axis.getYAxisLabelPosition().isOuter ? 30 : 1;\n        } else {\n            return ceil10($$.getAxisWidthByAxisId('y', withoutRecompute));\n        }\n    };\n    c3_chart_internal_fn.getCurrentPaddingRight = function () {\n        var $$ = this, config = $$.config,\n            defaultPadding = 10, legendWidthOnRight = $$.isLegendRight ? $$.getLegendWidth() + 20 : 0;\n        if (isValue(config.padding_right)) {\n            return config.padding_right + 1; // 1 is needed not to hide tick line\n        } else if (config.axis_rotated) {\n            return defaultPadding + legendWidthOnRight;\n        } else if (!config.axis_y2_show || config.axis_y2_inner) { // && !config.axis_rotated\n            return 2 + legendWidthOnRight + ($$.axis.getY2AxisLabelPosition().isOuter ? 20 : 0);\n        } else {\n            return ceil10($$.getAxisWidthByAxisId('y2')) + legendWidthOnRight;\n        }\n    };\n\n    c3_chart_internal_fn.getParentRectValue = function (key) {\n        var parent = this.selectChart.node(), v;\n        while (parent && parent.tagName !== 'BODY') {\n            try {\n                v = parent.getBoundingClientRect()[key];\n            } catch(e) {\n                if (key === 'width') {\n                    // In IE in certain cases getBoundingClientRect\n                    // will cause an \"unspecified error\"\n                    v = parent.offsetWidth;\n                }\n            }\n            if (v) {\n                break;\n            }\n            parent = parent.parentNode;\n        }\n        return v;\n    };\n    c3_chart_internal_fn.getParentWidth = function () {\n        return this.getParentRectValue('width');\n    };\n    c3_chart_internal_fn.getParentHeight = function () {\n        var h = this.selectChart.style('height');\n        return h.indexOf('px') > 0 ? +h.replace('px', '') : 0;\n    };\n\n\n    c3_chart_internal_fn.getSvgLeft = function (withoutRecompute) {\n        var $$ = this, config = $$.config,\n            hasLeftAxisRect = config.axis_rotated || (!config.axis_rotated && !config.axis_y_inner),\n            leftAxisClass = config.axis_rotated ? CLASS.axisX : CLASS.axisY,\n            leftAxis = $$.main.select('.' + leftAxisClass).node(),\n            svgRect = leftAxis && hasLeftAxisRect ? leftAxis.getBoundingClientRect() : {right: 0},\n            chartRect = $$.selectChart.node().getBoundingClientRect(),\n            hasArc = $$.hasArcType(),\n            svgLeft = svgRect.right - chartRect.left - (hasArc ? 0 : $$.getCurrentPaddingLeft(withoutRecompute));\n        return svgLeft > 0 ? svgLeft : 0;\n    };\n\n\n    c3_chart_internal_fn.getAxisWidthByAxisId = function (id, withoutRecompute) {\n        var $$ = this, position = $$.axis.getLabelPositionById(id);\n        return $$.axis.getMaxTickWidth(id, withoutRecompute) + (position.isInner ? 20 : 40);\n    };\n    c3_chart_internal_fn.getHorizontalAxisHeight = function (axisId) {\n        var $$ = this, config = $$.config, h = 30;\n        if (axisId === 'x' && !config.axis_x_show) { return 8; }\n        if (axisId === 'x' && config.axis_x_height) { return config.axis_x_height; }\n        if (axisId === 'y' && !config.axis_y_show) { \n            return config.legend_show && !$$.isLegendRight && !$$.isLegendInset ? 10 : 1; \n        }\n        if (axisId === 'y2' && !config.axis_y2_show) { return $$.rotated_padding_top; }\n        // Calculate x axis height when tick rotated\n        if (axisId === 'x' && !config.axis_rotated && config.axis_x_tick_rotate) {\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_x_tick_rotate) / 180);\n        }\n        // Calculate y axis height when tick rotated\n        if (axisId === 'y' && config.axis_rotated && config.axis_y_tick_rotate) {\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_y_tick_rotate) / 180);\n        }\n        return h + ($$.axis.getLabelPositionById(axisId).isInner ? 0 : 10) + (axisId === 'y2' ? -10 : 0);\n    };\n\n    c3_chart_internal_fn.getEventRectWidth = function () {\n        return Math.max(0, this.xAxis.tickInterval());\n    };\n\n    c3_chart_internal_fn.getShapeIndices = function (typeFilter) {\n        var $$ = this, config = $$.config,\n            indices = {}, i = 0, j, k;\n        $$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$)).forEach(function (d) {\n            for (j = 0; j < config.data_groups.length; j++) {\n                if (config.data_groups[j].indexOf(d.id) < 0) { continue; }\n                for (k = 0; k < config.data_groups[j].length; k++) {\n                    if (config.data_groups[j][k] in indices) {\n                        indices[d.id] = indices[config.data_groups[j][k]];\n                        break;\n                    }\n                }\n            }\n            if (isUndefined(indices[d.id])) { indices[d.id] = i++; }\n        });\n        indices.__max__ = i - 1;\n        return indices;\n    };\n    c3_chart_internal_fn.getShapeX = function (offset, targetsNum, indices, isSub) {\n        var $$ = this, scale = isSub ? $$.subX : $$.x;\n        return function (d) {\n            var index = d.id in indices ? indices[d.id] : 0;\n            return d.x || d.x === 0 ? scale(d.x) - offset * (targetsNum / 2 - index) : 0;\n        };\n    };\n    c3_chart_internal_fn.getShapeY = function (isSub) {\n        var $$ = this;\n        return function (d) {\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id);\n            return scale(d.value);\n        };\n    };\n    c3_chart_internal_fn.getShapeOffset = function (typeFilter, indices, isSub) {\n        var $$ = this,\n            targets = $$.orderTargets($$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$))),\n            targetIds = targets.map(function (t) { return t.id; });\n        return function (d, i) {\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id),\n                y0 = scale(0), offset = y0;\n            targets.forEach(function (t) {\n                var values = $$.isStepType(d) ? $$.convertValuesToStep(t.values) : t.values;\n                if (t.id === d.id || indices[t.id] !== indices[d.id]) { return; }\n                if (targetIds.indexOf(t.id) < targetIds.indexOf(d.id)) {\n                    // check if the x values line up\n                    if (typeof values[i] === 'undefined' || +values[i].x !== +d.x) {  // \"+\" for timeseries\n                        // if not, try to find the value that does line up\n                        i = -1;\n                        values.forEach(function (v, j) {\n                            if (v.x === d.x) {\n                                i = j;\n                            }\n                        });\n                    }\n                    if (i in values && values[i].value * d.value >= 0) {\n                        offset += scale(values[i].value) - y0;\n                    }\n                }\n            });\n            return offset;\n        };\n    };\n    c3_chart_internal_fn.isWithinShape = function (that, d) {\n        var $$ = this,\n            shape = $$.d3.select(that), isWithin;\n        if (!$$.isTargetToShow(d.id)) {\n            isWithin = false;\n        }\n        else if (that.nodeName === 'circle') {\n            isWithin = $$.isStepType(d) ? $$.isWithinStep(that, $$.getYScale(d.id)(d.value)) : $$.isWithinCircle(that, $$.pointSelectR(d) * 1.5);\n        }\n        else if (that.nodeName === 'path') {\n            isWithin = shape.classed(CLASS.bar) ? $$.isWithinBar(that) : true;\n        }\n        return isWithin;\n    };\n\n\n    c3_chart_internal_fn.getInterpolate = function (d) {\n        var $$ = this,\n            interpolation = $$.isInterpolationType($$.config.spline_interpolation_type) ? $$.config.spline_interpolation_type : 'cardinal';\n        return $$.isSplineType(d) ? interpolation : $$.isStepType(d) ? $$.config.line_step_type : \"linear\";\n    };\n\n    c3_chart_internal_fn.initLine = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartLines);\n    };\n    c3_chart_internal_fn.updateTargetsForLine = function (targets) {\n        var $$ = this, config = $$.config,\n            mainLineUpdate, mainLineEnter,\n            classChartLine = $$.classChartLine.bind($$),\n            classLines = $$.classLines.bind($$),\n            classAreas = $$.classAreas.bind($$),\n            classCircles = $$.classCircles.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainLineUpdate = $$.main.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine)\n            .data(targets)\n            .attr('class', function (d) { return classChartLine(d) + classFocus(d); });\n        mainLineEnter = mainLineUpdate.enter().append('g')\n            .attr('class', classChartLine)\n            .style('opacity', 0)\n            .style(\"pointer-events\", \"none\");\n        // Lines for each data\n        mainLineEnter.append('g')\n            .attr(\"class\", classLines);\n        // Areas\n        mainLineEnter.append('g')\n            .attr('class', classAreas);\n        // Circles for each data point on lines\n        mainLineEnter.append('g')\n            .attr(\"class\", function (d) { return $$.generateClass(CLASS.selectedCircles, d.id); });\n        mainLineEnter.append('g')\n            .attr(\"class\", classCircles)\n            .style(\"cursor\", function (d) { return config.data_selection_isselectable(d) ? \"pointer\" : null; });\n        // Update date for selected circles\n        targets.forEach(function (t) {\n            $$.main.selectAll('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(t.id)).selectAll('.' + CLASS.selectedCircle).each(function (d) {\n                d.value = t.values[d.index].value;\n            });\n        });\n        // MEMO: can not keep same color...\n        //mainLineUpdate.exit().remove();\n    };\n    c3_chart_internal_fn.updateLine = function (durationForExit) {\n        var $$ = this;\n        $$.mainLine = $$.main.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line)\n            .data($$.lineData.bind($$));\n        $$.mainLine.enter().append('path')\n            .attr('class', $$.classLine.bind($$))\n            .style(\"stroke\", $$.color);\n        $$.mainLine\n            .style(\"opacity\", $$.initialOpacity.bind($$))\n            .style('shape-rendering', function (d) { return $$.isStepType(d) ? 'crispEdges' : ''; })\n            .attr('transform', null);\n        $$.mainLine.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawLine = function (drawLine, withTransition) {\n        return [\n            (withTransition ? this.mainLine.transition(Math.random().toString()) : this.mainLine)\n                .attr(\"d\", drawLine)\n                .style(\"stroke\", this.color)\n                .style(\"opacity\", 1)\n        ];\n    };\n    c3_chart_internal_fn.generateDrawLine = function (lineIndices, isSub) {\n        var $$ = this, config = $$.config,\n            line = $$.d3.svg.line(),\n            getPoints = $$.generateGetLinePoints(lineIndices, isSub),\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n            xValue = function (d) { return (isSub ? $$.subxx : $$.xx).call($$, d); },\n            yValue = function (d, i) {\n                return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(d.value);\n            };\n\n        line = config.axis_rotated ? line.x(yValue).y(xValue) : line.x(xValue).y(yValue);\n        if (!config.line_connectNull) { line = line.defined(function (d) { return d.value != null; }); }\n        return function (d) {\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n                x = isSub ? $$.x : $$.subX, y = yScaleGetter.call($$, d.id), x0 = 0, y0 = 0, path;\n            if ($$.isLineType(d)) {\n                if (config.data_regions[d.id]) {\n                    path = $$.lineWithRegions(values, x, y, config.data_regions[d.id]);\n                } else {\n                    if ($$.isStepType(d)) { values = $$.convertValuesToStep(values); }\n                    path = line.interpolate($$.getInterpolate(d))(values);\n                }\n            } else {\n                if (values[0]) {\n                    x0 = x(values[0].x);\n                    y0 = y(values[0].value);\n                }\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n            }\n            return path ? path : \"M 0 0\";\n        };\n    };\n    c3_chart_internal_fn.generateGetLinePoints = function (lineIndices, isSub) { // partial duplication of generateGetBarPoints\n        var $$ = this, config = $$.config,\n            lineTargetsNum = lineIndices.__max__ + 1,\n            x = $$.getShapeX(0, lineTargetsNum, lineIndices, !!isSub),\n            y = $$.getShapeY(!!isSub),\n            lineOffset = $$.getShapeOffset($$.isLineType, lineIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = lineOffset(d, i) || y0, // offset is for stacked area chart\n                posX = x(d), posY = y(d);\n            // fix posY not to overflow opposite quadrant\n            if (config.axis_rotated) {\n                if ((0 < d.value && posY < y0) || (d.value < 0 && y0 < posY)) { posY = y0; }\n            }\n            // 1 point that marks the line position\n            return [\n                [posX, posY - (y0 - offset)],\n                [posX, posY - (y0 - offset)], // needed for compatibility\n                [posX, posY - (y0 - offset)], // needed for compatibility\n                [posX, posY - (y0 - offset)]  // needed for compatibility\n            ];\n        };\n    };\n\n\n    c3_chart_internal_fn.lineWithRegions = function (d, x, y, _regions) {\n        var $$ = this, config = $$.config,\n            prev = -1, i, j,\n            s = \"M\", sWithRegion,\n            xp, yp, dx, dy, dd, diff, diffx2,\n            xOffset = $$.isCategorized() ? 0.5 : 0,\n            xValue, yValue,\n            regions = [];\n\n        function isWithinRegions(x, regions) {\n            var i;\n            for (i = 0; i < regions.length; i++) {\n                if (regions[i].start < x && x <= regions[i].end) { return true; }\n            }\n            return false;\n        }\n\n        // Check start/end of regions\n        if (isDefined(_regions)) {\n            for (i = 0; i < _regions.length; i++) {\n                regions[i] = {};\n                if (isUndefined(_regions[i].start)) {\n                    regions[i].start = d[0].x;\n                } else {\n                    regions[i].start = $$.isTimeSeries() ? $$.parseDate(_regions[i].start) : _regions[i].start;\n                }\n                if (isUndefined(_regions[i].end)) {\n                    regions[i].end = d[d.length - 1].x;\n                } else {\n                    regions[i].end = $$.isTimeSeries() ? $$.parseDate(_regions[i].end) : _regions[i].end;\n                }\n            }\n        }\n\n        // Set scales\n        xValue = config.axis_rotated ? function (d) { return y(d.value); } : function (d) { return x(d.x); };\n        yValue = config.axis_rotated ? function (d) { return x(d.x); } : function (d) { return y(d.value); };\n\n        // Define svg generator function for region\n        function generateM(points) {\n            return 'M' + points[0][0] + ' ' + points[0][1] + ' ' + points[1][0] + ' ' + points[1][1];\n        }\n        if ($$.isTimeSeries()) {\n            sWithRegion = function (d0, d1, j, diff) {\n                var x0 = d0.x.getTime(), x_diff = d1.x - d0.x,\n                    xv0 = new Date(x0 + x_diff * j),\n                    xv1 = new Date(x0 + x_diff * (j + diff)),\n                    points;\n                if (config.axis_rotated) {\n                    points = [[y(yp(j)), x(xv0)], [y(yp(j + diff)), x(xv1)]];\n                } else {\n                    points = [[x(xv0), y(yp(j))], [x(xv1), y(yp(j + diff))]];\n                }\n                return generateM(points);\n            };\n        } else {\n            sWithRegion = function (d0, d1, j, diff) {\n                var points;\n                if (config.axis_rotated) {\n                    points = [[y(yp(j), true), x(xp(j))], [y(yp(j + diff), true), x(xp(j + diff))]];\n                } else {\n                    points = [[x(xp(j), true), y(yp(j))], [x(xp(j + diff), true), y(yp(j + diff))]];\n                }\n                return generateM(points);\n            };\n        }\n\n        // Generate\n        for (i = 0; i < d.length; i++) {\n\n            // Draw as normal\n            if (isUndefined(regions) || ! isWithinRegions(d[i].x, regions)) {\n                s += \" \" + xValue(d[i]) + \" \" + yValue(d[i]);\n            }\n            // Draw with region // TODO: Fix for horizotal charts\n            else {\n                xp = $$.getScale(d[i - 1].x + xOffset, d[i].x + xOffset, $$.isTimeSeries());\n                yp = $$.getScale(d[i - 1].value, d[i].value);\n\n                dx = x(d[i].x) - x(d[i - 1].x);\n                dy = y(d[i].value) - y(d[i - 1].value);\n                dd = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n                diff = 2 / dd;\n                diffx2 = diff * 2;\n\n                for (j = diff; j <= 1; j += diffx2) {\n                    s += sWithRegion(d[i - 1], d[i], j, diff);\n                }\n            }\n            prev = d[i].x;\n        }\n\n        return s;\n    };\n\n\n    c3_chart_internal_fn.updateArea = function (durationForExit) {\n        var $$ = this, d3 = $$.d3;\n        $$.mainArea = $$.main.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area)\n            .data($$.lineData.bind($$));\n        $$.mainArea.enter().append('path')\n            .attr(\"class\", $$.classArea.bind($$))\n            .style(\"fill\", $$.color)\n            .style(\"opacity\", function () { $$.orgAreaOpacity = +d3.select(this).style('opacity'); return 0; });\n        $$.mainArea\n            .style(\"opacity\", $$.orgAreaOpacity);\n        $$.mainArea.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawArea = function (drawArea, withTransition) {\n        return [\n            (withTransition ? this.mainArea.transition(Math.random().toString()) : this.mainArea)\n                .attr(\"d\", drawArea)\n                .style(\"fill\", this.color)\n                .style(\"opacity\", this.orgAreaOpacity)\n        ];\n    };\n    c3_chart_internal_fn.generateDrawArea = function (areaIndices, isSub) {\n        var $$ = this, config = $$.config, area = $$.d3.svg.area(),\n            getPoints = $$.generateGetAreaPoints(areaIndices, isSub),\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n            xValue = function (d) { return (isSub ? $$.subxx : $$.xx).call($$, d); },\n            value0 = function (d, i) {\n                return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)($$.getAreaBaseValue(d.id));\n            },\n            value1 = function (d, i) {\n                return config.data_groups.length > 0 ? getPoints(d, i)[1][1] : yScaleGetter.call($$, d.id)(d.value);\n            };\n\n        area = config.axis_rotated ? area.x0(value0).x1(value1).y(xValue) : area.x(xValue).y0(config.area_above ? 0 : value0).y1(value1);\n        if (!config.line_connectNull) {\n            area = area.defined(function (d) { return d.value !== null; });\n        }\n\n        return function (d) {\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n                x0 = 0, y0 = 0, path;\n            if ($$.isAreaType(d)) {\n                if ($$.isStepType(d)) { values = $$.convertValuesToStep(values); }\n                path = area.interpolate($$.getInterpolate(d))(values);\n            } else {\n                if (values[0]) {\n                    x0 = $$.x(values[0].x);\n                    y0 = $$.getYScale(d.id)(values[0].value);\n                }\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n            }\n            return path ? path : \"M 0 0\";\n        };\n    };\n    c3_chart_internal_fn.getAreaBaseValue = function () {\n        return 0;\n    };\n    c3_chart_internal_fn.generateGetAreaPoints = function (areaIndices, isSub) { // partial duplication of generateGetBarPoints\n        var $$ = this, config = $$.config,\n            areaTargetsNum = areaIndices.__max__ + 1,\n            x = $$.getShapeX(0, areaTargetsNum, areaIndices, !!isSub),\n            y = $$.getShapeY(!!isSub),\n            areaOffset = $$.getShapeOffset($$.isAreaType, areaIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = areaOffset(d, i) || y0, // offset is for stacked area chart\n                posX = x(d), posY = y(d);\n            // fix posY not to overflow opposite quadrant\n            if (config.axis_rotated) {\n                if ((0 < d.value && posY < y0) || (d.value < 0 && y0 < posY)) { posY = y0; }\n            }\n            // 1 point that marks the area position\n            return [\n                [posX, offset],\n                [posX, posY - (y0 - offset)],\n                [posX, posY - (y0 - offset)], // needed for compatibility\n                [posX, offset] // needed for compatibility\n            ];\n        };\n    };\n\n\n    c3_chart_internal_fn.updateCircle = function () {\n        var $$ = this;\n        $$.mainCircle = $$.main.selectAll('.' + CLASS.circles).selectAll('.' + CLASS.circle)\n            .data($$.lineOrScatterData.bind($$));\n        $$.mainCircle.enter().append(\"circle\")\n            .attr(\"class\", $$.classCircle.bind($$))\n            .attr(\"r\", $$.pointR.bind($$))\n            .style(\"fill\", $$.color);\n        $$.mainCircle\n            .style(\"opacity\", $$.initialOpacityForCircle.bind($$));\n        $$.mainCircle.exit().remove();\n    };\n    c3_chart_internal_fn.redrawCircle = function (cx, cy, withTransition) {\n        var selectedCircles = this.main.selectAll('.' + CLASS.selectedCircle);\n        return [\n            (withTransition ? this.mainCircle.transition(Math.random().toString()) : this.mainCircle)\n                .style('opacity', this.opacityForCircle.bind(this))\n                .style(\"fill\", this.color)\n                .attr(\"cx\", cx)\n                .attr(\"cy\", cy),\n            (withTransition ? selectedCircles.transition(Math.random().toString()) : selectedCircles)\n                .attr(\"cx\", cx)\n                .attr(\"cy\", cy)\n        ];\n    };\n    c3_chart_internal_fn.circleX = function (d) {\n        return d.x || d.x === 0 ? this.x(d.x) : null;\n    };\n    c3_chart_internal_fn.updateCircleY = function () {\n        var $$ = this, lineIndices, getPoints;\n        if ($$.config.data_groups.length > 0) {\n            lineIndices = $$.getShapeIndices($$.isLineType),\n            getPoints = $$.generateGetLinePoints(lineIndices);\n            $$.circleY = function (d, i) {\n                return getPoints(d, i)[0][1];\n            };\n        } else {\n            $$.circleY = function (d) {\n                return $$.getYScale(d.id)(d.value);\n            };\n        }\n    };\n    c3_chart_internal_fn.getCircles = function (i, id) {\n        var $$ = this;\n        return (id ? $$.main.selectAll('.' + CLASS.circles + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.circle + (isValue(i) ? '-' + i : ''));\n    };\n    c3_chart_internal_fn.expandCircles = function (i, id, reset) {\n        var $$ = this,\n            r = $$.pointExpandedR.bind($$);\n        if (reset) { $$.unexpandCircles(); }\n        $$.getCircles(i, id)\n            .classed(CLASS.EXPANDED, true)\n            .attr('r', r);\n    };\n    c3_chart_internal_fn.unexpandCircles = function (i) {\n        var $$ = this,\n            r = $$.pointR.bind($$);\n        $$.getCircles(i)\n            .filter(function () { return $$.d3.select(this).classed(CLASS.EXPANDED); })\n            .classed(CLASS.EXPANDED, false)\n            .attr('r', r);\n    };\n    c3_chart_internal_fn.pointR = function (d) {\n        var $$ = this, config = $$.config;\n        return $$.isStepType(d) ? 0 : (isFunction(config.point_r) ? config.point_r(d) : config.point_r);\n    };\n    c3_chart_internal_fn.pointExpandedR = function (d) {\n        var $$ = this, config = $$.config;\n        return config.point_focus_expand_enabled ? (config.point_focus_expand_r ? config.point_focus_expand_r : $$.pointR(d) * 1.75) : $$.pointR(d);\n    };\n    c3_chart_internal_fn.pointSelectR = function (d) {\n        var $$ = this, config = $$.config;\n        return isFunction(config.point_select_r) ? config.point_select_r(d) : ((config.point_select_r) ? config.point_select_r : $$.pointR(d) * 4);\n    };\n    c3_chart_internal_fn.isWithinCircle = function (that, r) {\n        var d3 = this.d3,\n            mouse = d3.mouse(that), d3_this = d3.select(that),\n            cx = +d3_this.attr(\"cx\"), cy = +d3_this.attr(\"cy\");\n        return Math.sqrt(Math.pow(cx - mouse[0], 2) + Math.pow(cy - mouse[1], 2)) < r;\n    };\n    c3_chart_internal_fn.isWithinStep = function (that, y) {\n        return Math.abs(y - this.d3.mouse(that)[1]) < 30;\n    };\n\n    c3_chart_internal_fn.initBar = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartBars);\n    };\n    c3_chart_internal_fn.updateTargetsForBar = function (targets) {\n        var $$ = this, config = $$.config,\n            mainBarUpdate, mainBarEnter,\n            classChartBar = $$.classChartBar.bind($$),\n            classBars = $$.classBars.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainBarUpdate = $$.main.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar)\n            .data(targets)\n            .attr('class', function (d) { return classChartBar(d) + classFocus(d); });\n        mainBarEnter = mainBarUpdate.enter().append('g')\n            .attr('class', classChartBar)\n            .style('opacity', 0)\n            .style(\"pointer-events\", \"none\");\n        // Bars for each data\n        mainBarEnter.append('g')\n            .attr(\"class\", classBars)\n            .style(\"cursor\", function (d) { return config.data_selection_isselectable(d) ? \"pointer\" : null; });\n\n    };\n    c3_chart_internal_fn.updateBar = function (durationForExit) {\n        var $$ = this,\n            barData = $$.barData.bind($$),\n            classBar = $$.classBar.bind($$),\n            initialOpacity = $$.initialOpacity.bind($$),\n            color = function (d) { return $$.color(d.id); };\n        $$.mainBar = $$.main.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar)\n            .data(barData);\n        $$.mainBar.enter().append('path')\n            .attr(\"class\", classBar)\n            .style(\"stroke\", color)\n            .style(\"fill\", color);\n        $$.mainBar\n            .style(\"opacity\", initialOpacity);\n        $$.mainBar.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawBar = function (drawBar, withTransition) {\n        return [\n            (withTransition ? this.mainBar.transition(Math.random().toString()) : this.mainBar)\n                .attr('d', drawBar)\n                .style(\"fill\", this.color)\n                .style(\"opacity\", 1)\n        ];\n    };\n    c3_chart_internal_fn.getBarW = function (axis, barTargetsNum) {\n        var $$ = this, config = $$.config,\n            w = typeof config.bar_width === 'number' ? config.bar_width : barTargetsNum ? (axis.tickInterval() * config.bar_width_ratio) / barTargetsNum : 0;\n        return config.bar_width_max && w > config.bar_width_max ? config.bar_width_max : w;\n    };\n    c3_chart_internal_fn.getBars = function (i, id) {\n        var $$ = this;\n        return (id ? $$.main.selectAll('.' + CLASS.bars + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.bar + (isValue(i) ? '-' + i : ''));\n    };\n    c3_chart_internal_fn.expandBars = function (i, id, reset) {\n        var $$ = this;\n        if (reset) { $$.unexpandBars(); }\n        $$.getBars(i, id).classed(CLASS.EXPANDED, true);\n    };\n    c3_chart_internal_fn.unexpandBars = function (i) {\n        var $$ = this;\n        $$.getBars(i).classed(CLASS.EXPANDED, false);\n    };\n    c3_chart_internal_fn.generateDrawBar = function (barIndices, isSub) {\n        var $$ = this, config = $$.config,\n            getPoints = $$.generateGetBarPoints(barIndices, isSub);\n        return function (d, i) {\n            // 4 points that make a bar\n            var points = getPoints(d, i);\n\n            // switch points if axis is rotated, not applicable for sub chart\n            var indexX = config.axis_rotated ? 1 : 0;\n            var indexY = config.axis_rotated ? 0 : 1;\n\n            var path = 'M ' + points[0][indexX] + ',' + points[0][indexY] + ' ' +\n                    'L' + points[1][indexX] + ',' + points[1][indexY] + ' ' +\n                    'L' + points[2][indexX] + ',' + points[2][indexY] + ' ' +\n                    'L' + points[3][indexX] + ',' + points[3][indexY] + ' ' +\n                    'z';\n\n            return path;\n        };\n    };\n    c3_chart_internal_fn.generateGetBarPoints = function (barIndices, isSub) {\n        var $$ = this,\n            axis = isSub ? $$.subXAxis : $$.xAxis,\n            barTargetsNum = barIndices.__max__ + 1,\n            barW = $$.getBarW(axis, barTargetsNum),\n            barX = $$.getShapeX(barW, barTargetsNum, barIndices, !!isSub),\n            barY = $$.getShapeY(!!isSub),\n            barOffset = $$.getShapeOffset($$.isBarType, barIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = barOffset(d, i) || y0, // offset is for stacked bar chart\n                posX = barX(d), posY = barY(d);\n            // fix posY not to overflow opposite quadrant\n            if ($$.config.axis_rotated) {\n                if ((0 < d.value && posY < y0) || (d.value < 0 && y0 < posY)) { posY = y0; }\n            }\n            // 4 points that make a bar\n            return [\n                [posX, offset],\n                [posX, posY - (y0 - offset)],\n                [posX + barW, posY - (y0 - offset)],\n                [posX + barW, offset]\n            ];\n        };\n    };\n    c3_chart_internal_fn.isWithinBar = function (that) {\n        var mouse = this.d3.mouse(that), box = that.getBoundingClientRect(),\n            seg0 = that.pathSegList.getItem(0), seg1 = that.pathSegList.getItem(1),\n            x = Math.min(seg0.x, seg1.x), y = Math.min(seg0.y, seg1.y),\n            w = box.width, h = box.height, offset = 2,\n            sx = x - offset, ex = x + w + offset, sy = y + h + offset, ey = y - offset;\n        return sx < mouse[0] && mouse[0] < ex && ey < mouse[1] && mouse[1] < sy;\n    };\n\n    c3_chart_internal_fn.initText = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartTexts);\n        $$.mainText = $$.d3.selectAll([]);\n    };\n    c3_chart_internal_fn.updateTargetsForText = function (targets) {\n        var $$ = this, mainTextUpdate, mainTextEnter,\n            classChartText = $$.classChartText.bind($$),\n            classTexts = $$.classTexts.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainTextUpdate = $$.main.select('.' + CLASS.chartTexts).selectAll('.' + CLASS.chartText)\n            .data(targets)\n            .attr('class', function (d) { return classChartText(d) + classFocus(d); });\n        mainTextEnter = mainTextUpdate.enter().append('g')\n            .attr('class', classChartText)\n            .style('opacity', 0)\n            .style(\"pointer-events\", \"none\");\n        mainTextEnter.append('g')\n            .attr('class', classTexts);\n    };\n    c3_chart_internal_fn.updateText = function (durationForExit) {\n        var $$ = this, config = $$.config,\n            barOrLineData = $$.barOrLineData.bind($$),\n            classText = $$.classText.bind($$);\n        $$.mainText = $$.main.selectAll('.' + CLASS.texts).selectAll('.' + CLASS.text)\n            .data(barOrLineData);\n        $$.mainText.enter().append('text')\n            .attr(\"class\", classText)\n            .attr('text-anchor', function (d) { return config.axis_rotated ? (d.value < 0 ? 'end' : 'start') : 'middle'; })\n            .style(\"stroke\", 'none')\n            .style(\"fill\", function (d) { return $$.color(d); })\n            .style(\"fill-opacity\", 0);\n        $$.mainText\n            .text(function (d, i, j) { return $$.dataLabelFormat(d.id)(d.value, d.id, i, j); });\n        $$.mainText.exit()\n            .transition().duration(durationForExit)\n            .style('fill-opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawText = function (xForText, yForText, forFlow, withTransition) {\n        return [\n            (withTransition ? this.mainText.transition() : this.mainText)\n                .attr('x', xForText)\n                .attr('y', yForText)\n                .style(\"fill\", this.color)\n                .style(\"fill-opacity\", forFlow ? 0 : this.opacityForText.bind(this))\n        ];\n    };\n    c3_chart_internal_fn.getTextRect = function (text, cls, element) {\n        var dummy = this.d3.select('body').append('div').classed('c3', true),\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\n            font = this.d3.select(element).style('font'),\n            rect;\n        svg.selectAll('.dummy')\n            .data([text])\n          .enter().append('text')\n            .classed(cls ? cls : \"\", true)\n            .style('font', font)\n            .text(text)\n          .each(function () { rect = this.getBoundingClientRect(); });\n        dummy.remove();\n        return rect;\n    };\n    c3_chart_internal_fn.generateXYForText = function (areaIndices, barIndices, lineIndices, forX) {\n        var $$ = this,\n            getAreaPoints = $$.generateGetAreaPoints(areaIndices, false),\n            getBarPoints = $$.generateGetBarPoints(barIndices, false),\n            getLinePoints = $$.generateGetLinePoints(lineIndices, false),\n            getter = forX ? $$.getXForText : $$.getYForText;\n        return function (d, i) {\n            var getPoints = $$.isAreaType(d) ? getAreaPoints : $$.isBarType(d) ? getBarPoints : getLinePoints;\n            return getter.call($$, getPoints(d, i), d, this);\n        };\n    };\n    c3_chart_internal_fn.getXForText = function (points, d, textElement) {\n        var $$ = this,\n            box = textElement.getBoundingClientRect(), xPos, padding;\n        if ($$.config.axis_rotated) {\n            padding = $$.isBarType(d) ? 4 : 6;\n            xPos = points[2][1] + padding * (d.value < 0 ? -1 : 1);\n        } else {\n            xPos = $$.hasType('bar') ? (points[2][0] + points[0][0]) / 2 : points[0][0];\n        }\n        // show labels regardless of the domain if value is null\n        if (d.value === null) {\n            if (xPos > $$.width) {\n                xPos = $$.width - box.width;\n            } else if (xPos < 0) {\n                xPos = 4;\n            }\n        }\n        return xPos;\n    };\n    c3_chart_internal_fn.getYForText = function (points, d, textElement) {\n        var $$ = this,\n            box = textElement.getBoundingClientRect(),\n            yPos;\n        if ($$.config.axis_rotated) {\n            yPos = (points[0][0] + points[2][0] + box.height * 0.6) / 2;\n        } else {\n            yPos = points[2][1];\n            if (d.value < 0  || (d.value === 0 && !$$.hasPositiveValue)) {\n                yPos += box.height;\n                if ($$.isBarType(d) && $$.isSafari()) {\n                    yPos -= 3;\n                }\n                else if (!$$.isBarType(d) && $$.isChrome()) {\n                    yPos += 3;\n                }\n            } else {\n                yPos += $$.isBarType(d) ? -3 : -6;\n            }\n        }\n        // show labels regardless of the domain if value is null\n        if (d.value === null && !$$.config.axis_rotated) {\n            if (yPos < box.height) {\n                yPos = box.height;\n            } else if (yPos > this.height) {\n                yPos = this.height - 4;\n            }\n        }\n        return yPos;\n    };\n\n    c3_chart_internal_fn.setTargetType = function (targetIds, type) {\n        var $$ = this, config = $$.config;\n        $$.mapToTargetIds(targetIds).forEach(function (id) {\n            $$.withoutFadeIn[id] = (type === config.data_types[id]);\n            config.data_types[id] = type;\n        });\n        if (!targetIds) {\n            config.data_type = type;\n        }\n    };\n    c3_chart_internal_fn.hasType = function (type, targets) {\n        var $$ = this, types = $$.config.data_types, has = false;\n        targets = targets || $$.data.targets;\n        if (targets && targets.length) {\n            targets.forEach(function (target) {\n                var t = types[target.id];\n                if ((t && t.indexOf(type) >= 0) || (!t && type === 'line')) {\n                    has = true;\n                }\n            });\n        } else if (Object.keys(types).length) {\n            Object.keys(types).forEach(function (id) {\n                if (types[id] === type) { has = true; }\n            });\n        } else {\n            has = $$.config.data_type === type;\n        }\n        return has;\n    };\n    c3_chart_internal_fn.hasArcType = function (targets) {\n        return this.hasType('pie', targets) || this.hasType('donut', targets) || this.hasType('gauge', targets);\n    };\n    c3_chart_internal_fn.isLineType = function (d) {\n        var config = this.config, id = isString(d) ? d : d.id;\n        return !config.data_types[id] || ['line', 'spline', 'area', 'area-spline', 'step', 'area-step'].indexOf(config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isStepType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['step', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isSplineType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['spline', 'area-spline'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isAreaType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['area', 'area-spline', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isBarType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'bar';\n    };\n    c3_chart_internal_fn.isScatterType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'scatter';\n    };\n    c3_chart_internal_fn.isPieType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'pie';\n    };\n    c3_chart_internal_fn.isGaugeType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'gauge';\n    };\n    c3_chart_internal_fn.isDonutType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'donut';\n    };\n    c3_chart_internal_fn.isArcType = function (d) {\n        return this.isPieType(d) || this.isDonutType(d) || this.isGaugeType(d);\n    };\n    c3_chart_internal_fn.lineData = function (d) {\n        return this.isLineType(d) ? [d] : [];\n    };\n    c3_chart_internal_fn.arcData = function (d) {\n        return this.isArcType(d.data) ? [d] : [];\n    };\n    /* not used\n     function scatterData(d) {\n     return isScatterType(d) ? d.values : [];\n     }\n     */\n    c3_chart_internal_fn.barData = function (d) {\n        return this.isBarType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.lineOrScatterData = function (d) {\n        return this.isLineType(d) || this.isScatterType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.barOrLineData = function (d) {\n        return this.isBarType(d) || this.isLineType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.isInterpolationType = function (type) {\n        return ['linear', 'linear-closed', 'basis', 'basis-open', 'basis-closed', 'bundle', 'cardinal', 'cardinal-open', 'cardinal-closed', 'monotone'].indexOf(type) >= 0;\n    };\n\n    c3_chart_internal_fn.initGrid = function () {\n        var $$ = this, config = $$.config, d3 = $$.d3;\n        $$.grid = $$.main.append('g')\n            .attr(\"clip-path\", $$.clipPathForGrid)\n            .attr('class', CLASS.grid);\n        if (config.grid_x_show) {\n            $$.grid.append(\"g\").attr(\"class\", CLASS.xgrids);\n        }\n        if (config.grid_y_show) {\n            $$.grid.append('g').attr('class', CLASS.ygrids);\n        }\n        if (config.grid_focus_show) {\n            $$.grid.append('g')\n                .attr(\"class\", CLASS.xgridFocus)\n                .append('line')\n                .attr('class', CLASS.xgridFocus);\n        }\n        $$.xgrid = d3.selectAll([]);\n        if (!config.grid_lines_front) { $$.initGridLines(); }\n    };\n    c3_chart_internal_fn.initGridLines = function () {\n        var $$ = this, d3 = $$.d3;\n        $$.gridLines = $$.main.append('g')\n            .attr(\"clip-path\", $$.clipPathForGrid)\n            .attr('class', CLASS.grid + ' ' + CLASS.gridLines);\n        $$.gridLines.append('g').attr(\"class\", CLASS.xgridLines);\n        $$.gridLines.append('g').attr('class', CLASS.ygridLines);\n        $$.xgridLines = d3.selectAll([]);\n    };\n    c3_chart_internal_fn.updateXGrid = function (withoutUpdate) {\n        var $$ = this, config = $$.config, d3 = $$.d3,\n            xgridData = $$.generateGridData(config.grid_x_type, $$.x),\n            tickOffset = $$.isCategorized() ? $$.xAxis.tickOffset() : 0;\n\n        $$.xgridAttr = config.axis_rotated ? {\n            'x1': 0,\n            'x2': $$.width,\n            'y1': function (d) { return $$.x(d) - tickOffset; },\n            'y2': function (d) { return $$.x(d) - tickOffset; }\n        } : {\n            'x1': function (d) { return $$.x(d) + tickOffset; },\n            'x2': function (d) { return $$.x(d) + tickOffset; },\n            'y1': 0,\n            'y2': $$.height\n        };\n\n        $$.xgrid = $$.main.select('.' + CLASS.xgrids).selectAll('.' + CLASS.xgrid)\n            .data(xgridData);\n        $$.xgrid.enter().append('line').attr(\"class\", CLASS.xgrid);\n        if (!withoutUpdate) {\n            $$.xgrid.attr($$.xgridAttr)\n                .style(\"opacity\", function () { return +d3.select(this).attr(config.axis_rotated ? 'y1' : 'x1') === (config.axis_rotated ? $$.height : 0) ? 0 : 1; });\n        }\n        $$.xgrid.exit().remove();\n    };\n\n    c3_chart_internal_fn.updateYGrid = function () {\n        var $$ = this, config = $$.config,\n            gridValues = $$.yAxis.tickValues() || $$.y.ticks(config.grid_y_ticks);\n        $$.ygrid = $$.main.select('.' + CLASS.ygrids).selectAll('.' + CLASS.ygrid)\n            .data(gridValues);\n        $$.ygrid.enter().append('line')\n            .attr('class', CLASS.ygrid);\n        $$.ygrid.attr(\"x1\", config.axis_rotated ? $$.y : 0)\n            .attr(\"x2\", config.axis_rotated ? $$.y : $$.width)\n            .attr(\"y1\", config.axis_rotated ? 0 : $$.y)\n            .attr(\"y2\", config.axis_rotated ? $$.height : $$.y);\n        $$.ygrid.exit().remove();\n        $$.smoothLines($$.ygrid, 'grid');\n    };\n\n    c3_chart_internal_fn.gridTextAnchor = function (d) {\n        return d.position ? d.position : \"end\";\n    };\n    c3_chart_internal_fn.gridTextDx = function (d) {\n        return d.position === 'start' ? 4 : d.position === 'middle' ? 0 : -4;\n    };\n    c3_chart_internal_fn.xGridTextX = function (d) {\n        return d.position === 'start' ? -this.height : d.position === 'middle' ? -this.height / 2 : 0;\n    };\n    c3_chart_internal_fn.yGridTextX = function (d) {\n        return d.position === 'start' ? 0 : d.position === 'middle' ? this.width / 2 : this.width;\n    };\n    c3_chart_internal_fn.updateGrid = function (duration) {\n        var $$ = this, main = $$.main, config = $$.config,\n            xgridLine, ygridLine, yv;\n\n        // hide if arc type\n        $$.grid.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n        main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n        if (config.grid_x_show) {\n            $$.updateXGrid();\n        }\n        $$.xgridLines = main.select('.' + CLASS.xgridLines).selectAll('.' + CLASS.xgridLine)\n            .data(config.grid_x_lines);\n        // enter\n        xgridLine = $$.xgridLines.enter().append('g')\n            .attr(\"class\", function (d) { return CLASS.xgridLine + (d['class'] ? ' ' + d['class'] : ''); });\n        xgridLine.append('line')\n            .style(\"opacity\", 0);\n        xgridLine.append('text')\n            .attr(\"text-anchor\", $$.gridTextAnchor)\n            .attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\")\n            .attr('dx', $$.gridTextDx)\n            .attr('dy', -5)\n            .style(\"opacity\", 0);\n        // udpate\n        // done in d3.transition() of the end of this function\n        // exit\n        $$.xgridLines.exit().transition().duration(duration)\n            .style(\"opacity\", 0)\n            .remove();\n\n        // Y-Grid\n        if (config.grid_y_show) {\n            $$.updateYGrid();\n        }\n        $$.ygridLines = main.select('.' + CLASS.ygridLines).selectAll('.' + CLASS.ygridLine)\n            .data(config.grid_y_lines);\n        // enter\n        ygridLine = $$.ygridLines.enter().append('g')\n            .attr(\"class\", function (d) { return CLASS.ygridLine + (d['class'] ? ' ' + d['class'] : ''); });\n        ygridLine.append('line')\n            .style(\"opacity\", 0);\n        ygridLine.append('text')\n            .attr(\"text-anchor\", $$.gridTextAnchor)\n            .attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\")\n            .attr('dx', $$.gridTextDx)\n            .attr('dy', -5)\n            .style(\"opacity\", 0);\n        // update\n        yv = $$.yv.bind($$);\n        $$.ygridLines.select('line')\n          .transition().duration(duration)\n            .attr(\"x1\", config.axis_rotated ? yv : 0)\n            .attr(\"x2\", config.axis_rotated ? yv : $$.width)\n            .attr(\"y1\", config.axis_rotated ? 0 : yv)\n            .attr(\"y2\", config.axis_rotated ? $$.height : yv)\n            .style(\"opacity\", 1);\n        $$.ygridLines.select('text')\n          .transition().duration(duration)\n            .attr(\"x\", config.axis_rotated ? $$.xGridTextX.bind($$) : $$.yGridTextX.bind($$))\n            .attr(\"y\", yv)\n            .text(function (d) { return d.text; })\n            .style(\"opacity\", 1);\n        // exit\n        $$.ygridLines.exit().transition().duration(duration)\n            .style(\"opacity\", 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawGrid = function (withTransition) {\n        var $$ = this, config = $$.config, xv = $$.xv.bind($$),\n            lines = $$.xgridLines.select('line'),\n            texts = $$.xgridLines.select('text');\n        return [\n            (withTransition ? lines.transition() : lines)\n                .attr(\"x1\", config.axis_rotated ? 0 : xv)\n                .attr(\"x2\", config.axis_rotated ? $$.width : xv)\n                .attr(\"y1\", config.axis_rotated ? xv : 0)\n                .attr(\"y2\", config.axis_rotated ? xv : $$.height)\n                .style(\"opacity\", 1),\n            (withTransition ? texts.transition() : texts)\n                .attr(\"x\", config.axis_rotated ? $$.yGridTextX.bind($$) : $$.xGridTextX.bind($$))\n                .attr(\"y\", xv)\n                .text(function (d) { return d.text; })\n                .style(\"opacity\", 1)\n        ];\n    };\n    c3_chart_internal_fn.showXGridFocus = function (selectedData) {\n        var $$ = this, config = $$.config,\n            dataToShow = selectedData.filter(function (d) { return d && isValue(d.value); }),\n            focusEl = $$.main.selectAll('line.' + CLASS.xgridFocus),\n            xx = $$.xx.bind($$);\n        if (! config.tooltip_show) { return; }\n        // Hide when scatter plot exists\n        if ($$.hasType('scatter') || $$.hasArcType()) { return; }\n        focusEl\n            .style(\"visibility\", \"visible\")\n            .data([dataToShow[0]])\n            .attr(config.axis_rotated ? 'y1' : 'x1', xx)\n            .attr(config.axis_rotated ? 'y2' : 'x2', xx);\n        $$.smoothLines(focusEl, 'grid');\n    };\n    c3_chart_internal_fn.hideXGridFocus = function () {\n        this.main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n    };\n    c3_chart_internal_fn.updateXgridFocus = function () {\n        var $$ = this, config = $$.config;\n        $$.main.select('line.' + CLASS.xgridFocus)\n            .attr(\"x1\", config.axis_rotated ? 0 : -10)\n            .attr(\"x2\", config.axis_rotated ? $$.width : -10)\n            .attr(\"y1\", config.axis_rotated ? -10 : 0)\n            .attr(\"y2\", config.axis_rotated ? -10 : $$.height);\n    };\n    c3_chart_internal_fn.generateGridData = function (type, scale) {\n        var $$ = this,\n            gridData = [], xDomain, firstYear, lastYear, i,\n            tickNum = $$.main.select(\".\" + CLASS.axisX).selectAll('.tick').size();\n        if (type === 'year') {\n            xDomain = $$.getXDomain();\n            firstYear = xDomain[0].getFullYear();\n            lastYear = xDomain[1].getFullYear();\n            for (i = firstYear; i <= lastYear; i++) {\n                gridData.push(new Date(i + '-01-01 00:00:00'));\n            }\n        } else {\n            gridData = scale.ticks(10);\n            if (gridData.length > tickNum) { // use only int\n                gridData = gridData.filter(function (d) { return (\"\" + d).indexOf('.') < 0; });\n            }\n        }\n        return gridData;\n    };\n    c3_chart_internal_fn.getGridFilterToRemove = function (params) {\n        return params ? function (line) {\n            var found = false;\n            [].concat(params).forEach(function (param) {\n                if ((('value' in param && line.value === param.value) || ('class' in param && line['class'] === param['class']))) {\n                    found = true;\n                }\n            });\n            return found;\n        } : function () { return true; };\n    };\n    c3_chart_internal_fn.removeGridLines = function (params, forX) {\n        var $$ = this, config = $$.config,\n            toRemove = $$.getGridFilterToRemove(params),\n            toShow = function (line) { return !toRemove(line); },\n            classLines = forX ? CLASS.xgridLines : CLASS.ygridLines,\n            classLine = forX ? CLASS.xgridLine : CLASS.ygridLine;\n        $$.main.select('.' + classLines).selectAll('.' + classLine).filter(toRemove)\n            .transition().duration(config.transition_duration)\n            .style('opacity', 0).remove();\n        if (forX) {\n            config.grid_x_lines = config.grid_x_lines.filter(toShow);\n        } else {\n            config.grid_y_lines = config.grid_y_lines.filter(toShow);\n        }\n    };\n\n    c3_chart_internal_fn.initTooltip = function () {\n        var $$ = this, config = $$.config, i;\n        $$.tooltip = $$.selectChart\n            .style(\"position\", \"relative\")\n          .append(\"div\")\n            .attr('class', CLASS.tooltipContainer)\n            .style(\"position\", \"absolute\")\n            .style(\"pointer-events\", \"none\")\n            .style(\"display\", \"none\");\n        // Show tooltip if needed\n        if (config.tooltip_init_show) {\n            if ($$.isTimeSeries() && isString(config.tooltip_init_x)) {\n                config.tooltip_init_x = $$.parseDate(config.tooltip_init_x);\n                for (i = 0; i < $$.data.targets[0].values.length; i++) {\n                    if (($$.data.targets[0].values[i].x - config.tooltip_init_x) === 0) { break; }\n                }\n                config.tooltip_init_x = i;\n            }\n            $$.tooltip.html(config.tooltip_contents.call($$, $$.data.targets.map(function (d) {\n                return $$.addName(d.values[config.tooltip_init_x]);\n            }), $$.axis.getXAxisTickFormat(), $$.getYFormat($$.hasArcType()), $$.color));\n            $$.tooltip.style(\"top\", config.tooltip_init_position.top)\n                .style(\"left\", config.tooltip_init_position.left)\n                .style(\"display\", \"block\");\n        }\n    };\n    c3_chart_internal_fn.getTooltipContent = function (d, defaultTitleFormat, defaultValueFormat, color) {\n        var $$ = this, config = $$.config,\n            titleFormat = config.tooltip_format_title || defaultTitleFormat,\n            nameFormat = config.tooltip_format_name || function (name) { return name; },\n            valueFormat = config.tooltip_format_value || defaultValueFormat,\n            text, i, title, value, name, bgcolor,\n            orderAsc = $$.isOrderAsc();\n\n        if (config.data_groups.length === 0) {\n            d.sort(function(a, b){\n                var v1 = a ? a.value : null, v2 = b ? b.value : null;\n                return orderAsc ? v1 - v2 : v2 - v1;\n            });\n        } else {\n            var ids = $$.orderTargets($$.data.targets).map(function (i) {\n                return i.id;\n            });\n            d.sort(function(a, b) {\n                var v1 = a ? a.value : null, v2 = b ? b.value : null;\n                if (v1 > 0 && v2 > 0) {\n                    v1 = a ? ids.indexOf(a.id) : null;\n                    v2 = b ? ids.indexOf(b.id) : null;\n                }\n                return orderAsc ? v1 - v2 : v2 - v1;\n            });\n        }\n\n        for (i = 0; i < d.length; i++) {\n            if (! (d[i] && (d[i].value || d[i].value === 0))) { continue; }\n\n            if (! text) {\n                title = sanitise(titleFormat ? titleFormat(d[i].x) : d[i].x);\n                text = \"<table class='\" + $$.CLASS.tooltip + \"'>\" + (title || title === 0 ? \"<tr><th colspan='2'>\" + title + \"</th></tr>\" : \"\");\n            }\n\n            value = sanitise(valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index, d));\n            if (value !== undefined) {\n                // Skip elements when their name is set to null\n                if (d[i].name === null) { continue; }\n                name = sanitise(nameFormat(d[i].name, d[i].ratio, d[i].id, d[i].index));\n                bgcolor = $$.levelColor ? $$.levelColor(d[i].value) : color(d[i].id);\n\n                text += \"<tr class='\" + $$.CLASS.tooltipName + \"-\" + $$.getTargetSelectorSuffix(d[i].id) + \"'>\";\n                text += \"<td class='name'><span style='background-color:\" + bgcolor + \"'></span>\" + name + \"</td>\";\n                text += \"<td class='value'>\" + value + \"</td>\";\n                text += \"</tr>\";\n            }\n        }\n        return text + \"</table>\";\n    };\n    c3_chart_internal_fn.tooltipPosition = function (dataToShow, tWidth, tHeight, element) {\n        var $$ = this, config = $$.config, d3 = $$.d3;\n        var svgLeft, tooltipLeft, tooltipRight, tooltipTop, chartRight;\n        var forArc = $$.hasArcType(),\n            mouse = d3.mouse(element);\n      // Determin tooltip position\n        if (forArc) {\n            tooltipLeft = (($$.width - ($$.isLegendRight ? $$.getLegendWidth() : 0)) / 2) + mouse[0];\n            tooltipTop = ($$.height / 2) + mouse[1] + 20;\n        } else {\n            svgLeft = $$.getSvgLeft(true);\n            if (config.axis_rotated) {\n                tooltipLeft = svgLeft + mouse[0] + 100;\n                tooltipRight = tooltipLeft + tWidth;\n                chartRight = $$.currentWidth - $$.getCurrentPaddingRight();\n                tooltipTop = $$.x(dataToShow[0].x) + 20;\n            } else {\n                tooltipLeft = svgLeft + $$.getCurrentPaddingLeft(true) + $$.x(dataToShow[0].x) + 20;\n                tooltipRight = tooltipLeft + tWidth;\n                chartRight = svgLeft + $$.currentWidth - $$.getCurrentPaddingRight();\n                tooltipTop = mouse[1] + 15;\n            }\n\n            if (tooltipRight > chartRight) {\n                // 20 is needed for Firefox to keep tooltip width\n                tooltipLeft -= tooltipRight - chartRight + 20;\n            }\n            if (tooltipTop + tHeight > $$.currentHeight) {\n                tooltipTop -= tHeight + 30;\n            }\n        }\n        if (tooltipTop < 0) {\n            tooltipTop = 0;\n        }\n        return {top: tooltipTop, left: tooltipLeft};\n    };\n    c3_chart_internal_fn.showTooltip = function (selectedData, element) {\n        var $$ = this, config = $$.config;\n        var tWidth, tHeight, position;\n        var forArc = $$.hasArcType(),\n            dataToShow = selectedData.filter(function (d) { return d && isValue(d.value); }),\n            positionFunction = config.tooltip_position || c3_chart_internal_fn.tooltipPosition;\n        if (dataToShow.length === 0 || !config.tooltip_show) {\n            return;\n        }\n        $$.tooltip.html(config.tooltip_contents.call($$, selectedData, $$.axis.getXAxisTickFormat(), $$.getYFormat(forArc), $$.color)).style(\"display\", \"block\");\n\n        // Get tooltip dimensions\n        tWidth = $$.tooltip.property('offsetWidth');\n        tHeight = $$.tooltip.property('offsetHeight');\n\n        position = positionFunction.call(this, dataToShow, tWidth, tHeight, element);\n        // Set tooltip\n        $$.tooltip\n            .style(\"top\", position.top + \"px\")\n            .style(\"left\", position.left + 'px');\n    };\n    c3_chart_internal_fn.hideTooltip = function () {\n        this.tooltip.style(\"display\", \"none\");\n    };\n\n    c3_chart_internal_fn.initLegend = function () {\n        var $$ = this;\n        $$.legendItemTextBox = {};\n        $$.legendHasRendered = false;\n        $$.legend = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('legend'));\n        if (!$$.config.legend_show) {\n            $$.legend.style('visibility', 'hidden');\n            $$.hiddenLegendIds = $$.mapToIds($$.data.targets);\n            return;\n        }\n        // MEMO: call here to update legend box and tranlate for all\n        // MEMO: translate will be upated by this, so transform not needed in updateLegend()\n        $$.updateLegendWithDefaults();\n    };\n    c3_chart_internal_fn.updateLegendWithDefaults = function () {\n        var $$ = this;\n        $$.updateLegend($$.mapToIds($$.data.targets), {withTransform: false, withTransitionForTransform: false, withTransition: false});\n    };\n    c3_chart_internal_fn.updateSizeForLegend = function (legendHeight, legendWidth) {\n        var $$ = this, config = $$.config, insetLegendPosition = {\n            top: $$.isLegendTop ? $$.getCurrentPaddingTop() + config.legend_inset_y + 5.5 : $$.currentHeight - legendHeight - $$.getCurrentPaddingBottom() - config.legend_inset_y,\n            left: $$.isLegendLeft ? $$.getCurrentPaddingLeft() + config.legend_inset_x + 0.5 : $$.currentWidth - legendWidth - $$.getCurrentPaddingRight() - config.legend_inset_x + 0.5\n        };\n\n        $$.margin3 = {\n            top: $$.isLegendRight ? 0 : $$.isLegendInset ? insetLegendPosition.top : $$.currentHeight - legendHeight,\n            right: NaN,\n            bottom: 0,\n            left: $$.isLegendRight ? $$.currentWidth - legendWidth : $$.isLegendInset ? insetLegendPosition.left : 0\n        };\n    };\n    c3_chart_internal_fn.transformLegend = function (withTransition) {\n        var $$ = this;\n        (withTransition ? $$.legend.transition() : $$.legend).attr(\"transform\", $$.getTranslate('legend'));\n    };\n    c3_chart_internal_fn.updateLegendStep = function (step) {\n        this.legendStep = step;\n    };\n    c3_chart_internal_fn.updateLegendItemWidth = function (w) {\n        this.legendItemWidth = w;\n    };\n    c3_chart_internal_fn.updateLegendItemHeight = function (h) {\n        this.legendItemHeight = h;\n    };\n    c3_chart_internal_fn.getLegendWidth = function () {\n        var $$ = this;\n        return $$.config.legend_show ? $$.isLegendRight || $$.isLegendInset ? $$.legendItemWidth * ($$.legendStep + 1) : $$.currentWidth : 0;\n    };\n    c3_chart_internal_fn.getLegendHeight = function () {\n        var $$ = this, h = 0;\n        if ($$.config.legend_show) {\n            if ($$.isLegendRight) {\n                h = $$.currentHeight;\n            } else {\n                h = Math.max(20, $$.legendItemHeight) * ($$.legendStep + 1);\n            }\n        }\n        return h;\n    };\n    c3_chart_internal_fn.opacityForLegend = function (legendItem) {\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 1;\n    };\n    c3_chart_internal_fn.opacityForUnfocusedLegend = function (legendItem) {\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 0.3;\n    };\n    c3_chart_internal_fn.toggleFocusLegend = function (targetIds, focus) {\n        var $$ = this;\n        targetIds = $$.mapToTargetIds(targetIds);\n        $$.legend.selectAll('.' + CLASS.legendItem)\n            .filter(function (id) { return targetIds.indexOf(id) >= 0; })\n            .classed(CLASS.legendItemFocused, focus)\n          .transition().duration(100)\n            .style('opacity', function () {\n                var opacity = focus ? $$.opacityForLegend : $$.opacityForUnfocusedLegend;\n                return opacity.call($$, $$.d3.select(this));\n            });\n    };\n    c3_chart_internal_fn.revertLegend = function () {\n        var $$ = this, d3 = $$.d3;\n        $$.legend.selectAll('.' + CLASS.legendItem)\n            .classed(CLASS.legendItemFocused, false)\n            .transition().duration(100)\n            .style('opacity', function () { return $$.opacityForLegend(d3.select(this)); });\n    };\n    c3_chart_internal_fn.showLegend = function (targetIds) {\n        var $$ = this, config = $$.config;\n        if (!config.legend_show) {\n            config.legend_show = true;\n            $$.legend.style('visibility', 'visible');\n            if (!$$.legendHasRendered) {\n                $$.updateLegendWithDefaults();\n            }\n        }\n        $$.removeHiddenLegendIds(targetIds);\n        $$.legend.selectAll($$.selectorLegends(targetIds))\n            .style('visibility', 'visible')\n            .transition()\n            .style('opacity', function () { return $$.opacityForLegend($$.d3.select(this)); });\n    };\n    c3_chart_internal_fn.hideLegend = function (targetIds) {\n        var $$ = this, config = $$.config;\n        if (config.legend_show && isEmpty(targetIds)) {\n            config.legend_show = false;\n            $$.legend.style('visibility', 'hidden');\n        }\n        $$.addHiddenLegendIds(targetIds);\n        $$.legend.selectAll($$.selectorLegends(targetIds))\n            .style('opacity', 0)\n            .style('visibility', 'hidden');\n    };\n    c3_chart_internal_fn.clearLegendItemTextBoxCache = function () {\n        this.legendItemTextBox = {};\n    };\n    c3_chart_internal_fn.updateLegend = function (targetIds, options, transitions) {\n        var $$ = this, config = $$.config;\n        var xForLegend, xForLegendText, xForLegendRect, yForLegend, yForLegendText, yForLegendRect, x1ForLegendTile, x2ForLegendTile, yForLegendTile;\n        var paddingTop = 4, paddingRight = 10, maxWidth = 0, maxHeight = 0, posMin = 10, tileWidth = config.legend_item_tile_width + 5;\n        var l, totalLength = 0, offsets = {}, widths = {}, heights = {}, margins = [0], steps = {}, step = 0;\n        var withTransition, withTransitionForTransform;\n        var texts, rects, tiles, background;\n\n        // Skip elements when their name is set to null\n        targetIds = targetIds.filter(function(id) {\n            return !isDefined(config.data_names[id]) || config.data_names[id] !== null;\n        });\n\n        options = options || {};\n        withTransition = getOption(options, \"withTransition\", true);\n        withTransitionForTransform = getOption(options, \"withTransitionForTransform\", true);\n\n        function getTextBox(textElement, id) {\n            if (!$$.legendItemTextBox[id]) {\n                $$.legendItemTextBox[id] = $$.getTextRect(textElement.textContent, CLASS.legendItem, textElement);\n            }\n            return $$.legendItemTextBox[id];\n        }\n\n        function updatePositions(textElement, id, index) {\n            var reset = index === 0, isLast = index === targetIds.length - 1,\n                box = getTextBox(textElement, id),\n                itemWidth = box.width + tileWidth + (isLast && !($$.isLegendRight || $$.isLegendInset) ? 0 : paddingRight) + config.legend_padding,\n                itemHeight = box.height + paddingTop,\n                itemLength = $$.isLegendRight || $$.isLegendInset ? itemHeight : itemWidth,\n                areaLength = $$.isLegendRight || $$.isLegendInset ? $$.getLegendHeight() : $$.getLegendWidth(),\n                margin, maxLength;\n\n            // MEMO: care about condifion of step, totalLength\n            function updateValues(id, withoutStep) {\n                if (!withoutStep) {\n                    margin = (areaLength - totalLength - itemLength) / 2;\n                    if (margin < posMin) {\n                        margin = (areaLength - itemLength) / 2;\n                        totalLength = 0;\n                        step++;\n                    }\n                }\n                steps[id] = step;\n                margins[step] = $$.isLegendInset ? 10 : margin;\n                offsets[id] = totalLength;\n                totalLength += itemLength;\n            }\n\n            if (reset) {\n                totalLength = 0;\n                step = 0;\n                maxWidth = 0;\n                maxHeight = 0;\n            }\n\n            if (config.legend_show && !$$.isLegendToShow(id)) {\n                widths[id] = heights[id] = steps[id] = offsets[id] = 0;\n                return;\n            }\n\n            widths[id] = itemWidth;\n            heights[id] = itemHeight;\n\n            if (!maxWidth || itemWidth >= maxWidth) { maxWidth = itemWidth; }\n            if (!maxHeight || itemHeight >= maxHeight) { maxHeight = itemHeight; }\n            maxLength = $$.isLegendRight || $$.isLegendInset ? maxHeight : maxWidth;\n\n            if (config.legend_equally) {\n                Object.keys(widths).forEach(function (id) { widths[id] = maxWidth; });\n                Object.keys(heights).forEach(function (id) { heights[id] = maxHeight; });\n                margin = (areaLength - maxLength * targetIds.length) / 2;\n                if (margin < posMin) {\n                    totalLength = 0;\n                    step = 0;\n                    targetIds.forEach(function (id) { updateValues(id); });\n                }\n                else {\n                    updateValues(id, true);\n                }\n            } else {\n                updateValues(id);\n            }\n        }\n\n        if ($$.isLegendInset) {\n            step = config.legend_inset_step ? config.legend_inset_step : targetIds.length;\n            $$.updateLegendStep(step);\n        }\n\n        if ($$.isLegendRight) {\n            xForLegend = function (id) { return maxWidth * steps[id]; };\n            yForLegend = function (id) { return margins[steps[id]] + offsets[id]; };\n        } else if ($$.isLegendInset) {\n            xForLegend = function (id) { return maxWidth * steps[id] + 10; };\n            yForLegend = function (id) { return margins[steps[id]] + offsets[id]; };\n        } else {\n            xForLegend = function (id) { return margins[steps[id]] + offsets[id]; };\n            yForLegend = function (id) { return maxHeight * steps[id]; };\n        }\n        xForLegendText = function (id, i) { return xForLegend(id, i) + 4 + config.legend_item_tile_width; };\n        yForLegendText = function (id, i) { return yForLegend(id, i) + 9; };\n        xForLegendRect = function (id, i) { return xForLegend(id, i); };\n        yForLegendRect = function (id, i) { return yForLegend(id, i) - 5; };\n        x1ForLegendTile = function (id, i) { return xForLegend(id, i) - 2; };\n        x2ForLegendTile = function (id, i) { return xForLegend(id, i) - 2 + config.legend_item_tile_width; };\n        yForLegendTile = function (id, i) { return yForLegend(id, i) + 4; };\n\n        // Define g for legend area\n        l = $$.legend.selectAll('.' + CLASS.legendItem)\n            .data(targetIds)\n            .enter().append('g')\n            .attr('class', function (id) { return $$.generateClass(CLASS.legendItem, id); })\n            .style('visibility', function (id) { return $$.isLegendToShow(id) ? 'visible' : 'hidden'; })\n            .style('cursor', 'pointer')\n            .on('click', function (id) {\n                if (config.legend_item_onclick) {\n                    config.legend_item_onclick.call($$, id);\n                } else {\n                    if ($$.d3.event.altKey) {\n                        $$.api.hide();\n                        $$.api.show(id);\n                    } else {\n                        $$.api.toggle(id);\n                        $$.isTargetToShow(id) ? $$.api.focus(id) : $$.api.revert();\n                    }\n                }\n            })\n            .on('mouseover', function (id) {\n                if (config.legend_item_onmouseover) {\n                    config.legend_item_onmouseover.call($$, id);\n                }\n                else {\n                    $$.d3.select(this).classed(CLASS.legendItemFocused, true);\n                    if (!$$.transiting && $$.isTargetToShow(id)) {\n                        $$.api.focus(id);\n                    }\n                }\n            })\n            .on('mouseout', function (id) {\n                if (config.legend_item_onmouseout) {\n                    config.legend_item_onmouseout.call($$, id);\n                }\n                else {\n                    $$.d3.select(this).classed(CLASS.legendItemFocused, false);\n                    $$.api.revert();\n                }\n            });\n        l.append('text')\n            .text(function (id) { return isDefined(config.data_names[id]) ? config.data_names[id] : id; })\n            .each(function (id, i) { updatePositions(this, id, i); })\n            .style(\"pointer-events\", \"none\")\n            .attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendText : -200)\n            .attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendText);\n        l.append('rect')\n            .attr(\"class\", CLASS.legendItemEvent)\n            .style('fill-opacity', 0)\n            .attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendRect : -200)\n            .attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendRect);\n        l.append('line')\n            .attr('class', CLASS.legendItemTile)\n            .style('stroke', $$.color)\n            .style(\"pointer-events\", \"none\")\n            .attr('x1', $$.isLegendRight || $$.isLegendInset ? x1ForLegendTile : -200)\n            .attr('y1', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile)\n            .attr('x2', $$.isLegendRight || $$.isLegendInset ? x2ForLegendTile : -200)\n            .attr('y2', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile)\n            .attr('stroke-width', config.legend_item_tile_height);\n\n        // Set background for inset legend\n        background = $$.legend.select('.' + CLASS.legendBackground + ' rect');\n        if ($$.isLegendInset && maxWidth > 0 && background.size() === 0) {\n            background = $$.legend.insert('g', '.' + CLASS.legendItem)\n                .attr(\"class\", CLASS.legendBackground)\n                .append('rect');\n        }\n\n        texts = $$.legend.selectAll('text')\n            .data(targetIds)\n            .text(function (id) { return isDefined(config.data_names[id]) ? config.data_names[id] : id; }) // MEMO: needed for update\n            .each(function (id, i) { updatePositions(this, id, i); });\n        (withTransition ? texts.transition() : texts)\n            .attr('x', xForLegendText)\n            .attr('y', yForLegendText);\n\n        rects = $$.legend.selectAll('rect.' + CLASS.legendItemEvent)\n            .data(targetIds);\n        (withTransition ? rects.transition() : rects)\n            .attr('width', function (id) { return widths[id]; })\n            .attr('height', function (id) { return heights[id]; })\n            .attr('x', xForLegendRect)\n            .attr('y', yForLegendRect);\n\n        tiles = $$.legend.selectAll('line.' + CLASS.legendItemTile)\n                .data(targetIds);\n            (withTransition ? tiles.transition() : tiles)\n                .style('stroke', $$.color)\n                .attr('x1', x1ForLegendTile)\n                .attr('y1', yForLegendTile)\n                .attr('x2', x2ForLegendTile)\n                .attr('y2', yForLegendTile);\n\n        if (background) {\n            (withTransition ? background.transition() : background)\n                .attr('height', $$.getLegendHeight() - 12)\n                .attr('width', maxWidth * (step + 1) + 10);\n        }\n\n        // toggle legend state\n        $$.legend.selectAll('.' + CLASS.legendItem)\n            .classed(CLASS.legendItemHidden, function (id) { return !$$.isTargetToShow(id); });\n\n        // Update all to reflect change of legend\n        $$.updateLegendItemWidth(maxWidth);\n        $$.updateLegendItemHeight(maxHeight);\n        $$.updateLegendStep(step);\n        // Update size and scale\n        $$.updateSizes();\n        $$.updateScales();\n        $$.updateSvgSize();\n        // Update g positions\n        $$.transformAll(withTransitionForTransform, transitions);\n        $$.legendHasRendered = true;\n    };\n\n    c3_chart_internal_fn.initTitle = function () {\n        var $$ = this;\n        $$.title = $$.svg.append(\"text\")\n              .text($$.config.title_text)\n              .attr(\"class\", $$.CLASS.title);\n    };\n    c3_chart_internal_fn.redrawTitle = function () {\n        var $$ = this;\n        $$.title\n              .attr(\"x\", $$.xForTitle.bind($$))\n              .attr(\"y\", $$.yForTitle.bind($$));\n    };\n    c3_chart_internal_fn.xForTitle = function () {\n        var $$ = this, config = $$.config, position = config.title_position || 'left', x;\n        if (position.indexOf('right') >= 0) {\n            x = $$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width - config.title_padding.right;\n        } else if (position.indexOf('center') >= 0) {\n            x = ($$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width) / 2;\n        } else { // left\n            x = config.title_padding.left;\n        }\n        return x;\n    };\n    c3_chart_internal_fn.yForTitle = function () {\n        var $$ = this;\n        return $$.config.title_padding.top + $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).height;\n    };\n    c3_chart_internal_fn.getTitlePadding = function() {\n        var $$ = this;\n        return $$.yForTitle() + $$.config.title_padding.bottom;\n    };\n\n    function Axis(owner) {\n        API.call(this, owner);\n    }\n\n    inherit(API, Axis);\n\n    Axis.prototype.init = function init() {\n\n        var $$ = this.owner, config = $$.config, main = $$.main;\n        $$.axes.x = main.append(\"g\")\n            .attr(\"class\", CLASS.axis + ' ' + CLASS.axisX)\n            .attr(\"clip-path\", $$.clipPathForXAxis)\n            .attr(\"transform\", $$.getTranslate('x'))\n            .style(\"visibility\", config.axis_x_show ? 'visible' : 'hidden');\n        $$.axes.x.append(\"text\")\n            .attr(\"class\", CLASS.axisXLabel)\n            .attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\")\n            .style(\"text-anchor\", this.textAnchorForXAxisLabel.bind(this));\n        $$.axes.y = main.append(\"g\")\n            .attr(\"class\", CLASS.axis + ' ' + CLASS.axisY)\n            .attr(\"clip-path\", config.axis_y_inner ? \"\" : $$.clipPathForYAxis)\n            .attr(\"transform\", $$.getTranslate('y'))\n            .style(\"visibility\", config.axis_y_show ? 'visible' : 'hidden');\n        $$.axes.y.append(\"text\")\n            .attr(\"class\", CLASS.axisYLabel)\n            .attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\")\n            .style(\"text-anchor\", this.textAnchorForYAxisLabel.bind(this));\n\n        $$.axes.y2 = main.append(\"g\")\n            .attr(\"class\", CLASS.axis + ' ' + CLASS.axisY2)\n            // clip-path?\n            .attr(\"transform\", $$.getTranslate('y2'))\n            .style(\"visibility\", config.axis_y2_show ? 'visible' : 'hidden');\n        $$.axes.y2.append(\"text\")\n            .attr(\"class\", CLASS.axisY2Label)\n            .attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\")\n            .style(\"text-anchor\", this.textAnchorForY2AxisLabel.bind(this));\n    };\n    Axis.prototype.getXAxis = function getXAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n        var $$ = this.owner, config = $$.config,\n            axisParams = {\n                isCategory: $$.isCategorized(),\n                withOuterTick: withOuterTick,\n                tickMultiline: config.axis_x_tick_multiline,\n                tickWidth: config.axis_x_tick_width,\n                tickTextRotate: withoutRotateTickText ? 0 : config.axis_x_tick_rotate,\n                withoutTransition: withoutTransition,\n            },\n            axis = c3_axis($$.d3, axisParams).scale(scale).orient(orient);\n\n        if ($$.isTimeSeries() && tickValues && typeof tickValues !== \"function\") {\n            tickValues = tickValues.map(function (v) { return $$.parseDate(v); });\n        }\n\n        // Set tick\n        axis.tickFormat(tickFormat).tickValues(tickValues);\n        if ($$.isCategorized()) {\n            axis.tickCentered(config.axis_x_tick_centered);\n            if (isEmpty(config.axis_x_tick_culling)) {\n                config.axis_x_tick_culling = false;\n            }\n        }\n\n        return axis;\n    };\n    Axis.prototype.updateXAxisTickValues = function updateXAxisTickValues(targets, axis) {\n        var $$ = this.owner, config = $$.config, tickValues;\n        if (config.axis_x_tick_fit || config.axis_x_tick_count) {\n            tickValues = this.generateTickValues($$.mapTargetsToUniqueXs(targets), config.axis_x_tick_count, $$.isTimeSeries());\n        }\n        if (axis) {\n            axis.tickValues(tickValues);\n        } else {\n            $$.xAxis.tickValues(tickValues);\n            $$.subXAxis.tickValues(tickValues);\n        }\n        return tickValues;\n    };\n    Axis.prototype.getYAxis = function getYAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n        var $$ = this.owner, config = $$.config,\n            axisParams = {\n                withOuterTick: withOuterTick,\n                withoutTransition: withoutTransition,\n                tickTextRotate: withoutRotateTickText ? 0 : config.axis_y_tick_rotate\n            },\n            axis = c3_axis($$.d3, axisParams).scale(scale).orient(orient).tickFormat(tickFormat);\n        if ($$.isTimeSeriesY()) {\n            axis.ticks($$.d3.time[config.axis_y_tick_time_value], config.axis_y_tick_time_interval);\n        } else {\n            axis.tickValues(tickValues);\n        }\n        return axis;\n    };\n    Axis.prototype.getId = function getId(id) {\n        var config = this.owner.config;\n        return id in config.data_axes ? config.data_axes[id] : 'y';\n    };\n    Axis.prototype.getXAxisTickFormat = function getXAxisTickFormat() {\n        var $$ = this.owner, config = $$.config,\n            format = $$.isTimeSeries() ? $$.defaultAxisTimeFormat : $$.isCategorized() ? $$.categoryName : function (v) { return v < 0 ? v.toFixed(0) : v; };\n        if (config.axis_x_tick_format) {\n            if (isFunction(config.axis_x_tick_format)) {\n                format = config.axis_x_tick_format;\n            } else if ($$.isTimeSeries()) {\n                format = function (date) {\n                    return date ? $$.axisTimeFormat(config.axis_x_tick_format)(date) : \"\";\n                };\n            }\n        }\n        return isFunction(format) ? function (v) { return format.call($$, v); } : format;\n    };\n    Axis.prototype.getTickValues = function getTickValues(tickValues, axis) {\n        return tickValues ? tickValues : axis ? axis.tickValues() : undefined;\n    };\n    Axis.prototype.getXAxisTickValues = function getXAxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_x_tick_values, this.owner.xAxis);\n    };\n    Axis.prototype.getYAxisTickValues = function getYAxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_y_tick_values, this.owner.yAxis);\n    };\n    Axis.prototype.getY2AxisTickValues = function getY2AxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_y2_tick_values, this.owner.y2Axis);\n    };\n    Axis.prototype.getLabelOptionByAxisId = function getLabelOptionByAxisId(axisId) {\n        var $$ = this.owner, config = $$.config, option;\n        if (axisId === 'y') {\n            option = config.axis_y_label;\n        } else if (axisId === 'y2') {\n            option = config.axis_y2_label;\n        } else if (axisId === 'x') {\n            option = config.axis_x_label;\n        }\n        return option;\n    };\n    Axis.prototype.getLabelText = function getLabelText(axisId) {\n        var option = this.getLabelOptionByAxisId(axisId);\n        return isString(option) ? option : option ? option.text : null;\n    };\n    Axis.prototype.setLabelText = function setLabelText(axisId, text) {\n        var $$ = this.owner, config = $$.config,\n            option = this.getLabelOptionByAxisId(axisId);\n        if (isString(option)) {\n            if (axisId === 'y') {\n                config.axis_y_label = text;\n            } else if (axisId === 'y2') {\n                config.axis_y2_label = text;\n            } else if (axisId === 'x') {\n                config.axis_x_label = text;\n            }\n        } else if (option) {\n            option.text = text;\n        }\n    };\n    Axis.prototype.getLabelPosition = function getLabelPosition(axisId, defaultPosition) {\n        var option = this.getLabelOptionByAxisId(axisId),\n            position = (option && typeof option === 'object' && option.position) ? option.position : defaultPosition;\n        return {\n            isInner: position.indexOf('inner') >= 0,\n            isOuter: position.indexOf('outer') >= 0,\n            isLeft: position.indexOf('left') >= 0,\n            isCenter: position.indexOf('center') >= 0,\n            isRight: position.indexOf('right') >= 0,\n            isTop: position.indexOf('top') >= 0,\n            isMiddle: position.indexOf('middle') >= 0,\n            isBottom: position.indexOf('bottom') >= 0\n        };\n    };\n    Axis.prototype.getXAxisLabelPosition = function getXAxisLabelPosition() {\n        return this.getLabelPosition('x', this.owner.config.axis_rotated ? 'inner-top' : 'inner-right');\n    };\n    Axis.prototype.getYAxisLabelPosition = function getYAxisLabelPosition() {\n        return this.getLabelPosition('y', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n    };\n    Axis.prototype.getY2AxisLabelPosition = function getY2AxisLabelPosition() {\n        return this.getLabelPosition('y2', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n    };\n    Axis.prototype.getLabelPositionById = function getLabelPositionById(id) {\n        return id === 'y2' ? this.getY2AxisLabelPosition() : id === 'y' ? this.getYAxisLabelPosition() : this.getXAxisLabelPosition();\n    };\n    Axis.prototype.textForXAxisLabel = function textForXAxisLabel() {\n        return this.getLabelText('x');\n    };\n    Axis.prototype.textForYAxisLabel = function textForYAxisLabel() {\n        return this.getLabelText('y');\n    };\n    Axis.prototype.textForY2AxisLabel = function textForY2AxisLabel() {\n        return this.getLabelText('y2');\n    };\n    Axis.prototype.xForAxisLabel = function xForAxisLabel(forHorizontal, position) {\n        var $$ = this.owner;\n        if (forHorizontal) {\n            return position.isLeft ? 0 : position.isCenter ? $$.width / 2 : $$.width;\n        } else {\n            return position.isBottom ? -$$.height : position.isMiddle ? -$$.height / 2 : 0;\n        }\n    };\n    Axis.prototype.dxForAxisLabel = function dxForAxisLabel(forHorizontal, position) {\n        if (forHorizontal) {\n            return position.isLeft ? \"0.5em\" : position.isRight ? \"-0.5em\" : \"0\";\n        } else {\n            return position.isTop ? \"-0.5em\" : position.isBottom ? \"0.5em\" : \"0\";\n        }\n    };\n    Axis.prototype.textAnchorForAxisLabel = function textAnchorForAxisLabel(forHorizontal, position) {\n        if (forHorizontal) {\n            return position.isLeft ? 'start' : position.isCenter ? 'middle' : 'end';\n        } else {\n            return position.isBottom ? 'start' : position.isMiddle ? 'middle' : 'end';\n        }\n    };\n    Axis.prototype.xForXAxisLabel = function xForXAxisLabel() {\n        return this.xForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    Axis.prototype.xForYAxisLabel = function xForYAxisLabel() {\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    Axis.prototype.xForY2AxisLabel = function xForY2AxisLabel() {\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    Axis.prototype.dxForXAxisLabel = function dxForXAxisLabel() {\n        return this.dxForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    Axis.prototype.dxForYAxisLabel = function dxForYAxisLabel() {\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    Axis.prototype.dxForY2AxisLabel = function dxForY2AxisLabel() {\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    Axis.prototype.dyForXAxisLabel = function dyForXAxisLabel() {\n        var $$ = this.owner, config = $$.config,\n            position = this.getXAxisLabelPosition();\n        if (config.axis_rotated) {\n            return position.isInner ? \"1.2em\" : -25 - this.getMaxTickWidth('x');\n        } else {\n            return position.isInner ? \"-0.5em\" : config.axis_x_height ? config.axis_x_height - 10 : \"3em\";\n        }\n    };\n    Axis.prototype.dyForYAxisLabel = function dyForYAxisLabel() {\n        var $$ = this.owner,\n            position = this.getYAxisLabelPosition();\n        if ($$.config.axis_rotated) {\n            return position.isInner ? \"-0.5em\" : \"3em\";\n        } else {\n            return position.isInner ? \"1.2em\" : -10 - ($$.config.axis_y_inner ? 0 : (this.getMaxTickWidth('y') + 10));\n        }\n    };\n    Axis.prototype.dyForY2AxisLabel = function dyForY2AxisLabel() {\n        var $$ = this.owner,\n            position = this.getY2AxisLabelPosition();\n        if ($$.config.axis_rotated) {\n            return position.isInner ? \"1.2em\" : \"-2.2em\";\n        } else {\n            return position.isInner ? \"-0.5em\" : 15 + ($$.config.axis_y2_inner ? 0 : (this.getMaxTickWidth('y2') + 15));\n        }\n    };\n    Axis.prototype.textAnchorForXAxisLabel = function textAnchorForXAxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel(!$$.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    Axis.prototype.textAnchorForYAxisLabel = function textAnchorForYAxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    Axis.prototype.textAnchorForY2AxisLabel = function textAnchorForY2AxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    Axis.prototype.getMaxTickWidth = function getMaxTickWidth(id, withoutRecompute) {\n        var $$ = this.owner, config = $$.config,\n            maxWidth = 0, targetsToShow, scale, axis, dummy, svg;\n        if (withoutRecompute && $$.currentMaxTickWidths[id]) {\n            return $$.currentMaxTickWidths[id];\n        }\n        if ($$.svg) {\n            targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            if (id === 'y') {\n                scale = $$.y.copy().domain($$.getYDomain(targetsToShow, 'y'));\n                axis = this.getYAxis(scale, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, false, true, true);\n            } else if (id === 'y2') {\n                scale = $$.y2.copy().domain($$.getYDomain(targetsToShow, 'y2'));\n                axis = this.getYAxis(scale, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, false, true, true);\n            } else {\n                scale = $$.x.copy().domain($$.getXDomain(targetsToShow));\n                axis = this.getXAxis(scale, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, false, true, true);\n                this.updateXAxisTickValues(targetsToShow, axis);\n            }\n            dummy = $$.d3.select('body').append('div').classed('c3', true);\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\n            svg.append('g').call(axis).each(function () {\n                $$.d3.select(this).selectAll('text').each(function () {\n                    var box = this.getBoundingClientRect();\n                    if (maxWidth < box.width) { maxWidth = box.width; }\n                });\n                dummy.remove();\n            });\n        }\n        $$.currentMaxTickWidths[id] = maxWidth <= 0 ? $$.currentMaxTickWidths[id] : maxWidth;\n        return $$.currentMaxTickWidths[id];\n    };\n\n    Axis.prototype.updateLabels = function updateLabels(withTransition) {\n        var $$ = this.owner;\n        var axisXLabel = $$.main.select('.' + CLASS.axisX + ' .' + CLASS.axisXLabel),\n            axisYLabel = $$.main.select('.' + CLASS.axisY + ' .' + CLASS.axisYLabel),\n            axisY2Label = $$.main.select('.' + CLASS.axisY2 + ' .' + CLASS.axisY2Label);\n        (withTransition ? axisXLabel.transition() : axisXLabel)\n            .attr(\"x\", this.xForXAxisLabel.bind(this))\n            .attr(\"dx\", this.dxForXAxisLabel.bind(this))\n            .attr(\"dy\", this.dyForXAxisLabel.bind(this))\n            .text(this.textForXAxisLabel.bind(this));\n        (withTransition ? axisYLabel.transition() : axisYLabel)\n            .attr(\"x\", this.xForYAxisLabel.bind(this))\n            .attr(\"dx\", this.dxForYAxisLabel.bind(this))\n            .attr(\"dy\", this.dyForYAxisLabel.bind(this))\n            .text(this.textForYAxisLabel.bind(this));\n        (withTransition ? axisY2Label.transition() : axisY2Label)\n            .attr(\"x\", this.xForY2AxisLabel.bind(this))\n            .attr(\"dx\", this.dxForY2AxisLabel.bind(this))\n            .attr(\"dy\", this.dyForY2AxisLabel.bind(this))\n            .text(this.textForY2AxisLabel.bind(this));\n    };\n    Axis.prototype.getPadding = function getPadding(padding, key, defaultValue, domainLength) {\n        var p = typeof padding === 'number' ? padding : padding[key];\n        if (!isValue(p)) {\n            return defaultValue;\n        }\n        if (padding.unit === 'ratio') {\n            return padding[key] * domainLength;\n        }\n        // assume padding is pixels if unit is not specified\n        return this.convertPixelsToAxisPadding(p, domainLength);\n    };\n    Axis.prototype.convertPixelsToAxisPadding = function convertPixelsToAxisPadding(pixels, domainLength) {\n        var $$ = this.owner,\n            length = $$.config.axis_rotated ? $$.width : $$.height;\n        return domainLength * (pixels / length);\n    };\n    Axis.prototype.generateTickValues = function generateTickValues(values, tickCount, forTimeSeries) {\n        var tickValues = values, targetCount, start, end, count, interval, i, tickValue;\n        if (tickCount) {\n            targetCount = isFunction(tickCount) ? tickCount() : tickCount;\n            // compute ticks according to tickCount\n            if (targetCount === 1) {\n                tickValues = [values[0]];\n            } else if (targetCount === 2) {\n                tickValues = [values[0], values[values.length - 1]];\n            } else if (targetCount > 2) {\n                count = targetCount - 2;\n                start = values[0];\n                end = values[values.length - 1];\n                interval = (end - start) / (count + 1);\n                // re-construct unique values\n                tickValues = [start];\n                for (i = 0; i < count; i++) {\n                    tickValue = +start + interval * (i + 1);\n                    tickValues.push(forTimeSeries ? new Date(tickValue) : tickValue);\n                }\n                tickValues.push(end);\n            }\n        }\n        if (!forTimeSeries) { tickValues = tickValues.sort(function (a, b) { return a - b; }); }\n        return tickValues;\n    };\n    Axis.prototype.generateTransitions = function generateTransitions(duration) {\n        var $$ = this.owner, axes = $$.axes;\n        return {\n            axisX: duration ? axes.x.transition().duration(duration) : axes.x,\n            axisY: duration ? axes.y.transition().duration(duration) : axes.y,\n            axisY2: duration ? axes.y2.transition().duration(duration) : axes.y2,\n            axisSubX: duration ? axes.subx.transition().duration(duration) : axes.subx\n        };\n    };\n    Axis.prototype.redraw = function redraw(transitions, isHidden) {\n        var $$ = this.owner;\n        $$.axes.x.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.y.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.y2.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.subx.style(\"opacity\", isHidden ? 0 : 1);\n        transitions.axisX.call($$.xAxis);\n        transitions.axisY.call($$.yAxis);\n        transitions.axisY2.call($$.y2Axis);\n        transitions.axisSubX.call($$.subXAxis);\n    };\n\n    c3_chart_internal_fn.getClipPath = function (id) {\n        var isIE9 = window.navigator.appVersion.toLowerCase().indexOf(\"msie 9.\") >= 0;\n        return \"url(\" + (isIE9 ? \"\" : document.URL.split('#')[0]) + \"#\" + id + \")\";\n    };\n    c3_chart_internal_fn.appendClip = function (parent, id) {\n        return parent.append(\"clipPath\").attr(\"id\", id).append(\"rect\");\n    };\n    c3_chart_internal_fn.getAxisClipX = function (forHorizontal) {\n        // axis line width + padding for left\n        var left = Math.max(30, this.margin.left);\n        return forHorizontal ? -(1 + left) : -(left - 1);\n    };\n    c3_chart_internal_fn.getAxisClipY = function (forHorizontal) {\n        return forHorizontal ? -20 : -this.margin.top;\n    };\n    c3_chart_internal_fn.getXAxisClipX = function () {\n        var $$ = this;\n        return $$.getAxisClipX(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getXAxisClipY = function () {\n        var $$ = this;\n        return $$.getAxisClipY(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipX = function () {\n        var $$ = this;\n        return $$.config.axis_y_inner ? -1 : $$.getAxisClipX($$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipY = function () {\n        var $$ = this;\n        return $$.getAxisClipY($$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getAxisClipWidth = function (forHorizontal) {\n        var $$ = this,\n            left = Math.max(30, $$.margin.left),\n            right = Math.max(30, $$.margin.right);\n        // width + axis line width + padding for left/right\n        return forHorizontal ? $$.width + 2 + left + right : $$.margin.left + 20;\n    };\n    c3_chart_internal_fn.getAxisClipHeight = function (forHorizontal) {\n        // less than 20 is not enough to show the axis label 'outer' without legend\n        return (forHorizontal ? this.margin.bottom : (this.margin.top + this.height)) + 20;\n    };\n    c3_chart_internal_fn.getXAxisClipWidth = function () {\n        var $$ = this;\n        return $$.getAxisClipWidth(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getXAxisClipHeight = function () {\n        var $$ = this;\n        return $$.getAxisClipHeight(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipWidth = function () {\n        var $$ = this;\n        return $$.getAxisClipWidth($$.config.axis_rotated) + ($$.config.axis_y_inner ? 20 : 0);\n    };\n    c3_chart_internal_fn.getYAxisClipHeight = function () {\n        var $$ = this;\n        return $$.getAxisClipHeight($$.config.axis_rotated);\n    };\n\n    c3_chart_internal_fn.initPie = function () {\n        var $$ = this, d3 = $$.d3, config = $$.config;\n        $$.pie = d3.layout.pie().value(function (d) {\n            return d.values.reduce(function (a, b) { return a + b.value; }, 0);\n        });\n        if (!config.data_order) {\n            $$.pie.sort(null);\n        }\n    };\n\n    c3_chart_internal_fn.updateRadius = function () {\n        var $$ = this, config = $$.config,\n            w = config.gauge_width || config.donut_width;\n        $$.radiusExpanded = Math.min($$.arcWidth, $$.arcHeight) / 2;\n        $$.radius = $$.radiusExpanded * 0.95;\n        $$.innerRadiusRatio = w ? ($$.radius - w) / $$.radius : 0.6;\n        $$.innerRadius = $$.hasType('donut') || $$.hasType('gauge') ? $$.radius * $$.innerRadiusRatio : 0;\n    };\n\n    c3_chart_internal_fn.updateArc = function () {\n        var $$ = this;\n        $$.svgArc = $$.getSvgArc();\n        $$.svgArcExpanded = $$.getSvgArcExpanded();\n        $$.svgArcExpandedSub = $$.getSvgArcExpanded(0.98);\n    };\n\n    c3_chart_internal_fn.updateAngle = function (d) {\n        var $$ = this, config = $$.config,\n            found = false, index = 0,\n            gMin, gMax, gTic, gValue;\n\n        if (!config) {\n            return null;\n        }\n\n        $$.pie($$.filterTargetsToShow($$.data.targets)).forEach(function (t) {\n            if (! found && t.data.id === d.data.id) {\n                found = true;\n                d = t;\n                d.index = index;\n            }\n            index++;\n        });\n        if (isNaN(d.startAngle)) {\n            d.startAngle = 0;\n        }\n        if (isNaN(d.endAngle)) {\n            d.endAngle = d.startAngle;\n        }\n        if ($$.isGaugeType(d.data)) {\n            gMin = config.gauge_min;\n            gMax = config.gauge_max;\n            gTic = (Math.PI * (config.gauge_fullCircle ? 2 : 1)) / (gMax - gMin);\n            gValue = d.value < gMin ? 0 : d.value < gMax ? d.value - gMin : (gMax - gMin);\n            d.startAngle = config.gauge_startingAngle;\n            d.endAngle = d.startAngle + gTic * gValue;\n        }\n        return found ? d : null;\n    };\n\n    c3_chart_internal_fn.getSvgArc = function () {\n        var $$ = this,\n            arc = $$.d3.svg.arc().outerRadius($$.radius).innerRadius($$.innerRadius),\n            newArc = function (d, withoutUpdate) {\n                var updated;\n                if (withoutUpdate) { return arc(d); } // for interpolate\n                updated = $$.updateAngle(d);\n                return updated ? arc(updated) : \"M 0 0\";\n            };\n        // TODO: extends all function\n        newArc.centroid = arc.centroid;\n        return newArc;\n    };\n\n    c3_chart_internal_fn.getSvgArcExpanded = function (rate) {\n        var $$ = this,\n            arc = $$.d3.svg.arc().outerRadius($$.radiusExpanded * (rate ? rate : 1)).innerRadius($$.innerRadius);\n        return function (d) {\n            var updated = $$.updateAngle(d);\n            return updated ? arc(updated) : \"M 0 0\";\n        };\n    };\n\n    c3_chart_internal_fn.getArc = function (d, withoutUpdate, force) {\n        return force || this.isArcType(d.data) ? this.svgArc(d, withoutUpdate) : \"M 0 0\";\n    };\n\n\n    c3_chart_internal_fn.transformForArcLabel = function (d) {\n        var $$ = this, config = $$.config,\n            updated = $$.updateAngle(d), c, x, y, h, ratio, translate = \"\";\n        if (updated && !$$.hasType('gauge')) {\n            c = this.svgArc.centroid(updated);\n            x = isNaN(c[0]) ? 0 : c[0];\n            y = isNaN(c[1]) ? 0 : c[1];\n            h = Math.sqrt(x * x + y * y);\n            if ($$.hasType('donut') && config.donut_label_ratio) {\n                ratio = isFunction(config.donut_label_ratio) ? config.donut_label_ratio(d, $$.radius, h) : config.donut_label_ratio;\n            } else if ($$.hasType('pie') && config.pie_label_ratio) {\n                ratio = isFunction(config.pie_label_ratio) ? config.pie_label_ratio(d, $$.radius, h) : config.pie_label_ratio;\n            } else {\n                ratio = $$.radius && h ? (36 / $$.radius > 0.375 ? 1.175 - 36 / $$.radius : 0.8) * $$.radius / h : 0;\n            }\n            translate = \"translate(\" + (x * ratio) +  ',' + (y * ratio) +  \")\";\n        }\n        return translate;\n    };\n\n    c3_chart_internal_fn.getArcRatio = function (d) {\n        var $$ = this,\n            config = $$.config,\n            whole = Math.PI * ($$.hasType('gauge') && !config.gauge_fullCircle ? 1 : 2);\n        return d ? (d.endAngle - d.startAngle) / whole : null;\n    };\n\n    c3_chart_internal_fn.convertToArcData = function (d) {\n        return this.addName({\n            id: d.data.id,\n            value: d.value,\n            ratio: this.getArcRatio(d),\n            index: d.index\n        });\n    };\n\n    c3_chart_internal_fn.textForArcLabel = function (d) {\n        var $$ = this,\n            updated, value, ratio, id, format;\n        if (! $$.shouldShowArcLabel()) { return \"\"; }\n        updated = $$.updateAngle(d);\n        value = updated ? updated.value : null;\n        ratio = $$.getArcRatio(updated);\n        id = d.data.id;\n        if (! $$.hasType('gauge') && ! $$.meetsArcLabelThreshold(ratio)) { return \"\"; }\n        format = $$.getArcLabelFormat();\n        return format ? format(value, ratio, id) : $$.defaultArcValueFormat(value, ratio);\n    };\n\n    c3_chart_internal_fn.expandArc = function (targetIds) {\n        var $$ = this, interval;\n\n        // MEMO: avoid to cancel transition\n        if ($$.transiting) {\n            interval = window.setInterval(function () {\n                if (!$$.transiting) {\n                    window.clearInterval(interval);\n                    if ($$.legend.selectAll('.c3-legend-item-focused').size() > 0) {\n                        $$.expandArc(targetIds);\n                    }\n                }\n            }, 10);\n            return;\n        }\n\n        targetIds = $$.mapToTargetIds(targetIds);\n\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).each(function (d) {\n            if (! $$.shouldExpand(d.data.id)) { return; }\n            $$.d3.select(this).selectAll('path')\n                .transition().duration($$.expandDuration(d.data.id))\n                .attr(\"d\", $$.svgArcExpanded)\n                .transition().duration($$.expandDuration(d.data.id) * 2)\n                .attr(\"d\", $$.svgArcExpandedSub)\n                .each(function (d) {\n                    if ($$.isDonutType(d.data)) {\n                        // callback here\n                    }\n                });\n        });\n    };\n\n    c3_chart_internal_fn.unexpandArc = function (targetIds) {\n        var $$ = this;\n\n        if ($$.transiting) { return; }\n\n        targetIds = $$.mapToTargetIds(targetIds);\n\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).selectAll('path')\n            .transition().duration(function(d) {\n                return $$.expandDuration(d.data.id);\n            })\n            .attr(\"d\", $$.svgArc);\n        $$.svg.selectAll('.' + CLASS.arc)\n            .style(\"opacity\", 1);\n    };\n\n    c3_chart_internal_fn.expandDuration = function (id) {\n        var $$ = this, config = $$.config;\n\n        if ($$.isDonutType(id)) {\n            return config.donut_expand_duration;\n        } else if ($$.isGaugeType(id)) {\n            return config.gauge_expand_duration;\n        } else if ($$.isPieType(id)) {\n            return config.pie_expand_duration;\n        } else {\n            return 50;\n        }\n\n    };\n\n    c3_chart_internal_fn.shouldExpand = function (id) {\n        var $$ = this, config = $$.config;\n        return ($$.isDonutType(id) && config.donut_expand) ||\n               ($$.isGaugeType(id) && config.gauge_expand) ||\n               ($$.isPieType(id) && config.pie_expand);\n    };\n\n    c3_chart_internal_fn.shouldShowArcLabel = function () {\n        var $$ = this, config = $$.config, shouldShow = true;\n        if ($$.hasType('donut')) {\n            shouldShow = config.donut_label_show;\n        } else if ($$.hasType('pie')) {\n            shouldShow = config.pie_label_show;\n        }\n        // when gauge, always true\n        return shouldShow;\n    };\n\n    c3_chart_internal_fn.meetsArcLabelThreshold = function (ratio) {\n        var $$ = this, config = $$.config,\n            threshold = $$.hasType('donut') ? config.donut_label_threshold : config.pie_label_threshold;\n        return ratio >= threshold;\n    };\n\n    c3_chart_internal_fn.getArcLabelFormat = function () {\n        var $$ = this, config = $$.config,\n            format = config.pie_label_format;\n        if ($$.hasType('gauge')) {\n            format = config.gauge_label_format;\n        } else if ($$.hasType('donut')) {\n            format = config.donut_label_format;\n        }\n        return format;\n    };\n\n    c3_chart_internal_fn.getArcTitle = function () {\n        var $$ = this;\n        return $$.hasType('donut') ? $$.config.donut_title : \"\";\n    };\n\n    c3_chart_internal_fn.updateTargetsForArc = function (targets) {\n        var $$ = this, main = $$.main,\n            mainPieUpdate, mainPieEnter,\n            classChartArc = $$.classChartArc.bind($$),\n            classArcs = $$.classArcs.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainPieUpdate = main.select('.' + CLASS.chartArcs).selectAll('.' + CLASS.chartArc)\n            .data($$.pie(targets))\n            .attr(\"class\", function (d) { return classChartArc(d) + classFocus(d.data); });\n        mainPieEnter = mainPieUpdate.enter().append(\"g\")\n            .attr(\"class\", classChartArc);\n        mainPieEnter.append('g')\n            .attr('class', classArcs);\n        mainPieEnter.append(\"text\")\n            .attr(\"dy\", $$.hasType('gauge') ? \"-.1em\" : \".35em\")\n            .style(\"opacity\", 0)\n            .style(\"text-anchor\", \"middle\")\n            .style(\"pointer-events\", \"none\");\n        // MEMO: can not keep same color..., but not bad to update color in redraw\n        //mainPieUpdate.exit().remove();\n    };\n\n    c3_chart_internal_fn.initArc = function () {\n        var $$ = this;\n        $$.arcs = $$.main.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartArcs)\n            .attr(\"transform\", $$.getTranslate('arc'));\n        $$.arcs.append('text')\n            .attr('class', CLASS.chartArcsTitle)\n            .style(\"text-anchor\", \"middle\")\n            .text($$.getArcTitle());\n    };\n\n    c3_chart_internal_fn.redrawArc = function (duration, durationForExit, withTransform) {\n        var $$ = this, d3 = $$.d3, config = $$.config, main = $$.main,\n            mainArc;\n        mainArc = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arc)\n            .data($$.arcData.bind($$));\n        mainArc.enter().append('path')\n            .attr(\"class\", $$.classArc.bind($$))\n            .style(\"fill\", function (d) { return $$.color(d.data); })\n            .style(\"cursor\", function (d) { return config.interaction_enabled && config.data_selection_isselectable(d) ? \"pointer\" : null; })\n            .style(\"opacity\", 0)\n            .each(function (d) {\n                if ($$.isGaugeType(d.data)) {\n                    d.startAngle = d.endAngle = config.gauge_startingAngle;\n                }\n                this._current = d;\n            });\n        mainArc\n            .attr(\"transform\", function (d) { return !$$.isGaugeType(d.data) && withTransform ? \"scale(0)\" : \"\"; })\n            .style(\"opacity\", function (d) { return d === this._current ? 0 : 1; })\n            .on('mouseover', config.interaction_enabled ? function (d) {\n                var updated, arcData;\n                if ($$.transiting) { // skip while transiting\n                    return;\n                }\n                updated = $$.updateAngle(d);\n                if (updated) {\n                    arcData = $$.convertToArcData(updated);\n                    // transitions\n                    $$.expandArc(updated.data.id);\n                    $$.api.focus(updated.data.id);\n                    $$.toggleFocusLegend(updated.data.id, true);\n                    $$.config.data_onmouseover(arcData, this);\n                }\n            } : null)\n            .on('mousemove', config.interaction_enabled ? function (d) {\n                var updated = $$.updateAngle(d), arcData, selectedData;\n                if (updated) {\n                    arcData = $$.convertToArcData(updated),\n                    selectedData = [arcData];\n                    $$.showTooltip(selectedData, this);\n                }\n            } : null)\n            .on('mouseout', config.interaction_enabled ? function (d) {\n                var updated, arcData;\n                if ($$.transiting) { // skip while transiting\n                    return;\n                }\n                updated = $$.updateAngle(d);\n                if (updated) {\n                    arcData = $$.convertToArcData(updated);\n                    // transitions\n                    $$.unexpandArc(updated.data.id);\n                    $$.api.revert();\n                    $$.revertLegend();\n                    $$.hideTooltip();\n                    $$.config.data_onmouseout(arcData, this);\n                }\n            } : null)\n            .on('click', config.interaction_enabled ? function (d, i) {\n                var updated = $$.updateAngle(d), arcData;\n                if (updated) {\n                    arcData = $$.convertToArcData(updated);\n                    if ($$.toggleShape) {\n                        $$.toggleShape(this, arcData, i);\n                    }\n                    $$.config.data_onclick.call($$.api, arcData, this);\n                }\n            } : null)\n            .each(function () { $$.transiting = true; })\n            .transition().duration(duration)\n            .attrTween(\"d\", function (d) {\n                var updated = $$.updateAngle(d), interpolate;\n                if (! updated) {\n                    return function () { return \"M 0 0\"; };\n                }\n                //                if (this._current === d) {\n                //                    this._current = {\n                //                        startAngle: Math.PI*2,\n                //                        endAngle: Math.PI*2,\n                //                    };\n                //                }\n                if (isNaN(this._current.startAngle)) {\n                    this._current.startAngle = 0;\n                }\n                if (isNaN(this._current.endAngle)) {\n                    this._current.endAngle = this._current.startAngle;\n                }\n                interpolate = d3.interpolate(this._current, updated);\n                this._current = interpolate(0);\n                return function (t) {\n                    var interpolated = interpolate(t);\n                    interpolated.data = d.data; // data.id will be updated by interporator\n                    return $$.getArc(interpolated, true);\n                };\n            })\n            .attr(\"transform\", withTransform ? \"scale(1)\" : \"\")\n            .style(\"fill\", function (d) {\n                return $$.levelColor ? $$.levelColor(d.data.values[0].value) : $$.color(d.data.id);\n            }) // Where gauge reading color would receive customization.\n            .style(\"opacity\", 1)\n            .call($$.endall, function () {\n                $$.transiting = false;\n            });\n        mainArc.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n        main.selectAll('.' + CLASS.chartArc).select('text')\n            .style(\"opacity\", 0)\n            .attr('class', function (d) { return $$.isGaugeType(d.data) ? CLASS.gaugeValue : ''; })\n            .text($$.textForArcLabel.bind($$))\n            .attr(\"transform\", $$.transformForArcLabel.bind($$))\n            .style('font-size', function (d) { return $$.isGaugeType(d.data) ? Math.round($$.radius / 5) + 'px' : ''; })\n          .transition().duration(duration)\n            .style(\"opacity\", function (d) { return $$.isTargetToShow(d.data.id) && $$.isArcType(d.data) ? 1 : 0; });\n        main.select('.' + CLASS.chartArcsTitle)\n            .style(\"opacity\", $$.hasType('donut') || $$.hasType('gauge') ? 1 : 0);\n\n        if ($$.hasType('gauge')) {\n            $$.arcs.select('.' + CLASS.chartArcsBackground)\n                .attr(\"d\", function () {\n                    var d = {\n                        data: [{value: config.gauge_max}],\n                        startAngle: config.gauge_startingAngle,\n                        endAngle: -1 * config.gauge_startingAngle\n                    };\n                    return $$.getArc(d, true, true);\n                });\n            $$.arcs.select('.' + CLASS.chartArcsGaugeUnit)\n                .attr(\"dy\", \".75em\")\n                .text(config.gauge_label_show ? config.gauge_units : '');\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMin)\n                .attr(\"dx\", -1 * ($$.innerRadius + (($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2))) + \"px\")\n                .attr(\"dy\", \"1.2em\")\n                .text(config.gauge_label_show ? config.gauge_min : '');\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMax)\n                .attr(\"dx\", $$.innerRadius + (($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2)) + \"px\")\n                .attr(\"dy\", \"1.2em\")\n                .text(config.gauge_label_show ? config.gauge_max : '');\n        }\n    };\n    c3_chart_internal_fn.initGauge = function () {\n        var arcs = this.arcs;\n        if (this.hasType('gauge')) {\n            arcs.append('path')\n                .attr(\"class\", CLASS.chartArcsBackground);\n            arcs.append(\"text\")\n                .attr(\"class\", CLASS.chartArcsGaugeUnit)\n                .style(\"text-anchor\", \"middle\")\n                .style(\"pointer-events\", \"none\");\n            arcs.append(\"text\")\n                .attr(\"class\", CLASS.chartArcsGaugeMin)\n                .style(\"text-anchor\", \"middle\")\n                .style(\"pointer-events\", \"none\");\n            arcs.append(\"text\")\n                .attr(\"class\", CLASS.chartArcsGaugeMax)\n                .style(\"text-anchor\", \"middle\")\n                .style(\"pointer-events\", \"none\");\n        }\n    };\n    c3_chart_internal_fn.getGaugeLabelHeight = function () {\n        return this.config.gauge_label_show ? 20 : 0;\n    };\n\n    c3_chart_internal_fn.initRegion = function () {\n        var $$ = this;\n        $$.region = $$.main.append('g')\n            .attr(\"clip-path\", $$.clipPath)\n            .attr(\"class\", CLASS.regions);\n    };\n    c3_chart_internal_fn.updateRegion = function (duration) {\n        var $$ = this, config = $$.config;\n\n        // hide if arc type\n        $$.region.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n        $$.mainRegion = $$.main.select('.' + CLASS.regions).selectAll('.' + CLASS.region)\n            .data(config.regions);\n        $$.mainRegion.enter().append('g')\n          .append('rect')\n            .style(\"fill-opacity\", 0);\n        $$.mainRegion\n            .attr('class', $$.classRegion.bind($$));\n        $$.mainRegion.exit().transition().duration(duration)\n            .style(\"opacity\", 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawRegion = function (withTransition) {\n        var $$ = this,\n            regions = $$.mainRegion.selectAll('rect').each(function () {\n                // data is binded to g and it's not transferred to rect (child node) automatically,\n                // then data of each rect has to be updated manually.\n                // TODO: there should be more efficient way to solve this?\n                var parentData = $$.d3.select(this.parentNode).datum();\n                $$.d3.select(this).datum(parentData);\n            }),\n            x = $$.regionX.bind($$),\n            y = $$.regionY.bind($$),\n            w = $$.regionWidth.bind($$),\n            h = $$.regionHeight.bind($$);\n        return [\n            (withTransition ? regions.transition() : regions)\n                .attr(\"x\", x)\n                .attr(\"y\", y)\n                .attr(\"width\", w)\n                .attr(\"height\", h)\n                .style(\"fill-opacity\", function (d) { return isValue(d.opacity) ? d.opacity : 0.1; })\n        ];\n    };\n    c3_chart_internal_fn.regionX = function (d) {\n        var $$ = this, config = $$.config,\n            xPos, yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            xPos = config.axis_rotated ? ('start' in d ? yScale(d.start) : 0) : 0;\n        } else {\n            xPos = config.axis_rotated ? 0 : ('start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0);\n        }\n        return xPos;\n    };\n    c3_chart_internal_fn.regionY = function (d) {\n        var $$ = this, config = $$.config,\n            yPos, yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            yPos = config.axis_rotated ? 0 : ('end' in d ? yScale(d.end) : 0);\n        } else {\n            yPos = config.axis_rotated ? ('start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0) : 0;\n        }\n        return yPos;\n    };\n    c3_chart_internal_fn.regionWidth = function (d) {\n        var $$ = this, config = $$.config,\n            start = $$.regionX(d), end, yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            end = config.axis_rotated ? ('end' in d ? yScale(d.end) : $$.width) : $$.width;\n        } else {\n            end = config.axis_rotated ? $$.width : ('end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.width);\n        }\n        return end < start ? 0 : end - start;\n    };\n    c3_chart_internal_fn.regionHeight = function (d) {\n        var $$ = this, config = $$.config,\n            start = this.regionY(d), end, yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            end = config.axis_rotated ? $$.height : ('start' in d ? yScale(d.start) : $$.height);\n        } else {\n            end = config.axis_rotated ? ('end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.height) : $$.height;\n        }\n        return end < start ? 0 : end - start;\n    };\n    c3_chart_internal_fn.isRegionOnX = function (d) {\n        return !d.axis || d.axis === 'x';\n    };\n\n    c3_chart_internal_fn.drag = function (mouse) {\n        var $$ = this, config = $$.config, main = $$.main, d3 = $$.d3;\n        var sx, sy, mx, my, minX, maxX, minY, maxY;\n\n        if ($$.hasArcType()) { return; }\n        if (! config.data_selection_enabled) { return; } // do nothing if not selectable\n        if (config.zoom_enabled && ! $$.zoom.altDomain) { return; } // skip if zoomable because of conflict drag dehavior\n        if (!config.data_selection_multiple) { return; } // skip when single selection because drag is used for multiple selection\n\n        sx = $$.dragStart[0];\n        sy = $$.dragStart[1];\n        mx = mouse[0];\n        my = mouse[1];\n        minX = Math.min(sx, mx);\n        maxX = Math.max(sx, mx);\n        minY = (config.data_selection_grouped) ? $$.margin.top : Math.min(sy, my);\n        maxY = (config.data_selection_grouped) ? $$.height : Math.max(sy, my);\n\n        main.select('.' + CLASS.dragarea)\n            .attr('x', minX)\n            .attr('y', minY)\n            .attr('width', maxX - minX)\n            .attr('height', maxY - minY);\n        // TODO: binary search when multiple xs\n        main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape)\n            .filter(function (d) { return config.data_selection_isselectable(d); })\n            .each(function (d, i) {\n                var shape = d3.select(this),\n                    isSelected = shape.classed(CLASS.SELECTED),\n                    isIncluded = shape.classed(CLASS.INCLUDED),\n                    _x, _y, _w, _h, toggle, isWithin = false, box;\n                if (shape.classed(CLASS.circle)) {\n                    _x = shape.attr(\"cx\") * 1;\n                    _y = shape.attr(\"cy\") * 1;\n                    toggle = $$.togglePoint;\n                    isWithin = minX < _x && _x < maxX && minY < _y && _y < maxY;\n                }\n                else if (shape.classed(CLASS.bar)) {\n                    box = getPathBox(this);\n                    _x = box.x;\n                    _y = box.y;\n                    _w = box.width;\n                    _h = box.height;\n                    toggle = $$.togglePath;\n                    isWithin = !(maxX < _x || _x + _w < minX) && !(maxY < _y || _y + _h < minY);\n                } else {\n                    // line/area selection not supported yet\n                    return;\n                }\n                if (isWithin ^ isIncluded) {\n                    shape.classed(CLASS.INCLUDED, !isIncluded);\n                    // TODO: included/unincluded callback here\n                    shape.classed(CLASS.SELECTED, !isSelected);\n                    toggle.call($$, !isSelected, shape, d, i);\n                }\n            });\n    };\n\n    c3_chart_internal_fn.dragstart = function (mouse) {\n        var $$ = this, config = $$.config;\n        if ($$.hasArcType()) { return; }\n        if (! config.data_selection_enabled) { return; } // do nothing if not selectable\n        $$.dragStart = mouse;\n        $$.main.select('.' + CLASS.chart).append('rect')\n            .attr('class', CLASS.dragarea)\n            .style('opacity', 0.1);\n        $$.dragging = true;\n    };\n\n    c3_chart_internal_fn.dragend = function () {\n        var $$ = this, config = $$.config;\n        if ($$.hasArcType()) { return; }\n        if (! config.data_selection_enabled) { return; } // do nothing if not selectable\n        $$.main.select('.' + CLASS.dragarea)\n            .transition().duration(100)\n            .style('opacity', 0)\n            .remove();\n        $$.main.selectAll('.' + CLASS.shape)\n            .classed(CLASS.INCLUDED, false);\n        $$.dragging = false;\n    };\n\n    c3_chart_internal_fn.selectPoint = function (target, d, i) {\n        var $$ = this, config = $$.config,\n            cx = (config.axis_rotated ? $$.circleY : $$.circleX).bind($$),\n            cy = (config.axis_rotated ? $$.circleX : $$.circleY).bind($$),\n            r = $$.pointSelectR.bind($$);\n        config.data_onselected.call($$.api, d, target.node());\n        // add selected-circle on low layer g\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i)\n            .data([d])\n            .enter().append('circle')\n            .attr(\"class\", function () { return $$.generateClass(CLASS.selectedCircle, i); })\n            .attr(\"cx\", cx)\n            .attr(\"cy\", cy)\n            .attr(\"stroke\", function () { return $$.color(d); })\n            .attr(\"r\", function (d) { return $$.pointSelectR(d) * 1.4; })\n            .transition().duration(100)\n            .attr(\"r\", r);\n    };\n    c3_chart_internal_fn.unselectPoint = function (target, d, i) {\n        var $$ = this;\n        $$.config.data_onunselected.call($$.api, d, target.node());\n        // remove selected-circle from low layer g\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i)\n            .transition().duration(100).attr('r', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.togglePoint = function (selected, target, d, i) {\n        selected ? this.selectPoint(target, d, i) : this.unselectPoint(target, d, i);\n    };\n    c3_chart_internal_fn.selectPath = function (target, d) {\n        var $$ = this;\n        $$.config.data_onselected.call($$, d, target.node());\n        if ($$.config.interaction_brighten) {\n            target.transition().duration(100)\n                .style(\"fill\", function () { return $$.d3.rgb($$.color(d)).brighter(0.75); });\n        }\n    };\n    c3_chart_internal_fn.unselectPath = function (target, d) {\n        var $$ = this;\n        $$.config.data_onunselected.call($$, d, target.node());\n        if ($$.config.interaction_brighten) {\n            target.transition().duration(100)\n                .style(\"fill\", function () { return $$.color(d); });\n        }\n    };\n    c3_chart_internal_fn.togglePath = function (selected, target, d, i) {\n        selected ? this.selectPath(target, d, i) : this.unselectPath(target, d, i);\n    };\n    c3_chart_internal_fn.getToggle = function (that, d) {\n        var $$ = this, toggle;\n        if (that.nodeName === 'circle') {\n            if ($$.isStepType(d)) {\n                // circle is hidden in step chart, so treat as within the click area\n                toggle = function () {}; // TODO: how to select step chart?\n            } else {\n                toggle = $$.togglePoint;\n            }\n        }\n        else if (that.nodeName === 'path') {\n            toggle = $$.togglePath;\n        }\n        return toggle;\n    };\n    c3_chart_internal_fn.toggleShape = function (that, d, i) {\n        var $$ = this, d3 = $$.d3, config = $$.config,\n            shape = d3.select(that), isSelected = shape.classed(CLASS.SELECTED),\n            toggle = $$.getToggle(that, d).bind($$);\n\n        if (config.data_selection_enabled && config.data_selection_isselectable(d)) {\n            if (!config.data_selection_multiple) {\n                $$.main.selectAll('.' + CLASS.shapes + (config.data_selection_grouped ? $$.getTargetSelectorSuffix(d.id) : \"\")).selectAll('.' + CLASS.shape).each(function (d, i) {\n                    var shape = d3.select(this);\n                    if (shape.classed(CLASS.SELECTED)) { toggle(false, shape.classed(CLASS.SELECTED, false), d, i); }\n                });\n            }\n            shape.classed(CLASS.SELECTED, !isSelected);\n            toggle(!isSelected, shape, d, i);\n        }\n    };\n\n    c3_chart_internal_fn.initBrush = function () {\n        var $$ = this, d3 = $$.d3;\n        $$.brush = d3.svg.brush().on(\"brush\", function () { $$.redrawForBrush(); });\n        $$.brush.update = function () {\n            if ($$.context) { $$.context.select('.' + CLASS.brush).call(this); }\n            return this;\n        };\n        $$.brush.scale = function (scale) {\n            return $$.config.axis_rotated ? this.y(scale) : this.x(scale);\n        };\n    };\n    c3_chart_internal_fn.initSubchart = function () {\n        var $$ = this, config = $$.config,\n            context = $$.context = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('context')),\n            visibility = config.subchart_show ? 'visible' : 'hidden';\n\n        context.style('visibility', visibility);\n\n        // Define g for chart area\n        context.append('g')\n            .attr(\"clip-path\", $$.clipPathForSubchart)\n            .attr('class', CLASS.chart);\n\n        // Define g for bar chart area\n        context.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartBars);\n\n        // Define g for line chart area\n        context.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartLines);\n\n        // Add extent rect for Brush\n        context.append(\"g\")\n            .attr(\"clip-path\", $$.clipPath)\n            .attr(\"class\", CLASS.brush)\n            .call($$.brush);\n\n        // ATTENTION: This must be called AFTER chart added\n        // Add Axis\n        $$.axes.subx = context.append(\"g\")\n            .attr(\"class\", CLASS.axisX)\n            .attr(\"transform\", $$.getTranslate('subx'))\n            .attr(\"clip-path\", config.axis_rotated ? \"\" : $$.clipPathForXAxis)\n            .style(\"visibility\", config.subchart_axis_x_show ? visibility : 'hidden');\n    };\n    c3_chart_internal_fn.updateTargetsForSubchart = function (targets) {\n        var $$ = this, context = $$.context, config = $$.config,\n            contextLineEnter, contextLineUpdate, contextBarEnter, contextBarUpdate,\n            classChartBar = $$.classChartBar.bind($$),\n            classBars = $$.classBars.bind($$),\n            classChartLine = $$.classChartLine.bind($$),\n            classLines = $$.classLines.bind($$),\n            classAreas = $$.classAreas.bind($$);\n\n        if (config.subchart_show) {\n            //-- Bar --//\n            contextBarUpdate = context.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar)\n                .data(targets)\n                .attr('class', classChartBar);\n            contextBarEnter = contextBarUpdate.enter().append('g')\n                .style('opacity', 0)\n                .attr('class', classChartBar);\n            // Bars for each data\n            contextBarEnter.append('g')\n                .attr(\"class\", classBars);\n\n            //-- Line --//\n            contextLineUpdate = context.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine)\n                .data(targets)\n                .attr('class', classChartLine);\n            contextLineEnter = contextLineUpdate.enter().append('g')\n                .style('opacity', 0)\n                .attr('class', classChartLine);\n            // Lines for each data\n            contextLineEnter.append(\"g\")\n                .attr(\"class\", classLines);\n            // Area\n            contextLineEnter.append(\"g\")\n                .attr(\"class\", classAreas);\n\n            //-- Brush --//\n            context.selectAll('.' + CLASS.brush + ' rect')\n                .attr(config.axis_rotated ? \"width\" : \"height\", config.axis_rotated ? $$.width2 : $$.height2);\n        }\n    };\n    c3_chart_internal_fn.updateBarForSubchart = function (durationForExit) {\n        var $$ = this;\n        $$.contextBar = $$.context.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar)\n            .data($$.barData.bind($$));\n        $$.contextBar.enter().append('path')\n            .attr(\"class\", $$.classBar.bind($$))\n            .style(\"stroke\", 'none')\n            .style(\"fill\", $$.color);\n        $$.contextBar\n            .style(\"opacity\", $$.initialOpacity.bind($$));\n        $$.contextBar.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawBarForSubchart = function (drawBarOnSub, withTransition, duration) {\n        (withTransition ? this.contextBar.transition(Math.random().toString()).duration(duration) : this.contextBar)\n            .attr('d', drawBarOnSub)\n            .style('opacity', 1);\n    };\n    c3_chart_internal_fn.updateLineForSubchart = function (durationForExit) {\n        var $$ = this;\n        $$.contextLine = $$.context.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line)\n            .data($$.lineData.bind($$));\n        $$.contextLine.enter().append('path')\n            .attr('class', $$.classLine.bind($$))\n            .style('stroke', $$.color);\n        $$.contextLine\n            .style(\"opacity\", $$.initialOpacity.bind($$));\n        $$.contextLine.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawLineForSubchart = function (drawLineOnSub, withTransition, duration) {\n        (withTransition ? this.contextLine.transition(Math.random().toString()).duration(duration) : this.contextLine)\n            .attr(\"d\", drawLineOnSub)\n            .style('opacity', 1);\n    };\n    c3_chart_internal_fn.updateAreaForSubchart = function (durationForExit) {\n        var $$ = this, d3 = $$.d3;\n        $$.contextArea = $$.context.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area)\n            .data($$.lineData.bind($$));\n        $$.contextArea.enter().append('path')\n            .attr(\"class\", $$.classArea.bind($$))\n            .style(\"fill\", $$.color)\n            .style(\"opacity\", function () { $$.orgAreaOpacity = +d3.select(this).style('opacity'); return 0; });\n        $$.contextArea\n            .style(\"opacity\", 0);\n        $$.contextArea.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawAreaForSubchart = function (drawAreaOnSub, withTransition, duration) {\n        (withTransition ? this.contextArea.transition(Math.random().toString()).duration(duration) : this.contextArea)\n            .attr(\"d\", drawAreaOnSub)\n            .style(\"fill\", this.color)\n            .style(\"opacity\", this.orgAreaOpacity);\n    };\n    c3_chart_internal_fn.redrawSubchart = function (withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices) {\n        var $$ = this, d3 = $$.d3, config = $$.config,\n            drawAreaOnSub, drawBarOnSub, drawLineOnSub;\n\n        $$.context.style('visibility', config.subchart_show ? 'visible' : 'hidden');\n\n        // subchart\n        if (config.subchart_show) {\n            // reflect main chart to extent on subchart if zoomed\n            if (d3.event && d3.event.type === 'zoom') {\n                $$.brush.extent($$.x.orgDomain()).update();\n            }\n            // update subchart elements if needed\n            if (withSubchart) {\n\n                // extent rect\n                if (!$$.brush.empty()) {\n                    $$.brush.extent($$.x.orgDomain()).update();\n                }\n                // setup drawer - MEMO: this must be called after axis updated\n                drawAreaOnSub = $$.generateDrawArea(areaIndices, true);\n                drawBarOnSub = $$.generateDrawBar(barIndices, true);\n                drawLineOnSub = $$.generateDrawLine(lineIndices, true);\n\n                $$.updateBarForSubchart(duration);\n                $$.updateLineForSubchart(duration);\n                $$.updateAreaForSubchart(duration);\n\n                $$.redrawBarForSubchart(drawBarOnSub, duration, duration);\n                $$.redrawLineForSubchart(drawLineOnSub, duration, duration);\n                $$.redrawAreaForSubchart(drawAreaOnSub, duration, duration);\n            }\n        }\n    };\n    c3_chart_internal_fn.redrawForBrush = function () {\n        var $$ = this, x = $$.x;\n        $$.redraw({\n            withTransition: false,\n            withY: $$.config.zoom_rescale,\n            withSubchart: false,\n            withUpdateXDomain: true,\n            withDimension: false\n        });\n        $$.config.subchart_onbrush.call($$.api, x.orgDomain());\n    };\n    c3_chart_internal_fn.transformContext = function (withTransition, transitions) {\n        var $$ = this, subXAxis;\n        if (transitions && transitions.axisSubX) {\n            subXAxis = transitions.axisSubX;\n        } else {\n            subXAxis = $$.context.select('.' + CLASS.axisX);\n            if (withTransition) { subXAxis = subXAxis.transition(); }\n        }\n        $$.context.attr(\"transform\", $$.getTranslate('context'));\n        subXAxis.attr(\"transform\", $$.getTranslate('subx'));\n    };\n    c3_chart_internal_fn.getDefaultExtent = function () {\n        var $$ = this, config = $$.config,\n            extent = isFunction(config.axis_x_extent) ? config.axis_x_extent($$.getXDomain($$.data.targets)) : config.axis_x_extent;\n        if ($$.isTimeSeries()) {\n            extent = [$$.parseDate(extent[0]), $$.parseDate(extent[1])];\n        }\n        return extent;\n    };\n\n    c3_chart_internal_fn.initZoom = function () {\n        var $$ = this, d3 = $$.d3, config = $$.config, startEvent;\n\n        $$.zoom = d3.behavior.zoom()\n            .on(\"zoomstart\", function () {\n                startEvent = d3.event.sourceEvent;\n                $$.zoom.altDomain = d3.event.sourceEvent.altKey ? $$.x.orgDomain() : null;\n                config.zoom_onzoomstart.call($$.api, d3.event.sourceEvent);\n            })\n            .on(\"zoom\", function () {\n                $$.redrawForZoom.call($$);\n            })\n            .on('zoomend', function () {\n                var event = d3.event.sourceEvent;\n                // if click, do nothing. otherwise, click interaction will be canceled.\n                if (event && startEvent.clientX === event.clientX && startEvent.clientY === event.clientY) {\n                    return;\n                }\n                $$.redrawEventRect();\n                $$.updateZoom();\n                config.zoom_onzoomend.call($$.api, $$.x.orgDomain());\n            });\n        $$.zoom.scale = function (scale) {\n            return config.axis_rotated ? this.y(scale) : this.x(scale);\n        };\n        $$.zoom.orgScaleExtent = function () {\n            var extent = config.zoom_extent ? config.zoom_extent : [1, 10];\n            return [extent[0], Math.max($$.getMaxDataCount() / extent[1], extent[1])];\n        };\n        $$.zoom.updateScaleExtent = function () {\n            var ratio = diffDomain($$.x.orgDomain()) / diffDomain($$.getZoomDomain()),\n                extent = this.orgScaleExtent();\n            this.scaleExtent([extent[0] * ratio, extent[1] * ratio]);\n            return this;\n        };\n    };\n    c3_chart_internal_fn.getZoomDomain = function () {\n        var $$ = this, config = $$.config, d3 = $$.d3,\n            min = d3.min([$$.orgXDomain[0], config.zoom_x_min]),\n            max = d3.max([$$.orgXDomain[1], config.zoom_x_max]);\n        return [min, max];\n    };\n    c3_chart_internal_fn.updateZoom = function () {\n        var $$ = this, z = $$.config.zoom_enabled ? $$.zoom : function () {};\n        $$.main.select('.' + CLASS.zoomRect).call(z).on(\"dblclick.zoom\", null);\n        $$.main.selectAll('.' + CLASS.eventRect).call(z).on(\"dblclick.zoom\", null);\n    };\n    c3_chart_internal_fn.redrawForZoom = function () {\n        var $$ = this, d3 = $$.d3, config = $$.config, zoom = $$.zoom, x = $$.x;\n        if (!config.zoom_enabled) {\n            return;\n        }\n        if ($$.filterTargetsToShow($$.data.targets).length === 0) {\n            return;\n        }\n        if (d3.event.sourceEvent.type === 'mousemove' && zoom.altDomain) {\n            x.domain(zoom.altDomain);\n            zoom.scale(x).updateScaleExtent();\n            return;\n        }\n        if ($$.isCategorized() && x.orgDomain()[0] === $$.orgXDomain[0]) {\n            x.domain([$$.orgXDomain[0] - 1e-10, x.orgDomain()[1]]);\n        }\n        $$.redraw({\n            withTransition: false,\n            withY: config.zoom_rescale,\n            withSubchart: false,\n            withEventRect: false,\n            withDimension: false\n        });\n        if (d3.event.sourceEvent.type === 'mousemove') {\n            $$.cancelClick = true;\n        }\n        config.zoom_onzoom.call($$.api, x.orgDomain());\n    };\n\n    c3_chart_internal_fn.generateColor = function () {\n        var $$ = this, config = $$.config, d3 = $$.d3,\n            colors = config.data_colors,\n            pattern = notEmpty(config.color_pattern) ? config.color_pattern : d3.scale.category10().range(),\n            callback = config.data_color,\n            ids = [];\n\n        return function (d) {\n            var id = d.id || (d.data && d.data.id) || d, color;\n\n            // if callback function is provided\n            if (colors[id] instanceof Function) {\n                color = colors[id](d);\n            }\n            // if specified, choose that color\n            else if (colors[id]) {\n                color = colors[id];\n            }\n            // if not specified, choose from pattern\n            else {\n                if (ids.indexOf(id) < 0) { ids.push(id); }\n                color = pattern[ids.indexOf(id) % pattern.length];\n                colors[id] = color;\n            }\n            return callback instanceof Function ? callback(color, d) : color;\n        };\n    };\n    c3_chart_internal_fn.generateLevelColor = function () {\n        var $$ = this, config = $$.config,\n            colors = config.color_pattern,\n            threshold = config.color_threshold,\n            asValue = threshold.unit === 'value',\n            values = threshold.values && threshold.values.length ? threshold.values : [],\n            max = threshold.max || 100;\n        return notEmpty(config.color_threshold) ? function (value) {\n            var i, v, color = colors[colors.length - 1];\n            for (i = 0; i < values.length; i++) {\n                v = asValue ? value : (value * 100 / max);\n                if (v < values[i]) {\n                    color = colors[i];\n                    break;\n                }\n            }\n            return color;\n        } : null;\n    };\n\n    c3_chart_internal_fn.getYFormat = function (forArc) {\n        var $$ = this,\n            formatForY = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.yFormat,\n            formatForY2 = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.y2Format;\n        return function (v, ratio, id) {\n            var format = $$.axis.getId(id) === 'y2' ? formatForY2 : formatForY;\n            return format.call($$, v, ratio);\n        };\n    };\n    c3_chart_internal_fn.yFormat = function (v) {\n        var $$ = this, config = $$.config,\n            format = config.axis_y_tick_format ? config.axis_y_tick_format : $$.defaultValueFormat;\n        return format(v);\n    };\n    c3_chart_internal_fn.y2Format = function (v) {\n        var $$ = this, config = $$.config,\n            format = config.axis_y2_tick_format ? config.axis_y2_tick_format : $$.defaultValueFormat;\n        return format(v);\n    };\n    c3_chart_internal_fn.defaultValueFormat = function (v) {\n        return isValue(v) ? +v : \"\";\n    };\n    c3_chart_internal_fn.defaultArcValueFormat = function (v, ratio) {\n        return (ratio * 100).toFixed(1) + '%';\n    };\n    c3_chart_internal_fn.dataLabelFormat = function (targetId) {\n        var $$ = this, data_labels = $$.config.data_labels,\n            format, defaultFormat = function (v) { return isValue(v) ? +v : \"\"; };\n        // find format according to axis id\n        if (typeof data_labels.format === 'function') {\n            format = data_labels.format;\n        } else if (typeof data_labels.format === 'object') {\n            if (data_labels.format[targetId]) {\n                format = data_labels.format[targetId] === true ? defaultFormat : data_labels.format[targetId];\n            } else {\n                format = function () { return ''; };\n            }\n        } else {\n            format = defaultFormat;\n        }\n        return format;\n    };\n\n    c3_chart_internal_fn.hasCaches = function (ids) {\n        for (var i = 0; i < ids.length; i++) {\n            if (! (ids[i] in this.cache)) { return false; }\n        }\n        return true;\n    };\n    c3_chart_internal_fn.addCache = function (id, target) {\n        this.cache[id] = this.cloneTarget(target);\n    };\n    c3_chart_internal_fn.getCaches = function (ids) {\n        var targets = [], i;\n        for (i = 0; i < ids.length; i++) {\n            if (ids[i] in this.cache) { targets.push(this.cloneTarget(this.cache[ids[i]])); }\n        }\n        return targets;\n    };\n\n    var CLASS = c3_chart_internal_fn.CLASS = {\n        target: 'c3-target',\n        chart: 'c3-chart',\n        chartLine: 'c3-chart-line',\n        chartLines: 'c3-chart-lines',\n        chartBar: 'c3-chart-bar',\n        chartBars: 'c3-chart-bars',\n        chartText: 'c3-chart-text',\n        chartTexts: 'c3-chart-texts',\n        chartArc: 'c3-chart-arc',\n        chartArcs: 'c3-chart-arcs',\n        chartArcsTitle: 'c3-chart-arcs-title',\n        chartArcsBackground: 'c3-chart-arcs-background',\n        chartArcsGaugeUnit: 'c3-chart-arcs-gauge-unit',\n        chartArcsGaugeMax: 'c3-chart-arcs-gauge-max',\n        chartArcsGaugeMin: 'c3-chart-arcs-gauge-min',\n        selectedCircle: 'c3-selected-circle',\n        selectedCircles: 'c3-selected-circles',\n        eventRect: 'c3-event-rect',\n        eventRects: 'c3-event-rects',\n        eventRectsSingle: 'c3-event-rects-single',\n        eventRectsMultiple: 'c3-event-rects-multiple',\n        zoomRect: 'c3-zoom-rect',\n        brush: 'c3-brush',\n        focused: 'c3-focused',\n        defocused: 'c3-defocused',\n        region: 'c3-region',\n        regions: 'c3-regions',\n        title: 'c3-title',\n        tooltipContainer: 'c3-tooltip-container',\n        tooltip: 'c3-tooltip',\n        tooltipName: 'c3-tooltip-name',\n        shape: 'c3-shape',\n        shapes: 'c3-shapes',\n        line: 'c3-line',\n        lines: 'c3-lines',\n        bar: 'c3-bar',\n        bars: 'c3-bars',\n        circle: 'c3-circle',\n        circles: 'c3-circles',\n        arc: 'c3-arc',\n        arcs: 'c3-arcs',\n        area: 'c3-area',\n        areas: 'c3-areas',\n        empty: 'c3-empty',\n        text: 'c3-text',\n        texts: 'c3-texts',\n        gaugeValue: 'c3-gauge-value',\n        grid: 'c3-grid',\n        gridLines: 'c3-grid-lines',\n        xgrid: 'c3-xgrid',\n        xgrids: 'c3-xgrids',\n        xgridLine: 'c3-xgrid-line',\n        xgridLines: 'c3-xgrid-lines',\n        xgridFocus: 'c3-xgrid-focus',\n        ygrid: 'c3-ygrid',\n        ygrids: 'c3-ygrids',\n        ygridLine: 'c3-ygrid-line',\n        ygridLines: 'c3-ygrid-lines',\n        axis: 'c3-axis',\n        axisX: 'c3-axis-x',\n        axisXLabel: 'c3-axis-x-label',\n        axisY: 'c3-axis-y',\n        axisYLabel: 'c3-axis-y-label',\n        axisY2: 'c3-axis-y2',\n        axisY2Label: 'c3-axis-y2-label',\n        legendBackground: 'c3-legend-background',\n        legendItem: 'c3-legend-item',\n        legendItemEvent: 'c3-legend-item-event',\n        legendItemTile: 'c3-legend-item-tile',\n        legendItemHidden: 'c3-legend-item-hidden',\n        legendItemFocused: 'c3-legend-item-focused',\n        dragarea: 'c3-dragarea',\n        EXPANDED: '_expanded_',\n        SELECTED: '_selected_',\n        INCLUDED: '_included_'\n    };\n    c3_chart_internal_fn.generateClass = function (prefix, targetId) {\n        return \" \" + prefix + \" \" + prefix + this.getTargetSelectorSuffix(targetId);\n    };\n    c3_chart_internal_fn.classText = function (d) {\n        return this.generateClass(CLASS.text, d.index);\n    };\n    c3_chart_internal_fn.classTexts = function (d) {\n        return this.generateClass(CLASS.texts, d.id);\n    };\n    c3_chart_internal_fn.classShape = function (d) {\n        return this.generateClass(CLASS.shape, d.index);\n    };\n    c3_chart_internal_fn.classShapes = function (d) {\n        return this.generateClass(CLASS.shapes, d.id);\n    };\n    c3_chart_internal_fn.classLine = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.line, d.id);\n    };\n    c3_chart_internal_fn.classLines = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.lines, d.id);\n    };\n    c3_chart_internal_fn.classCircle = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.circle, d.index);\n    };\n    c3_chart_internal_fn.classCircles = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.circles, d.id);\n    };\n    c3_chart_internal_fn.classBar = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.bar, d.index);\n    };\n    c3_chart_internal_fn.classBars = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.bars, d.id);\n    };\n    c3_chart_internal_fn.classArc = function (d) {\n        return this.classShape(d.data) + this.generateClass(CLASS.arc, d.data.id);\n    };\n    c3_chart_internal_fn.classArcs = function (d) {\n        return this.classShapes(d.data) + this.generateClass(CLASS.arcs, d.data.id);\n    };\n    c3_chart_internal_fn.classArea = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.area, d.id);\n    };\n    c3_chart_internal_fn.classAreas = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.areas, d.id);\n    };\n    c3_chart_internal_fn.classRegion = function (d, i) {\n        return this.generateClass(CLASS.region, i) + ' ' + ('class' in d ? d['class'] : '');\n    };\n    c3_chart_internal_fn.classEvent = function (d) {\n        return this.generateClass(CLASS.eventRect, d.index);\n    };\n    c3_chart_internal_fn.classTarget = function (id) {\n        var $$ = this;\n        var additionalClassSuffix = $$.config.data_classes[id], additionalClass = '';\n        if (additionalClassSuffix) {\n            additionalClass = ' ' + CLASS.target + '-' + additionalClassSuffix;\n        }\n        return $$.generateClass(CLASS.target, id) + additionalClass;\n    };\n    c3_chart_internal_fn.classFocus = function (d) {\n        return this.classFocused(d) + this.classDefocused(d);\n    };\n    c3_chart_internal_fn.classFocused = function (d) {\n        return ' ' + (this.focusedTargetIds.indexOf(d.id) >= 0 ? CLASS.focused : '');\n    };\n    c3_chart_internal_fn.classDefocused = function (d) {\n        return ' ' + (this.defocusedTargetIds.indexOf(d.id) >= 0 ? CLASS.defocused : '');\n    };\n    c3_chart_internal_fn.classChartText = function (d) {\n        return CLASS.chartText + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartLine = function (d) {\n        return CLASS.chartLine + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartBar = function (d) {\n        return CLASS.chartBar + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartArc = function (d) {\n        return CLASS.chartArc + this.classTarget(d.data.id);\n    };\n    c3_chart_internal_fn.getTargetSelectorSuffix = function (targetId) {\n        return targetId || targetId === 0 ? ('-' + targetId).replace(/[\\s?!@#$%^&*()_=+,.<>'\":;\\[\\]\\/|~`{}\\\\]/g, '-') : '';\n    };\n    c3_chart_internal_fn.selectorTarget = function (id, prefix) {\n        return (prefix || '') + '.' + CLASS.target + this.getTargetSelectorSuffix(id);\n    };\n    c3_chart_internal_fn.selectorTargets = function (ids, prefix) {\n        var $$ = this;\n        ids = ids || [];\n        return ids.length ? ids.map(function (id) { return $$.selectorTarget(id, prefix); }) : null;\n    };\n    c3_chart_internal_fn.selectorLegend = function (id) {\n        return '.' + CLASS.legendItem + this.getTargetSelectorSuffix(id);\n    };\n    c3_chart_internal_fn.selectorLegends = function (ids) {\n        var $$ = this;\n        return ids && ids.length ? ids.map(function (id) { return $$.selectorLegend(id); }) : null;\n    };\n\n    var isValue = c3_chart_internal_fn.isValue = function (v) {\n        return v || v === 0;\n    },\n        isFunction = c3_chart_internal_fn.isFunction = function (o) {\n            return typeof o === 'function';\n        },\n        isString = c3_chart_internal_fn.isString = function (o) {\n            return typeof o === 'string';\n        },\n        isUndefined = c3_chart_internal_fn.isUndefined = function (v) {\n            return typeof v === 'undefined';\n        },\n        isDefined = c3_chart_internal_fn.isDefined = function (v) {\n            return typeof v !== 'undefined';\n        },\n        ceil10 = c3_chart_internal_fn.ceil10 = function (v) {\n            return Math.ceil(v / 10) * 10;\n        },\n        asHalfPixel = c3_chart_internal_fn.asHalfPixel = function (n) {\n            return Math.ceil(n) + 0.5;\n        },\n        diffDomain = c3_chart_internal_fn.diffDomain = function (d) {\n            return d[1] - d[0];\n        },\n        isEmpty = c3_chart_internal_fn.isEmpty = function (o) {\n            return typeof o === 'undefined' || o === null || (isString(o) && o.length === 0) || (typeof o === 'object' && Object.keys(o).length === 0);\n        },\n        notEmpty = c3_chart_internal_fn.notEmpty = function (o) {\n            return !c3_chart_internal_fn.isEmpty(o);\n        },\n        getOption = c3_chart_internal_fn.getOption = function (options, key, defaultValue) {\n            return isDefined(options[key]) ? options[key] : defaultValue;\n        },\n        hasValue = c3_chart_internal_fn.hasValue = function (dict, value) {\n            var found = false;\n            Object.keys(dict).forEach(function (key) {\n                if (dict[key] === value) { found = true; }\n            });\n            return found;\n        },\n        sanitise = c3_chart_internal_fn.sanitise = function (str) {\n            return typeof str === 'string' ? str.replace(/</g, '&lt;').replace(/>/g, '&gt;') : str;\n        },\n        getPathBox = c3_chart_internal_fn.getPathBox = function (path) {\n            var box = path.getBoundingClientRect(),\n                items = [path.pathSegList.getItem(0), path.pathSegList.getItem(1)],\n                minX = items[0].x, minY = Math.min(items[0].y, items[1].y);\n            return {x: minX, y: minY, width: box.width, height: box.height};\n        };\n\n    c3_chart_fn.focus = function (targetIds) {\n        var $$ = this.internal, candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))),\n\n        this.revert();\n        this.defocus();\n        candidates.classed(CLASS.focused, true).classed(CLASS.defocused, false);\n        if ($$.hasArcType()) {\n            $$.expandArc(targetIds);\n        }\n        $$.toggleFocusLegend(targetIds, true);\n\n        $$.focusedTargetIds = targetIds;\n        $$.defocusedTargetIds = $$.defocusedTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n\n    c3_chart_fn.defocus = function (targetIds) {\n        var $$ = this.internal, candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))),\n\n        candidates.classed(CLASS.focused, false).classed(CLASS.defocused, true);\n        if ($$.hasArcType()) {\n            $$.unexpandArc(targetIds);\n        }\n        $$.toggleFocusLegend(targetIds, false);\n\n        $$.focusedTargetIds = $$.focusedTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n        $$.defocusedTargetIds = targetIds;\n    };\n\n    c3_chart_fn.revert = function (targetIds) {\n        var $$ = this.internal, candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds)); // should be for all targets\n\n        candidates.classed(CLASS.focused, false).classed(CLASS.defocused, false);\n        if ($$.hasArcType()) {\n            $$.unexpandArc(targetIds);\n        }\n        if ($$.config.legend_show) {\n            $$.showLegend(targetIds.filter($$.isLegendToShow.bind($$)));\n            $$.legend.selectAll($$.selectorLegends(targetIds))\n                .filter(function () {\n                    return $$.d3.select(this).classed(CLASS.legendItemFocused);\n                })\n                .classed(CLASS.legendItemFocused, false);\n        }\n\n        $$.focusedTargetIds = [];\n        $$.defocusedTargetIds = [];\n    };\n\n    c3_chart_fn.show = function (targetIds, options) {\n        var $$ = this.internal, targets;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        options = options || {};\n\n        $$.removeHiddenTargetIds(targetIds);\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n        targets.transition()\n            .style('opacity', 1, 'important')\n            .call($$.endall, function () {\n                targets.style('opacity', null).style('opacity', 1);\n            });\n\n        if (options.withLegend) {\n            $$.showLegend(targetIds);\n        }\n\n        $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n    };\n\n    c3_chart_fn.hide = function (targetIds, options) {\n        var $$ = this.internal, targets;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        options = options || {};\n\n        $$.addHiddenTargetIds(targetIds);\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n        targets.transition()\n            .style('opacity', 0, 'important')\n            .call($$.endall, function () {\n                targets.style('opacity', null).style('opacity', 0);\n            });\n\n        if (options.withLegend) {\n            $$.hideLegend(targetIds);\n        }\n\n        $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n    };\n\n    c3_chart_fn.toggle = function (targetIds, options) {\n        var that = this, $$ = this.internal;\n        $$.mapToTargetIds(targetIds).forEach(function (targetId) {\n            $$.isTargetToShow(targetId) ? that.hide(targetId, options) : that.show(targetId, options);\n        });\n    };\n\n    c3_chart_fn.zoom = function (domain) {\n        var $$ = this.internal;\n        if (domain) {\n            if ($$.isTimeSeries()) {\n                domain = domain.map(function (x) { return $$.parseDate(x); });\n            }\n            $$.brush.extent(domain);\n            $$.redraw({withUpdateXDomain: true, withY: $$.config.zoom_rescale});\n            $$.config.zoom_onzoom.call(this, $$.x.orgDomain());\n        }\n        return $$.brush.extent();\n    };\n    c3_chart_fn.zoom.enable = function (enabled) {\n        var $$ = this.internal;\n        $$.config.zoom_enabled = enabled;\n        $$.updateAndRedraw();\n    };\n    c3_chart_fn.unzoom = function () {\n        var $$ = this.internal;\n        $$.brush.clear().update();\n        $$.redraw({withUpdateXDomain: true});\n    };\n\n    c3_chart_fn.zoom.max = function (max) {\n        var $$ = this.internal, config = $$.config, d3 = $$.d3;\n        if (max === 0 || max) {\n            config.zoom_x_max = d3.max([$$.orgXDomain[1], max]);\n        }\n        else {\n            return config.zoom_x_max;\n        }\n    };\n\n    c3_chart_fn.zoom.min = function (min) {\n        var $$ = this.internal, config = $$.config, d3 = $$.d3;\n        if (min === 0 || min) {\n            config.zoom_x_min = d3.min([$$.orgXDomain[0], min]);\n        }\n        else {\n            return config.zoom_x_min;\n        }\n    };\n\n    c3_chart_fn.zoom.range = function (range) {\n        if (arguments.length) {\n            if (isDefined(range.max)) { this.domain.max(range.max); }\n            if (isDefined(range.min)) { this.domain.min(range.min); }\n        } else {\n            return {\n                max: this.domain.max(),\n                min: this.domain.min()\n            };\n        }\n    };\n\n    c3_chart_fn.load = function (args) {\n        var $$ = this.internal, config = $$.config;\n        // update xs if specified\n        if (args.xs) {\n            $$.addXs(args.xs);\n        }\n        // update names if exists\n        if ('names' in args) {\n            c3_chart_fn.data.names.bind(this)(args.names);\n        }\n        // update classes if exists\n        if ('classes' in args) {\n            Object.keys(args.classes).forEach(function (id) {\n                config.data_classes[id] = args.classes[id];\n            });\n        }\n        // update categories if exists\n        if ('categories' in args && $$.isCategorized()) {\n            config.axis_x_categories = args.categories;\n        }\n        // update axes if exists\n        if ('axes' in args) {\n            Object.keys(args.axes).forEach(function (id) {\n                config.data_axes[id] = args.axes[id];\n            });\n        }\n        // update colors if exists\n        if ('colors' in args) {\n            Object.keys(args.colors).forEach(function (id) {\n                config.data_colors[id] = args.colors[id];\n            });\n        }\n        // use cache if exists\n        if ('cacheIds' in args && $$.hasCaches(args.cacheIds)) {\n            $$.load($$.getCaches(args.cacheIds), args.done);\n            return;\n        }\n        // unload if needed\n        if ('unload' in args) {\n            // TODO: do not unload if target will load (included in url/rows/columns)\n            $$.unload($$.mapToTargetIds((typeof args.unload === 'boolean' && args.unload) ? null : args.unload), function () {\n                $$.loadFromArgs(args);\n            });\n        } else {\n            $$.loadFromArgs(args);\n        }\n    };\n\n    c3_chart_fn.unload = function (args) {\n        var $$ = this.internal;\n        args = args || {};\n        if (args instanceof Array) {\n            args = {ids: args};\n        } else if (typeof args === 'string') {\n            args = {ids: [args]};\n        }\n        $$.unload($$.mapToTargetIds(args.ids), function () {\n            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n            if (args.done) { args.done(); }\n        });\n    };\n\n    c3_chart_fn.flow = function (args) {\n        var $$ = this.internal,\n            targets, data, notfoundIds = [], orgDataCount = $$.getMaxDataCount(),\n            dataCount, domain, baseTarget, baseValue, length = 0, tail = 0, diff, to;\n\n        if (args.json) {\n            data = $$.convertJsonToData(args.json, args.keys);\n        }\n        else if (args.rows) {\n            data = $$.convertRowsToData(args.rows);\n        }\n        else if (args.columns) {\n            data = $$.convertColumnsToData(args.columns);\n        }\n        else {\n            return;\n        }\n        targets = $$.convertDataToTargets(data, true);\n\n        // Update/Add data\n        $$.data.targets.forEach(function (t) {\n            var found = false, i, j;\n            for (i = 0; i < targets.length; i++) {\n                if (t.id === targets[i].id) {\n                    found = true;\n\n                    if (t.values[t.values.length - 1]) {\n                        tail = t.values[t.values.length - 1].index + 1;\n                    }\n                    length = targets[i].values.length;\n\n                    for (j = 0; j < length; j++) {\n                        targets[i].values[j].index = tail + j;\n                        if (!$$.isTimeSeries()) {\n                            targets[i].values[j].x = tail + j;\n                        }\n                    }\n                    t.values = t.values.concat(targets[i].values);\n\n                    targets.splice(i, 1);\n                    break;\n                }\n            }\n            if (!found) { notfoundIds.push(t.id); }\n        });\n\n        // Append null for not found targets\n        $$.data.targets.forEach(function (t) {\n            var i, j;\n            for (i = 0; i < notfoundIds.length; i++) {\n                if (t.id === notfoundIds[i]) {\n                    tail = t.values[t.values.length - 1].index + 1;\n                    for (j = 0; j < length; j++) {\n                        t.values.push({\n                            id: t.id,\n                            index: tail + j,\n                            x: $$.isTimeSeries() ? $$.getOtherTargetX(tail + j) : tail + j,\n                            value: null\n                        });\n                    }\n                }\n            }\n        });\n\n        // Generate null values for new target\n        if ($$.data.targets.length) {\n            targets.forEach(function (t) {\n                var i, missing = [];\n                for (i = $$.data.targets[0].values[0].index; i < tail; i++) {\n                    missing.push({\n                        id: t.id,\n                        index: i,\n                        x: $$.isTimeSeries() ? $$.getOtherTargetX(i) : i,\n                        value: null\n                    });\n                }\n                t.values.forEach(function (v) {\n                    v.index += tail;\n                    if (!$$.isTimeSeries()) {\n                        v.x += tail;\n                    }\n                });\n                t.values = missing.concat(t.values);\n            });\n        }\n        $$.data.targets = $$.data.targets.concat(targets); // add remained\n\n        // check data count because behavior needs to change when it's only one\n        dataCount = $$.getMaxDataCount();\n        baseTarget = $$.data.targets[0];\n        baseValue = baseTarget.values[0];\n\n        // Update length to flow if needed\n        if (isDefined(args.to)) {\n            length = 0;\n            to = $$.isTimeSeries() ? $$.parseDate(args.to) : args.to;\n            baseTarget.values.forEach(function (v) {\n                if (v.x < to) { length++; }\n            });\n        } else if (isDefined(args.length)) {\n            length = args.length;\n        }\n\n        // If only one data, update the domain to flow from left edge of the chart\n        if (!orgDataCount) {\n            if ($$.isTimeSeries()) {\n                if (baseTarget.values.length > 1) {\n                    diff = baseTarget.values[baseTarget.values.length - 1].x - baseValue.x;\n                } else {\n                    diff = baseValue.x - $$.getXDomain($$.data.targets)[0];\n                }\n            } else {\n                diff = 1;\n            }\n            domain = [baseValue.x - diff, baseValue.x];\n            $$.updateXDomain(null, true, true, false, domain);\n        } else if (orgDataCount === 1) {\n            if ($$.isTimeSeries()) {\n                diff = (baseTarget.values[baseTarget.values.length - 1].x - baseValue.x) / 2;\n                domain = [new Date(+baseValue.x - diff), new Date(+baseValue.x + diff)];\n                $$.updateXDomain(null, true, true, false, domain);\n            }\n        }\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Redraw with new targets\n        $$.redraw({\n            flow: {\n                index: baseValue.index,\n                length: length,\n                duration: isValue(args.duration) ? args.duration : $$.config.transition_duration,\n                done: args.done,\n                orgDataCount: orgDataCount,\n            },\n            withLegend: true,\n            withTransition: orgDataCount > 1,\n            withTrimXDomain: false,\n            withUpdateXAxis: true,\n        });\n    };\n\n    c3_chart_internal_fn.generateFlow = function (args) {\n        var $$ = this, config = $$.config, d3 = $$.d3;\n\n        return function () {\n            var targets = args.targets,\n                flow = args.flow,\n                drawBar = args.drawBar,\n                drawLine = args.drawLine,\n                drawArea = args.drawArea,\n                cx = args.cx,\n                cy = args.cy,\n                xv = args.xv,\n                xForText = args.xForText,\n                yForText = args.yForText,\n                duration = args.duration;\n\n            var translateX, scaleX = 1, transform,\n                flowIndex = flow.index,\n                flowLength = flow.length,\n                flowStart = $$.getValueOnIndex($$.data.targets[0].values, flowIndex),\n                flowEnd = $$.getValueOnIndex($$.data.targets[0].values, flowIndex + flowLength),\n                orgDomain = $$.x.domain(), domain,\n                durationForFlow = flow.duration || duration,\n                done = flow.done || function () {},\n                wait = $$.generateWait();\n\n            var xgrid = $$.xgrid || d3.selectAll([]),\n                xgridLines = $$.xgridLines || d3.selectAll([]),\n                mainRegion = $$.mainRegion || d3.selectAll([]),\n                mainText = $$.mainText || d3.selectAll([]),\n                mainBar = $$.mainBar || d3.selectAll([]),\n                mainLine = $$.mainLine || d3.selectAll([]),\n                mainArea = $$.mainArea || d3.selectAll([]),\n                mainCircle = $$.mainCircle || d3.selectAll([]);\n\n            // set flag\n            $$.flowing = true;\n\n            // remove head data after rendered\n            $$.data.targets.forEach(function (d) {\n                d.values.splice(0, flowLength);\n            });\n\n            // update x domain to generate axis elements for flow\n            domain = $$.updateXDomain(targets, true, true);\n            // update elements related to x scale\n            if ($$.updateXGrid) { $$.updateXGrid(true); }\n\n            // generate transform to flow\n            if (!flow.orgDataCount) { // if empty\n                if ($$.data.targets[0].values.length !== 1) {\n                    translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n                } else {\n                    if ($$.isTimeSeries()) {\n                        flowStart = $$.getValueOnIndex($$.data.targets[0].values, 0);\n                        flowEnd = $$.getValueOnIndex($$.data.targets[0].values, $$.data.targets[0].values.length - 1);\n                        translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n                    } else {\n                        translateX = diffDomain(domain) / 2;\n                    }\n                }\n            } else if (flow.orgDataCount === 1 || (flowStart && flowStart.x) === (flowEnd && flowEnd.x)) {\n                translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n            } else {\n                if ($$.isTimeSeries()) {\n                    translateX = ($$.x(orgDomain[0]) - $$.x(domain[0]));\n                } else {\n                    translateX = ($$.x(flowStart.x) - $$.x(flowEnd.x));\n                }\n            }\n            scaleX = (diffDomain(orgDomain) / diffDomain(domain));\n            transform = 'translate(' + translateX + ',0) scale(' + scaleX + ',1)';\n\n            $$.hideXGridFocus();\n\n            d3.transition().ease('linear').duration(durationForFlow).each(function () {\n                wait.add($$.axes.x.transition().call($$.xAxis));\n                wait.add(mainBar.transition().attr('transform', transform));\n                wait.add(mainLine.transition().attr('transform', transform));\n                wait.add(mainArea.transition().attr('transform', transform));\n                wait.add(mainCircle.transition().attr('transform', transform));\n                wait.add(mainText.transition().attr('transform', transform));\n                wait.add(mainRegion.filter($$.isRegionOnX).transition().attr('transform', transform));\n                wait.add(xgrid.transition().attr('transform', transform));\n                wait.add(xgridLines.transition().attr('transform', transform));\n            })\n            .call(wait, function () {\n                var i, shapes = [], texts = [], eventRects = [];\n\n                // remove flowed elements\n                if (flowLength) {\n                    for (i = 0; i < flowLength; i++) {\n                        shapes.push('.' + CLASS.shape + '-' + (flowIndex + i));\n                        texts.push('.' + CLASS.text + '-' + (flowIndex + i));\n                        eventRects.push('.' + CLASS.eventRect + '-' + (flowIndex + i));\n                    }\n                    $$.svg.selectAll('.' + CLASS.shapes).selectAll(shapes).remove();\n                    $$.svg.selectAll('.' + CLASS.texts).selectAll(texts).remove();\n                    $$.svg.selectAll('.' + CLASS.eventRects).selectAll(eventRects).remove();\n                    $$.svg.select('.' + CLASS.xgrid).remove();\n                }\n\n                // draw again for removing flowed elements and reverting attr\n                xgrid\n                    .attr('transform', null)\n                    .attr($$.xgridAttr);\n                xgridLines\n                    .attr('transform', null);\n                xgridLines.select('line')\n                    .attr(\"x1\", config.axis_rotated ? 0 : xv)\n                    .attr(\"x2\", config.axis_rotated ? $$.width : xv);\n                xgridLines.select('text')\n                    .attr(\"x\", config.axis_rotated ? $$.width : 0)\n                    .attr(\"y\", xv);\n                mainBar\n                    .attr('transform', null)\n                    .attr(\"d\", drawBar);\n                mainLine\n                    .attr('transform', null)\n                    .attr(\"d\", drawLine);\n                mainArea\n                    .attr('transform', null)\n                    .attr(\"d\", drawArea);\n                mainCircle\n                    .attr('transform', null)\n                    .attr(\"cx\", cx)\n                    .attr(\"cy\", cy);\n                mainText\n                    .attr('transform', null)\n                    .attr('x', xForText)\n                    .attr('y', yForText)\n                    .style('fill-opacity', $$.opacityForText.bind($$));\n                mainRegion\n                    .attr('transform', null);\n                mainRegion.select('rect').filter($$.isRegionOnX)\n                    .attr(\"x\", $$.regionX.bind($$))\n                    .attr(\"width\", $$.regionWidth.bind($$));\n\n                if (config.interaction_enabled) {\n                    $$.redrawEventRect();\n                }\n\n                // callback for end of flow\n                done();\n\n                $$.flowing = false;\n            });\n        };\n    };\n\n    c3_chart_fn.selected = function (targetId) {\n        var $$ = this.internal, d3 = $$.d3;\n        return d3.merge(\n            $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(targetId)).selectAll('.' + CLASS.shape)\n                .filter(function () { return d3.select(this).classed(CLASS.SELECTED); })\n                .map(function (d) { return d.map(function (d) { var data = d.__data__; return data.data ? data.data : data; }); })\n        );\n    };\n    c3_chart_fn.select = function (ids, indices, resetOther) {\n        var $$ = this.internal, d3 = $$.d3, config = $$.config;\n        if (! config.data_selection_enabled) { return; }\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n            var shape = d3.select(this), id = d.data ? d.data.id : d.id,\n                toggle = $$.getToggle(this, d).bind($$),\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n                isSelected = shape.classed(CLASS.SELECTED);\n            // line/area selection not supported yet\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n                return;\n            }\n            if (isTargetId && isTargetIndex) {\n                if (config.data_selection_isselectable(d) && !isSelected) {\n                    toggle(true, shape.classed(CLASS.SELECTED, true), d, i);\n                }\n            } else if (isDefined(resetOther) && resetOther) {\n                if (isSelected) {\n                    toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                }\n            }\n        });\n    };\n    c3_chart_fn.unselect = function (ids, indices) {\n        var $$ = this.internal, d3 = $$.d3, config = $$.config;\n        if (! config.data_selection_enabled) { return; }\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n            var shape = d3.select(this), id = d.data ? d.data.id : d.id,\n                toggle = $$.getToggle(this, d).bind($$),\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n                isSelected = shape.classed(CLASS.SELECTED);\n            // line/area selection not supported yet\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n                return;\n            }\n            if (isTargetId && isTargetIndex) {\n                if (config.data_selection_isselectable(d)) {\n                    if (isSelected) {\n                        toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                    }\n                }\n            }\n        });\n    };\n\n    c3_chart_fn.transform = function (type, targetIds) {\n        var $$ = this.internal,\n            options = ['pie', 'donut'].indexOf(type) >= 0 ? {withTransform: true} : null;\n        $$.transformTo(targetIds, type, options);\n    };\n\n    c3_chart_internal_fn.transformTo = function (targetIds, type, optionsForRedraw) {\n        var $$ = this,\n            withTransitionForAxis = !$$.hasArcType(),\n            options = optionsForRedraw || {withTransitionForAxis: withTransitionForAxis};\n        options.withTransitionForTransform = false;\n        $$.transiting = false;\n        $$.setTargetType(targetIds, type);\n        $$.updateTargets($$.data.targets); // this is needed when transforming to arc\n        $$.updateAndRedraw(options);\n    };\n\n    c3_chart_fn.groups = function (groups) {\n        var $$ = this.internal, config = $$.config;\n        if (isUndefined(groups)) { return config.data_groups; }\n        config.data_groups = groups;\n        $$.redraw();\n        return config.data_groups;\n    };\n\n    c3_chart_fn.xgrids = function (grids) {\n        var $$ = this.internal, config = $$.config;\n        if (! grids) { return config.grid_x_lines; }\n        config.grid_x_lines = grids;\n        $$.redrawWithoutRescale();\n        return config.grid_x_lines;\n    };\n    c3_chart_fn.xgrids.add = function (grids) {\n        var $$ = this.internal;\n        return this.xgrids($$.config.grid_x_lines.concat(grids ? grids : []));\n    };\n    c3_chart_fn.xgrids.remove = function (params) { // TODO: multiple\n        var $$ = this.internal;\n        $$.removeGridLines(params, true);\n    };\n\n    c3_chart_fn.ygrids = function (grids) {\n        var $$ = this.internal, config = $$.config;\n        if (! grids) { return config.grid_y_lines; }\n        config.grid_y_lines = grids;\n        $$.redrawWithoutRescale();\n        return config.grid_y_lines;\n    };\n    c3_chart_fn.ygrids.add = function (grids) {\n        var $$ = this.internal;\n        return this.ygrids($$.config.grid_y_lines.concat(grids ? grids : []));\n    };\n    c3_chart_fn.ygrids.remove = function (params) { // TODO: multiple\n        var $$ = this.internal;\n        $$.removeGridLines(params, false);\n    };\n\n    c3_chart_fn.regions = function (regions) {\n        var $$ = this.internal, config = $$.config;\n        if (!regions) { return config.regions; }\n        config.regions = regions;\n        $$.redrawWithoutRescale();\n        return config.regions;\n    };\n    c3_chart_fn.regions.add = function (regions) {\n        var $$ = this.internal, config = $$.config;\n        if (!regions) { return config.regions; }\n        config.regions = config.regions.concat(regions);\n        $$.redrawWithoutRescale();\n        return config.regions;\n    };\n    c3_chart_fn.regions.remove = function (options) {\n        var $$ = this.internal, config = $$.config,\n            duration, classes, regions;\n\n        options = options || {};\n        duration = $$.getOption(options, \"duration\", config.transition_duration);\n        classes = $$.getOption(options, \"classes\", [CLASS.region]);\n\n        regions = $$.main.select('.' + CLASS.regions).selectAll(classes.map(function (c) { return '.' + c; }));\n        (duration ? regions.transition().duration(duration) : regions)\n            .style('opacity', 0)\n            .remove();\n\n        config.regions = config.regions.filter(function (region) {\n            var found = false;\n            if (!region['class']) {\n                return true;\n            }\n            region['class'].split(' ').forEach(function (c) {\n                if (classes.indexOf(c) >= 0) { found = true; }\n            });\n            return !found;\n        });\n\n        return config.regions;\n    };\n\n    c3_chart_fn.data = function (targetIds) {\n        var targets = this.internal.data.targets;\n        return typeof targetIds === 'undefined' ? targets : targets.filter(function (t) {\n            return [].concat(targetIds).indexOf(t.id) >= 0;\n        });\n    };\n    c3_chart_fn.data.shown = function (targetIds) {\n        return this.internal.filterTargetsToShow(this.data(targetIds));\n    };\n    c3_chart_fn.data.values = function (targetId) {\n        var targets, values = null;\n        if (targetId) {\n            targets = this.data(targetId);\n            values = targets[0] ? targets[0].values.map(function (d) { return d.value; }) : null;\n        }\n        return values;\n    };\n    c3_chart_fn.data.names = function (names) {\n        this.internal.clearLegendItemTextBoxCache();\n        return this.internal.updateDataAttributes('names', names);\n    };\n    c3_chart_fn.data.colors = function (colors) {\n        return this.internal.updateDataAttributes('colors', colors);\n    };\n    c3_chart_fn.data.axes = function (axes) {\n        return this.internal.updateDataAttributes('axes', axes);\n    };\n\n    c3_chart_fn.category = function (i, category) {\n        var $$ = this.internal, config = $$.config;\n        if (arguments.length > 1) {\n            config.axis_x_categories[i] = category;\n            $$.redraw();\n        }\n        return config.axis_x_categories[i];\n    };\n    c3_chart_fn.categories = function (categories) {\n        var $$ = this.internal, config = $$.config;\n        if (!arguments.length) { return config.axis_x_categories; }\n        config.axis_x_categories = categories;\n        $$.redraw();\n        return config.axis_x_categories;\n    };\n\n    // TODO: fix\n    c3_chart_fn.color = function (id) {\n        var $$ = this.internal;\n        return $$.color(id); // more patterns\n    };\n\n    c3_chart_fn.x = function (x) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            $$.updateTargetX($$.data.targets, x);\n            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n        }\n        return $$.data.xs;\n    };\n    c3_chart_fn.xs = function (xs) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            $$.updateTargetXs($$.data.targets, xs);\n            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n        }\n        return $$.data.xs;\n    };\n\n    c3_chart_fn.axis = function () {};\n    c3_chart_fn.axis.labels = function (labels) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            Object.keys(labels).forEach(function (axisId) {\n                $$.axis.setLabelText(axisId, labels[axisId]);\n            });\n            $$.axis.updateLabels();\n        }\n        // TODO: return some values?\n    };\n    c3_chart_fn.axis.max = function (max) {\n        var $$ = this.internal, config = $$.config;\n        if (arguments.length) {\n            if (typeof max === 'object') {\n                if (isValue(max.x)) { config.axis_x_max = max.x; }\n                if (isValue(max.y)) { config.axis_y_max = max.y; }\n                if (isValue(max.y2)) { config.axis_y2_max = max.y2; }\n            } else {\n                config.axis_y_max = config.axis_y2_max = max;\n            }\n            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n        } else {\n            return {\n                x: config.axis_x_max,\n                y: config.axis_y_max,\n                y2: config.axis_y2_max\n            };\n        }\n    };\n    c3_chart_fn.axis.min = function (min) {\n        var $$ = this.internal, config = $$.config;\n        if (arguments.length) {\n            if (typeof min === 'object') {\n                if (isValue(min.x)) { config.axis_x_min = min.x; }\n                if (isValue(min.y)) { config.axis_y_min = min.y; }\n                if (isValue(min.y2)) { config.axis_y2_min = min.y2; }\n            } else {\n                config.axis_y_min = config.axis_y2_min = min;\n            }\n            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n        } else {\n            return {\n                x: config.axis_x_min,\n                y: config.axis_y_min,\n                y2: config.axis_y2_min\n            };\n        }\n    };\n    c3_chart_fn.axis.range = function (range) {\n        if (arguments.length) {\n            if (isDefined(range.max)) { this.axis.max(range.max); }\n            if (isDefined(range.min)) { this.axis.min(range.min); }\n        } else {\n            return {\n                max: this.axis.max(),\n                min: this.axis.min()\n            };\n        }\n    };\n\n    c3_chart_fn.legend = function () {};\n    c3_chart_fn.legend.show = function (targetIds) {\n        var $$ = this.internal;\n        $$.showLegend($$.mapToTargetIds(targetIds));\n        $$.updateAndRedraw({withLegend: true});\n    };\n    c3_chart_fn.legend.hide = function (targetIds) {\n        var $$ = this.internal;\n        $$.hideLegend($$.mapToTargetIds(targetIds));\n        $$.updateAndRedraw({withLegend: true});\n    };\n\n    c3_chart_fn.resize = function (size) {\n        var $$ = this.internal, config = $$.config;\n        config.size_width = size ? size.width : null;\n        config.size_height = size ? size.height : null;\n        this.flush();\n    };\n\n    c3_chart_fn.flush = function () {\n        var $$ = this.internal;\n        $$.updateAndRedraw({withLegend: true, withTransition: false, withTransitionForTransform: false});\n    };\n\n    c3_chart_fn.destroy = function () {\n        var $$ = this.internal;\n\n        window.clearInterval($$.intervalForObserveInserted);\n\n        if ($$.resizeTimeout !== undefined) {\n            window.clearTimeout($$.resizeTimeout);\n        }\n\n        if (window.detachEvent) {\n            window.detachEvent('onresize', $$.resizeFunction);\n        } else if (window.removeEventListener) {\n            window.removeEventListener('resize', $$.resizeFunction);\n        } else {\n            var wrapper = window.onresize;\n            // check if no one else removed our wrapper and remove our resizeFunction from it\n            if (wrapper && wrapper.add && wrapper.remove) {\n                wrapper.remove($$.resizeFunction);\n            }\n        }\n\n        $$.selectChart.classed('c3', false).html(\"\");\n\n        // MEMO: this is needed because the reference of some elements will not be released, then memory leak will happen.\n        Object.keys($$).forEach(function (key) {\n            $$[key] = null;\n        });\n\n        return null;\n    };\n\n    c3_chart_fn.tooltip = function () {};\n    c3_chart_fn.tooltip.show = function (args) {\n        var $$ = this.internal, index, mouse;\n\n        // determine mouse position on the chart\n        if (args.mouse) {\n            mouse = args.mouse;\n        }\n\n        // determine focus data\n        if (args.data) {\n            if ($$.isMultipleX()) {\n                // if multiple xs, target point will be determined by mouse\n                mouse = [$$.x(args.data.x), $$.getYScale(args.data.id)(args.data.value)];\n                index = null;\n            } else {\n                // TODO: when tooltip_grouped = false\n                index = isValue(args.data.index) ? args.data.index : $$.getIndexByX(args.data.x);\n            }\n        }\n        else if (typeof args.x !== 'undefined') {\n            index = $$.getIndexByX(args.x);\n        }\n        else if (typeof args.index !== 'undefined') {\n            index = args.index;\n        }\n\n        // emulate mouse events to show\n        $$.dispatchEvent('mouseover', index, mouse);\n        $$.dispatchEvent('mousemove', index, mouse);\n\n        $$.config.tooltip_onshow.call($$, args.data);\n    };\n    c3_chart_fn.tooltip.hide = function () {\n        // TODO: get target data by checking the state of focus\n        this.internal.dispatchEvent('mouseout', 0);\n\n        this.internal.config.tooltip_onhide.call(this);\n    };\n\n    // Features:\n    // 1. category axis\n    // 2. ceil values of translate/x/y to int for half pixel antialiasing\n    // 3. multiline tick text\n    var tickTextCharSize;\n    function c3_axis(d3, params) {\n        var scale = d3.scale.linear(), orient = \"bottom\", innerTickSize = 6, outerTickSize, tickPadding = 3, tickValues = null, tickFormat, tickArguments;\n\n        var tickOffset = 0, tickCulling = true, tickCentered;\n\n        params = params || {};\n        outerTickSize = params.withOuterTick ? 6 : 0;\n\n        function axisX(selection, x) {\n            selection.attr(\"transform\", function (d) {\n                return \"translate(\" + Math.ceil(x(d) + tickOffset) + \", 0)\";\n            });\n        }\n        function axisY(selection, y) {\n            selection.attr(\"transform\", function (d) {\n                return \"translate(0,\" + Math.ceil(y(d)) + \")\";\n            });\n        }\n        function scaleExtent(domain) {\n            var start = domain[0], stop = domain[domain.length - 1];\n            return start < stop ? [ start, stop ] : [ stop, start ];\n        }\n        function generateTicks(scale) {\n            var i, domain, ticks = [];\n            if (scale.ticks) {\n                return scale.ticks.apply(scale, tickArguments);\n            }\n            domain = scale.domain();\n            for (i = Math.ceil(domain[0]); i < domain[1]; i++) {\n                ticks.push(i);\n            }\n            if (ticks.length > 0 && ticks[0] > 0) {\n                ticks.unshift(ticks[0] - (ticks[1] - ticks[0]));\n            }\n            return ticks;\n        }\n        function copyScale() {\n            var newScale = scale.copy(), domain;\n            if (params.isCategory) {\n                domain = scale.domain();\n                newScale.domain([domain[0], domain[1] - 1]);\n            }\n            return newScale;\n        }\n        function textFormatted(v) {\n            var formatted = tickFormat ? tickFormat(v) : v;\n            return typeof formatted !== 'undefined' ? formatted : '';\n        }\n        function getSizeFor1Char(tick) {\n            if (tickTextCharSize) {\n                return tickTextCharSize;\n            }\n            var size = {\n                h: 11.5,\n                w: 5.5\n            };\n            tick.select('text').text(textFormatted).each(function (d) {\n                var box = this.getBoundingClientRect(),\n                    text = textFormatted(d),\n                    h = box.height,\n                    w = text ? (box.width / text.length) : undefined;\n                if (h && w) {\n                    size.h = h;\n                    size.w = w;\n                }\n            }).text('');\n            tickTextCharSize = size;\n            return size;\n        }\n        function transitionise(selection) {\n            return params.withoutTransition ? selection : d3.transition(selection);\n        }\n        function axis(g) {\n            g.each(function () {\n                var g = axis.g = d3.select(this);\n\n                var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = copyScale();\n\n                var ticks = tickValues ? tickValues : generateTicks(scale1),\n                    tick = g.selectAll(\".tick\").data(ticks, scale1),\n                    tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", 1e-6),\n                    // MEMO: No exit transition. The reason is this transition affects max tick width calculation because old tick will be included in the ticks.\n                    tickExit = tick.exit().remove(),\n                    tickUpdate = transitionise(tick).style(\"opacity\", 1),\n                    tickTransform, tickX, tickY;\n\n                var range = scale.rangeExtent ? scale.rangeExtent() : scaleExtent(scale.range()),\n                    path = g.selectAll(\".domain\").data([ 0 ]),\n                    pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), transitionise(path));\n                tickEnter.append(\"line\");\n                tickEnter.append(\"text\");\n\n                var lineEnter = tickEnter.select(\"line\"),\n                    lineUpdate = tickUpdate.select(\"line\"),\n                    textEnter = tickEnter.select(\"text\"),\n                    textUpdate = tickUpdate.select(\"text\");\n\n                if (params.isCategory) {\n                    tickOffset = Math.ceil((scale1(1) - scale1(0)) / 2);\n                    tickX = tickCentered ? 0 : tickOffset;\n                    tickY = tickCentered ? tickOffset : 0;\n                } else {\n                    tickOffset = tickX = 0;\n                }\n\n                var text, tspan, sizeFor1Char = getSizeFor1Char(g.select('.tick')), counts = [];\n                var tickLength = Math.max(innerTickSize, 0) + tickPadding,\n                    isVertical = orient === 'left' || orient === 'right';\n\n                // this should be called only when category axis\n                function splitTickText(d, maxWidth) {\n                    var tickText = textFormatted(d),\n                        subtext, spaceIndex, textWidth, splitted = [];\n\n                    if (Object.prototype.toString.call(tickText) === \"[object Array]\") {\n                        return tickText;\n                    }\n\n                    if (!maxWidth || maxWidth <= 0) {\n                        maxWidth = isVertical ? 95 : params.isCategory ? (Math.ceil(scale1(ticks[1]) - scale1(ticks[0])) - 12) : 110;\n                    }\n\n                    function split(splitted, text) {\n                        spaceIndex = undefined;\n                        for (var i = 1; i < text.length; i++) {\n                            if (text.charAt(i) === ' ') {\n                                spaceIndex = i;\n                            }\n                            subtext = text.substr(0, i + 1);\n                            textWidth = sizeFor1Char.w * subtext.length;\n                            // if text width gets over tick width, split by space index or crrent index\n                            if (maxWidth < textWidth) {\n                                return split(\n                                    splitted.concat(text.substr(0, spaceIndex ? spaceIndex : i)),\n                                    text.slice(spaceIndex ? spaceIndex + 1 : i)\n                                );\n                            }\n                        }\n                        return splitted.concat(text);\n                    }\n\n                    return split(splitted, tickText + \"\");\n                }\n\n                function tspanDy(d, i) {\n                    var dy = sizeFor1Char.h;\n                    if (i === 0) {\n                        if (orient === 'left' || orient === 'right') {\n                            dy = -((counts[d.index] - 1) * (sizeFor1Char.h / 2) - 3);\n                        } else {\n                            dy = \".71em\";\n                        }\n                    }\n                    return dy;\n                }\n\n                function tickSize(d) {\n                    var tickPosition = scale(d) + (tickCentered ? 0 : tickOffset);\n                    return range[0] < tickPosition && tickPosition < range[1] ? innerTickSize : 0;\n                }\n\n                text = tick.select(\"text\");\n                tspan = text.selectAll('tspan')\n                    .data(function (d, i) {\n                        var splitted = params.tickMultiline ? splitTickText(d, params.tickWidth) : [].concat(textFormatted(d));\n                        counts[i] = splitted.length;\n                        return splitted.map(function (s) {\n                            return { index: i, splitted: s };\n                        });\n                    });\n                tspan.enter().append('tspan');\n                tspan.exit().remove();\n                tspan.text(function (d) { return d.splitted; });\n\n                var rotate = params.tickTextRotate;\n\n                function textAnchorForText(rotate) {\n                    if (!rotate) {\n                        return 'middle';\n                    }\n                    return rotate > 0 ? \"start\" : \"end\";\n                }\n                function textTransform(rotate) {\n                    if (!rotate) {\n                        return '';\n                    }\n                    return \"rotate(\" + rotate + \")\";\n                }\n                function dxForText(rotate) {\n                    if (!rotate) {\n                        return 0;\n                    }\n                    return 8 * Math.sin(Math.PI * (rotate / 180));\n                }\n                function yForText(rotate) {\n                    if (!rotate) {\n                        return tickLength;\n                    }\n                    return 11.5 - 2.5 * (rotate / 15) * (rotate > 0 ? 1 : -1);\n                }\n\n                switch (orient) {\n                case \"bottom\":\n                    {\n                        tickTransform = axisX;\n                        lineEnter.attr(\"y2\", innerTickSize);\n                        textEnter.attr(\"y\", tickLength);\n                        lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", tickSize);\n                        textUpdate.attr(\"x\", 0).attr(\"y\", yForText(rotate))\n                            .style(\"text-anchor\", textAnchorForText(rotate))\n                            .attr(\"transform\", textTransform(rotate));\n                        tspan.attr('x', 0).attr(\"dy\", tspanDy).attr('dx', dxForText(rotate));\n                        pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + outerTickSize + \"V0H\" + range[1] + \"V\" + outerTickSize);\n                        break;\n                    }\n                case \"top\":\n                    {\n                        // TODO: rotated tick text\n                        tickTransform = axisX;\n                        lineEnter.attr(\"y2\", -innerTickSize);\n                        textEnter.attr(\"y\", -tickLength);\n                        lineUpdate.attr(\"x2\", 0).attr(\"y2\", -innerTickSize);\n                        textUpdate.attr(\"x\", 0).attr(\"y\", -tickLength);\n                        text.style(\"text-anchor\", \"middle\");\n                        tspan.attr('x', 0).attr(\"dy\", \"0em\");\n                        pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + -outerTickSize + \"V0H\" + range[1] + \"V\" + -outerTickSize);\n                        break;\n                    }\n                case \"left\":\n                    {\n                        tickTransform = axisY;\n                        lineEnter.attr(\"x2\", -innerTickSize);\n                        textEnter.attr(\"x\", -tickLength);\n                        lineUpdate.attr(\"x2\", -innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n                        textUpdate.attr(\"x\", -tickLength).attr(\"y\", tickOffset);\n                        text.style(\"text-anchor\", \"end\");\n                        tspan.attr('x', -tickLength).attr(\"dy\", tspanDy);\n                        pathUpdate.attr(\"d\", \"M\" + -outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + -outerTickSize);\n                        break;\n                    }\n                case \"right\":\n                    {\n                        tickTransform = axisY;\n                        lineEnter.attr(\"x2\", innerTickSize);\n                        textEnter.attr(\"x\", tickLength);\n                        lineUpdate.attr(\"x2\", innerTickSize).attr(\"y2\", 0);\n                        textUpdate.attr(\"x\", tickLength).attr(\"y\", 0);\n                        text.style(\"text-anchor\", \"start\");\n                        tspan.attr('x', tickLength).attr(\"dy\", tspanDy);\n                        pathUpdate.attr(\"d\", \"M\" + outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + outerTickSize);\n                        break;\n                    }\n                }\n                if (scale1.rangeBand) {\n                    var x = scale1, dx = x.rangeBand() / 2;\n                    scale0 = scale1 = function (d) {\n                        return x(d) + dx;\n                    };\n                } else if (scale0.rangeBand) {\n                    scale0 = scale1;\n                } else {\n                    tickExit.call(tickTransform, scale1);\n                }\n                tickEnter.call(tickTransform, scale0);\n                tickUpdate.call(tickTransform, scale1);\n            });\n        }\n        axis.scale = function (x) {\n            if (!arguments.length) { return scale; }\n            scale = x;\n            return axis;\n        };\n        axis.orient = function (x) {\n            if (!arguments.length) { return orient; }\n            orient = x in {top: 1, right: 1, bottom: 1, left: 1} ? x + \"\" : \"bottom\";\n            return axis;\n        };\n        axis.tickFormat = function (format) {\n            if (!arguments.length) { return tickFormat; }\n            tickFormat = format;\n            return axis;\n        };\n        axis.tickCentered = function (isCentered) {\n            if (!arguments.length) { return tickCentered; }\n            tickCentered = isCentered;\n            return axis;\n        };\n        axis.tickOffset = function () {\n            return tickOffset;\n        };\n        axis.tickInterval = function () {\n            var interval, length;\n            if (params.isCategory) {\n                interval = tickOffset * 2;\n            }\n            else {\n                length = axis.g.select('path.domain').node().getTotalLength() - outerTickSize * 2;\n                interval = length / axis.g.selectAll('line').size();\n            }\n            return interval === Infinity ? 0 : interval;\n        };\n        axis.ticks = function () {\n            if (!arguments.length) { return tickArguments; }\n            tickArguments = arguments;\n            return axis;\n        };\n        axis.tickCulling = function (culling) {\n            if (!arguments.length) { return tickCulling; }\n            tickCulling = culling;\n            return axis;\n        };\n        axis.tickValues = function (x) {\n            if (typeof x === 'function') {\n                tickValues = function () {\n                    return x(scale.domain());\n                };\n            }\n            else {\n                if (!arguments.length) { return tickValues; }\n                tickValues = x;\n            }\n            return axis;\n        };\n        return axis;\n    }\n\n    c3_chart_internal_fn.isSafari = function () {\n        var ua = window.navigator.userAgent;\n        return ua.indexOf('Safari') >= 0 && ua.indexOf('Chrome') < 0;\n    };\n    c3_chart_internal_fn.isChrome = function () {\n        var ua = window.navigator.userAgent;\n        return ua.indexOf('Chrome') >= 0;\n    };\n\n    /* jshint ignore:start */\n\n    // PhantomJS doesn't have support for Function.prototype.bind, which has caused confusion. Use\n    // this polyfill to avoid the confusion.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill\n\n    if (!Function.prototype.bind) {\n      Function.prototype.bind = function(oThis) {\n        if (typeof this !== 'function') {\n          // closest thing possible to the ECMAScript 5\n          // internal IsCallable function\n          throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n        }\n\n        var aArgs   = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP    = function() {},\n            fBound  = function() {\n              return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n            };\n\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n      };\n    }\n\n    //SVGPathSeg API polyfill\n    //https://github.com/progers/pathseg\n    //\n    //This is a drop-in replacement for the SVGPathSeg and SVGPathSegList APIs that were removed from\n    //SVG2 (https://lists.w3.org/Archives/Public/www-svg/2015Jun/0044.html), including the latest spec\n    //changes which were implemented in Firefox 43 and Chrome 46.\n    //Chrome 48 removes these APIs, so this polyfill is required.\n\n    (function() { \"use strict\";\n     if (!(\"SVGPathSeg\" in window)) {\n         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSeg\n         window.SVGPathSeg = function(type, typeAsLetter, owningPathSegList) {\n             this.pathSegType = type;\n             this.pathSegTypeAsLetter = typeAsLetter;\n             this._owningPathSegList = owningPathSegList;\n         }\n\n         SVGPathSeg.PATHSEG_UNKNOWN = 0;\n         SVGPathSeg.PATHSEG_CLOSEPATH = 1;\n         SVGPathSeg.PATHSEG_MOVETO_ABS = 2;\n         SVGPathSeg.PATHSEG_MOVETO_REL = 3;\n         SVGPathSeg.PATHSEG_LINETO_ABS = 4;\n         SVGPathSeg.PATHSEG_LINETO_REL = 5;\n         SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS = 6;\n         SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL = 7;\n         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS = 8;\n         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL = 9;\n         SVGPathSeg.PATHSEG_ARC_ABS = 10;\n         SVGPathSeg.PATHSEG_ARC_REL = 11;\n         SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS = 12;\n         SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL = 13;\n         SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS = 14;\n         SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL = 15;\n         SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;\n         SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;\n         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;\n         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19;\n\n         // Notify owning PathSegList on any changes so they can be synchronized back to the path element.\n         SVGPathSeg.prototype._segmentChanged = function() {\n             if (this._owningPathSegList)\n                 this._owningPathSegList.segmentChanged(this);\n         }\n\n         window.SVGPathSegClosePath = function(owningPathSegList) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CLOSEPATH, \"z\", owningPathSegList);\n         }\n         SVGPathSegClosePath.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegClosePath.prototype.toString = function() { return \"[object SVGPathSegClosePath]\"; }\n         SVGPathSegClosePath.prototype._asPathString = function() { return this.pathSegTypeAsLetter; }\n         SVGPathSegClosePath.prototype.clone = function() { return new SVGPathSegClosePath(undefined); }\n\n         window.SVGPathSegMovetoAbs = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_MOVETO_ABS, \"M\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegMovetoAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegMovetoAbs.prototype.toString = function() { return \"[object SVGPathSegMovetoAbs]\"; }\n         SVGPathSegMovetoAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegMovetoAbs.prototype.clone = function() { return new SVGPathSegMovetoAbs(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegMovetoAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegMovetoAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegMovetoRel = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_MOVETO_REL, \"m\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegMovetoRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegMovetoRel.prototype.toString = function() { return \"[object SVGPathSegMovetoRel]\"; }\n         SVGPathSegMovetoRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegMovetoRel.prototype.clone = function() { return new SVGPathSegMovetoRel(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegMovetoRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegMovetoRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoAbs = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_ABS, \"L\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegLinetoAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoAbs.prototype.toString = function() { return \"[object SVGPathSegLinetoAbs]\"; }\n         SVGPathSegLinetoAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegLinetoAbs.prototype.clone = function() { return new SVGPathSegLinetoAbs(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegLinetoAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegLinetoAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoRel = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_REL, \"l\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegLinetoRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoRel.prototype.toString = function() { return \"[object SVGPathSegLinetoRel]\"; }\n         SVGPathSegLinetoRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegLinetoRel.prototype.clone = function() { return new SVGPathSegLinetoRel(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegLinetoRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegLinetoRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoCubicAbs = function(owningPathSegList, x, y, x1, y1, x2, y2) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS, \"C\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x1 = x1;\n             this._y1 = y1;\n             this._x2 = x2;\n             this._y2 = y2;\n         }\n         SVGPathSegCurvetoCubicAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoCubicAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicAbs]\"; }\n         SVGPathSegCurvetoCubicAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoCubicAbs.prototype.clone = function() { return new SVGPathSegCurvetoCubicAbs(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2); }\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoCubicRel = function(owningPathSegList, x, y, x1, y1, x2, y2) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL, \"c\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x1 = x1;\n             this._y1 = y1;\n             this._x2 = x2;\n             this._y2 = y2;\n         }\n         SVGPathSegCurvetoCubicRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoCubicRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicRel]\"; }\n         SVGPathSegCurvetoCubicRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoCubicRel.prototype.clone = function() { return new SVGPathSegCurvetoCubicRel(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2); }\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoQuadraticAbs = function(owningPathSegList, x, y, x1, y1) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS, \"Q\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x1 = x1;\n             this._y1 = y1;\n         }\n         SVGPathSegCurvetoQuadraticAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoQuadraticAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticAbs]\"; }\n         SVGPathSegCurvetoQuadraticAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoQuadraticAbs.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticAbs(undefined, this._x, this._y, this._x1, this._y1); }\n         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoQuadraticRel = function(owningPathSegList, x, y, x1, y1) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL, \"q\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x1 = x1;\n             this._y1 = y1;\n         }\n         SVGPathSegCurvetoQuadraticRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoQuadraticRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticRel]\"; }\n         SVGPathSegCurvetoQuadraticRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoQuadraticRel.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticRel(undefined, this._x, this._y, this._x1, this._y1); }\n         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegArcAbs = function(owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_ARC_ABS, \"A\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._r1 = r1;\n             this._r2 = r2;\n             this._angle = angle;\n             this._largeArcFlag = largeArcFlag;\n             this._sweepFlag = sweepFlag;\n         }\n         SVGPathSegArcAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegArcAbs.prototype.toString = function() { return \"[object SVGPathSegArcAbs]\"; }\n         SVGPathSegArcAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegArcAbs.prototype.clone = function() { return new SVGPathSegArcAbs(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag); }\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"r1\", { get: function() { return this._r1; }, set: function(r1) { this._r1 = r1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"r2\", { get: function() { return this._r2; }, set: function(r2) { this._r2 = r2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"angle\", { get: function() { return this._angle; }, set: function(angle) { this._angle = angle; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"largeArcFlag\", { get: function() { return this._largeArcFlag; }, set: function(largeArcFlag) { this._largeArcFlag = largeArcFlag; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"sweepFlag\", { get: function() { return this._sweepFlag; }, set: function(sweepFlag) { this._sweepFlag = sweepFlag; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegArcRel = function(owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_ARC_REL, \"a\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._r1 = r1;\n             this._r2 = r2;\n             this._angle = angle;\n             this._largeArcFlag = largeArcFlag;\n             this._sweepFlag = sweepFlag;\n         }\n         SVGPathSegArcRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegArcRel.prototype.toString = function() { return \"[object SVGPathSegArcRel]\"; }\n         SVGPathSegArcRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegArcRel.prototype.clone = function() { return new SVGPathSegArcRel(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag); }\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"r1\", { get: function() { return this._r1; }, set: function(r1) { this._r1 = r1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"r2\", { get: function() { return this._r2; }, set: function(r2) { this._r2 = r2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"angle\", { get: function() { return this._angle; }, set: function(angle) { this._angle = angle; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"largeArcFlag\", { get: function() { return this._largeArcFlag; }, set: function(largeArcFlag) { this._largeArcFlag = largeArcFlag; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"sweepFlag\", { get: function() { return this._sweepFlag; }, set: function(sweepFlag) { this._sweepFlag = sweepFlag; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoHorizontalAbs = function(owningPathSegList, x) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS, \"H\", owningPathSegList);\n             this._x = x;\n         }\n         SVGPathSegLinetoHorizontalAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoHorizontalAbs.prototype.toString = function() { return \"[object SVGPathSegLinetoHorizontalAbs]\"; }\n         SVGPathSegLinetoHorizontalAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x; }\n         SVGPathSegLinetoHorizontalAbs.prototype.clone = function() { return new SVGPathSegLinetoHorizontalAbs(undefined, this._x); }\n         Object.defineProperty(SVGPathSegLinetoHorizontalAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoHorizontalRel = function(owningPathSegList, x) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL, \"h\", owningPathSegList);\n             this._x = x;\n         }\n         SVGPathSegLinetoHorizontalRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoHorizontalRel.prototype.toString = function() { return \"[object SVGPathSegLinetoHorizontalRel]\"; }\n         SVGPathSegLinetoHorizontalRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x; }\n         SVGPathSegLinetoHorizontalRel.prototype.clone = function() { return new SVGPathSegLinetoHorizontalRel(undefined, this._x); }\n         Object.defineProperty(SVGPathSegLinetoHorizontalRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoVerticalAbs = function(owningPathSegList, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS, \"V\", owningPathSegList);\n             this._y = y;\n         }\n         SVGPathSegLinetoVerticalAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoVerticalAbs.prototype.toString = function() { return \"[object SVGPathSegLinetoVerticalAbs]\"; }\n         SVGPathSegLinetoVerticalAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._y; }\n         SVGPathSegLinetoVerticalAbs.prototype.clone = function() { return new SVGPathSegLinetoVerticalAbs(undefined, this._y); }\n         Object.defineProperty(SVGPathSegLinetoVerticalAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoVerticalRel = function(owningPathSegList, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL, \"v\", owningPathSegList);\n             this._y = y;\n         }\n         SVGPathSegLinetoVerticalRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoVerticalRel.prototype.toString = function() { return \"[object SVGPathSegLinetoVerticalRel]\"; }\n         SVGPathSegLinetoVerticalRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._y; }\n         SVGPathSegLinetoVerticalRel.prototype.clone = function() { return new SVGPathSegLinetoVerticalRel(undefined, this._y); }\n         Object.defineProperty(SVGPathSegLinetoVerticalRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoCubicSmoothAbs = function(owningPathSegList, x, y, x2, y2) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS, \"S\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x2 = x2;\n             this._y2 = y2;\n         }\n         SVGPathSegCurvetoCubicSmoothAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoCubicSmoothAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicSmoothAbs]\"; }\n         SVGPathSegCurvetoCubicSmoothAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoCubicSmoothAbs.prototype.clone = function() { return new SVGPathSegCurvetoCubicSmoothAbs(undefined, this._x, this._y, this._x2, this._y2); }\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoCubicSmoothRel = function(owningPathSegList, x, y, x2, y2) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL, \"s\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x2 = x2;\n             this._y2 = y2;\n         }\n         SVGPathSegCurvetoCubicSmoothRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoCubicSmoothRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicSmoothRel]\"; }\n         SVGPathSegCurvetoCubicSmoothRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoCubicSmoothRel.prototype.clone = function() { return new SVGPathSegCurvetoCubicSmoothRel(undefined, this._x, this._y, this._x2, this._y2); }\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoQuadraticSmoothAbs = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS, \"T\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegCurvetoQuadraticSmoothAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoQuadraticSmoothAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticSmoothAbs]\"; }\n         SVGPathSegCurvetoQuadraticSmoothAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoQuadraticSmoothAbs.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticSmoothAbs(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoQuadraticSmoothRel = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL, \"t\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegCurvetoQuadraticSmoothRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoQuadraticSmoothRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticSmoothRel]\"; }\n         SVGPathSegCurvetoQuadraticSmoothRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoQuadraticSmoothRel.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticSmoothRel(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         // Add createSVGPathSeg* functions to SVGPathElement.\n         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathElement.\n         SVGPathElement.prototype.createSVGPathSegClosePath = function() { return new SVGPathSegClosePath(undefined); }\n         SVGPathElement.prototype.createSVGPathSegMovetoAbs = function(x, y) { return new SVGPathSegMovetoAbs(undefined, x, y); }\n         SVGPathElement.prototype.createSVGPathSegMovetoRel = function(x, y) { return new SVGPathSegMovetoRel(undefined, x, y); }\n         SVGPathElement.prototype.createSVGPathSegLinetoAbs = function(x, y) { return new SVGPathSegLinetoAbs(undefined, x, y); }\n         SVGPathElement.prototype.createSVGPathSegLinetoRel = function(x, y) { return new SVGPathSegLinetoRel(undefined, x, y); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function(x, y, x1, y1, x2, y2) { return new SVGPathSegCurvetoCubicAbs(undefined, x, y, x1, y1, x2, y2); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function(x, y, x1, y1, x2, y2) { return new SVGPathSegCurvetoCubicRel(undefined, x, y, x1, y1, x2, y2); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function(x, y, x1, y1) { return new SVGPathSegCurvetoQuadraticAbs(undefined, x, y, x1, y1); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function(x, y, x1, y1) { return new SVGPathSegCurvetoQuadraticRel(undefined, x, y, x1, y1); }\n         SVGPathElement.prototype.createSVGPathSegArcAbs = function(x, y, r1, r2, angle, largeArcFlag, sweepFlag) { return new SVGPathSegArcAbs(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag); }\n         SVGPathElement.prototype.createSVGPathSegArcRel = function(x, y, r1, r2, angle, largeArcFlag, sweepFlag) { return new SVGPathSegArcRel(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag); }\n         SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function(x) { return new SVGPathSegLinetoHorizontalAbs(undefined, x); }\n         SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function(x) { return new SVGPathSegLinetoHorizontalRel(undefined, x); }\n         SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function(y) { return new SVGPathSegLinetoVerticalAbs(undefined, y); }\n         SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function(y) { return new SVGPathSegLinetoVerticalRel(undefined, y); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function(x, y, x2, y2) { return new SVGPathSegCurvetoCubicSmoothAbs(undefined, x, y, x2, y2); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function(x, y, x2, y2) { return new SVGPathSegCurvetoCubicSmoothRel(undefined, x, y, x2, y2); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function(x, y) { return new SVGPathSegCurvetoQuadraticSmoothAbs(undefined, x, y); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function(x, y) { return new SVGPathSegCurvetoQuadraticSmoothRel(undefined, x, y); }\n     }\n\n     if (!(\"SVGPathSegList\" in window)) {\n         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSegList\n         window.SVGPathSegList = function(pathElement) {\n             this._pathElement = pathElement;\n             this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n\n             // Use a MutationObserver to catch changes to the path's \"d\" attribute.\n             this._mutationObserverConfig = { \"attributes\": true, \"attributeFilter\": [\"d\"] };\n             this._pathElementMutationObserver = new MutationObserver(this._updateListFromPathMutations.bind(this));\n             this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n         }\n\n         Object.defineProperty(SVGPathSegList.prototype, \"numberOfItems\", {\n             get: function() {\n                 this._checkPathSynchronizedToList();\n                 return this._list.length;\n             },\n             enumerable: true\n         });\n\n         // Add the pathSegList accessors to SVGPathElement.\n         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGAnimatedPathData\n         Object.defineProperty(SVGPathElement.prototype, \"pathSegList\", {\n             get: function() {\n                 if (!this._pathSegList)\n                     this._pathSegList = new SVGPathSegList(this);\n                 return this._pathSegList;\n             },\n             enumerable: true\n         });\n         // FIXME: The following are not implemented and simply return SVGPathElement.pathSegList.\n         Object.defineProperty(SVGPathElement.prototype, \"normalizedPathSegList\", { get: function() { return this.pathSegList; }, enumerable: true });\n         Object.defineProperty(SVGPathElement.prototype, \"animatedPathSegList\", { get: function() { return this.pathSegList; }, enumerable: true });\n         Object.defineProperty(SVGPathElement.prototype, \"animatedNormalizedPathSegList\", { get: function() { return this.pathSegList; }, enumerable: true });\n\n         // Process any pending mutations to the path element and update the list as needed.\n         // This should be the first call of all public functions and is needed because\n         // MutationObservers are not synchronous so we can have pending asynchronous mutations.\n         SVGPathSegList.prototype._checkPathSynchronizedToList = function() {\n             this._updateListFromPathMutations(this._pathElementMutationObserver.takeRecords());\n         }\n\n         SVGPathSegList.prototype._updateListFromPathMutations = function(mutationRecords) {\n             if (!this._pathElement)\n                 return;\n             var hasPathMutations = false;\n             mutationRecords.forEach(function(record) {\n                 if (record.attributeName == \"d\")\n                     hasPathMutations = true;\n             });\n             if (hasPathMutations)\n                 this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n         }\n\n         // Serialize the list and update the path's 'd' attribute.\n         SVGPathSegList.prototype._writeListToPath = function() {\n             this._pathElementMutationObserver.disconnect();\n             this._pathElement.setAttribute(\"d\", SVGPathSegList._pathSegArrayAsString(this._list));\n             this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n         }\n\n         // When a path segment changes the list needs to be synchronized back to the path element.\n         SVGPathSegList.prototype.segmentChanged = function(pathSeg) {\n             this._writeListToPath();\n         }\n\n         SVGPathSegList.prototype.clear = function() {\n             this._checkPathSynchronizedToList();\n\n             this._list.forEach(function(pathSeg) {\n                 pathSeg._owningPathSegList = null;\n             });\n             this._list = [];\n             this._writeListToPath();\n         }\n\n         SVGPathSegList.prototype.initialize = function(newItem) {\n             this._checkPathSynchronizedToList();\n\n             this._list = [newItem];\n             newItem._owningPathSegList = this;\n             this._writeListToPath();\n             return newItem;\n         }\n\n         SVGPathSegList.prototype._checkValidIndex = function(index) {\n             if (isNaN(index) || index < 0 || index >= this.numberOfItems)\n                 throw \"INDEX_SIZE_ERR\";\n         }\n\n         SVGPathSegList.prototype.getItem = function(index) {\n             this._checkPathSynchronizedToList();\n\n             this._checkValidIndex(index);\n             return this._list[index];\n         }\n\n         SVGPathSegList.prototype.insertItemBefore = function(newItem, index) {\n             this._checkPathSynchronizedToList();\n\n             // Spec: If the index is greater than or equal to numberOfItems, then the new item is appended to the end of the list.\n             if (index > this.numberOfItems)\n                 index = this.numberOfItems;\n             if (newItem._owningPathSegList) {\n                 // SVG2 spec says to make a copy.\n                 newItem = newItem.clone();\n             }\n             this._list.splice(index, 0, newItem);\n             newItem._owningPathSegList = this;\n             this._writeListToPath();\n             return newItem;\n         }\n\n         SVGPathSegList.prototype.replaceItem = function(newItem, index) {\n             this._checkPathSynchronizedToList();\n\n             if (newItem._owningPathSegList) {\n                 // SVG2 spec says to make a copy.\n                 newItem = newItem.clone();\n             }\n             this._checkValidIndex(index);\n             this._list[index] = newItem;\n             newItem._owningPathSegList = this;\n             this._writeListToPath();\n             return newItem;\n         }\n\n         SVGPathSegList.prototype.removeItem = function(index) {\n             this._checkPathSynchronizedToList();\n\n             this._checkValidIndex(index);\n             var item = this._list[index];\n             this._list.splice(index, 1);\n             this._writeListToPath();\n             return item;\n         }\n\n         SVGPathSegList.prototype.appendItem = function(newItem) {\n             this._checkPathSynchronizedToList();\n\n             if (newItem._owningPathSegList) {\n                 // SVG2 spec says to make a copy.\n                 newItem = newItem.clone();\n             }\n             this._list.push(newItem);\n             newItem._owningPathSegList = this;\n             // TODO: Optimize this to just append to the existing attribute.\n             this._writeListToPath();\n             return newItem;\n         }\n\n         SVGPathSegList._pathSegArrayAsString = function(pathSegArray) {\n             var string = \"\";\n             var first = true;\n             pathSegArray.forEach(function(pathSeg) {\n                 if (first) {\n                     first = false;\n                     string += pathSeg._asPathString();\n                 } else {\n                     string += \" \" + pathSeg._asPathString();\n                 }\n             });\n             return string;\n         }\n\n         // This closely follows SVGPathParser::parsePath from Source/core/svg/SVGPathParser.cpp.\n         SVGPathSegList.prototype._parsePath = function(string) {\n             if (!string || string.length == 0)\n                 return [];\n\n             var owningPathSegList = this;\n\n             var Builder = function() {\n                 this.pathSegList = [];\n             }\n\n             Builder.prototype.appendSegment = function(pathSeg) {\n                 this.pathSegList.push(pathSeg);\n             }\n\n             var Source = function(string) {\n                 this._string = string;\n                 this._currentIndex = 0;\n                 this._endIndex = this._string.length;\n                 this._previousCommand = SVGPathSeg.PATHSEG_UNKNOWN;\n\n                 this._skipOptionalSpaces();\n             }\n\n             Source.prototype._isCurrentSpace = function() {\n                 var character = this._string[this._currentIndex];\n                 return character <= \" \" && (character == \" \" || character == \"\\n\" || character == \"\\t\" || character == \"\\r\" || character == \"\\f\");\n             }\n\n             Source.prototype._skipOptionalSpaces = function() {\n                 while (this._currentIndex < this._endIndex && this._isCurrentSpace())\n                     this._currentIndex++;\n                 return this._currentIndex < this._endIndex;\n             }\n\n             Source.prototype._skipOptionalSpacesOrDelimiter = function() {\n                 if (this._currentIndex < this._endIndex && !this._isCurrentSpace() && this._string.charAt(this._currentIndex) != \",\")\n                     return false;\n                 if (this._skipOptionalSpaces()) {\n                     if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \",\") {\n                         this._currentIndex++;\n                         this._skipOptionalSpaces();\n                     }\n                 }\n                 return this._currentIndex < this._endIndex;\n             }\n\n             Source.prototype.hasMoreData = function() {\n                 return this._currentIndex < this._endIndex;\n             }\n\n             Source.prototype.peekSegmentType = function() {\n                 var lookahead = this._string[this._currentIndex];\n                 return this._pathSegTypeFromChar(lookahead);\n             }\n\n             Source.prototype._pathSegTypeFromChar = function(lookahead) {\n                 switch (lookahead) {\n                 case \"Z\":\n                 case \"z\":\n                     return SVGPathSeg.PATHSEG_CLOSEPATH;\n                 case \"M\":\n                     return SVGPathSeg.PATHSEG_MOVETO_ABS;\n                 case \"m\":\n                     return SVGPathSeg.PATHSEG_MOVETO_REL;\n                 case \"L\":\n                     return SVGPathSeg.PATHSEG_LINETO_ABS;\n                 case \"l\":\n                     return SVGPathSeg.PATHSEG_LINETO_REL;\n                 case \"C\":\n                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;\n                 case \"c\":\n                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;\n                 case \"Q\":\n                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;\n                 case \"q\":\n                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;\n                 case \"A\":\n                     return SVGPathSeg.PATHSEG_ARC_ABS;\n                 case \"a\":\n                     return SVGPathSeg.PATHSEG_ARC_REL;\n                 case \"H\":\n                     return SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;\n                 case \"h\":\n                     return SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;\n                 case \"V\":\n                     return SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;\n                 case \"v\":\n                     return SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;\n                 case \"S\":\n                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;\n                 case \"s\":\n                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;\n                 case \"T\":\n                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;\n                 case \"t\":\n                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;\n                 default:\n                     return SVGPathSeg.PATHSEG_UNKNOWN;\n                 }\n             }\n\n             Source.prototype._nextCommandHelper = function(lookahead, previousCommand) {\n                 // Check for remaining coordinates in the current command.\n                 if ((lookahead == \"+\" || lookahead == \"-\" || lookahead == \".\" || (lookahead >= \"0\" && lookahead <= \"9\")) && previousCommand != SVGPathSeg.PATHSEG_CLOSEPATH) {\n                     if (previousCommand == SVGPathSeg.PATHSEG_MOVETO_ABS)\n                         return SVGPathSeg.PATHSEG_LINETO_ABS;\n                     if (previousCommand == SVGPathSeg.PATHSEG_MOVETO_REL)\n                         return SVGPathSeg.PATHSEG_LINETO_REL;\n                     return previousCommand;\n                 }\n                 return SVGPathSeg.PATHSEG_UNKNOWN;\n             }\n\n             Source.prototype.initialCommandIsMoveTo = function() {\n                 // If the path is empty it is still valid, so return true.\n                 if (!this.hasMoreData())\n                     return true;\n                 var command = this.peekSegmentType();\n                 // Path must start with moveTo.\n                 return command == SVGPathSeg.PATHSEG_MOVETO_ABS || command == SVGPathSeg.PATHSEG_MOVETO_REL;\n             }\n\n             // Parse a number from an SVG path. This very closely follows genericParseNumber(...) from Source/core/svg/SVGParserUtilities.cpp.\n             // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-PathDataBNF\n             Source.prototype._parseNumber = function() {\n                 var exponent = 0;\n                 var integer = 0;\n                 var frac = 1;\n                 var decimal = 0;\n                 var sign = 1;\n                 var expsign = 1;\n\n                 var startIndex = this._currentIndex;\n\n                 this._skipOptionalSpaces();\n\n                 // Read the sign.\n                 if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"+\")\n                     this._currentIndex++;\n                 else if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"-\") {\n                     this._currentIndex++;\n                     sign = -1;\n                 }\n\n                 if (this._currentIndex == this._endIndex || ((this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") && this._string.charAt(this._currentIndex) != \".\"))\n                     // The first character of a number must be one of [0-9+-.].\n                     return undefined;\n\n                 // Read the integer part, build right-to-left.\n                 var startIntPartIndex = this._currentIndex;\n                 while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\")\n                     this._currentIndex++; // Advance to first non-digit.\n\n                 if (this._currentIndex != startIntPartIndex) {\n                     var scanIntPartIndex = this._currentIndex - 1;\n                     var multiplier = 1;\n                     while (scanIntPartIndex >= startIntPartIndex) {\n                         integer += multiplier * (this._string.charAt(scanIntPartIndex--) - \"0\");\n                         multiplier *= 10;\n                     }\n                 }\n\n                 // Read the decimals.\n                 if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \".\") {\n                     this._currentIndex++;\n\n                     // There must be a least one digit following the .\n                     if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\")\n                         return undefined;\n                     while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\")\n                         decimal += (this._string.charAt(this._currentIndex++) - \"0\") * (frac *= 0.1);\n                 }\n\n                 // Read the exponent part.\n                 if (this._currentIndex != startIndex && this._currentIndex + 1 < this._endIndex && (this._string.charAt(this._currentIndex) == \"e\" || this._string.charAt(this._currentIndex) == \"E\") && (this._string.charAt(this._currentIndex + 1) != \"x\" && this._string.charAt(this._currentIndex + 1) != \"m\")) {\n                     this._currentIndex++;\n\n                     // Read the sign of the exponent.\n                     if (this._string.charAt(this._currentIndex) == \"+\") {\n                         this._currentIndex++;\n                     } else if (this._string.charAt(this._currentIndex) == \"-\") {\n                         this._currentIndex++;\n                         expsign = -1;\n                     }\n\n                     // There must be an exponent.\n                     if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\")\n                         return undefined;\n\n                     while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                         exponent *= 10;\n                         exponent += (this._string.charAt(this._currentIndex) - \"0\");\n                         this._currentIndex++;\n                     }\n                 }\n\n                 var number = integer + decimal;\n                 number *= sign;\n\n                 if (exponent)\n                     number *= Math.pow(10, expsign * exponent);\n\n                 if (startIndex == this._currentIndex)\n                     return undefined;\n\n                 this._skipOptionalSpacesOrDelimiter();\n\n                 return number;\n             }\n\n             Source.prototype._parseArcFlag = function() {\n                 if (this._currentIndex >= this._endIndex)\n                     return undefined;\n                 var flag = false;\n                 var flagChar = this._string.charAt(this._currentIndex++);\n                 if (flagChar == \"0\")\n                     flag = false;\n                 else if (flagChar == \"1\")\n                     flag = true;\n                 else\n                     return undefined;\n\n                 this._skipOptionalSpacesOrDelimiter();\n                 return flag;\n             }\n\n             Source.prototype.parseSegment = function() {\n                 var lookahead = this._string[this._currentIndex];\n                 var command = this._pathSegTypeFromChar(lookahead);\n                 if (command == SVGPathSeg.PATHSEG_UNKNOWN) {\n                     // Possibly an implicit command. Not allowed if this is the first command.\n                     if (this._previousCommand == SVGPathSeg.PATHSEG_UNKNOWN)\n                         return null;\n                     command = this._nextCommandHelper(lookahead, this._previousCommand);\n                     if (command == SVGPathSeg.PATHSEG_UNKNOWN)\n                         return null;\n                 } else {\n                     this._currentIndex++;\n                 }\n\n                 this._previousCommand = command;\n\n                 switch (command) {\n                 case SVGPathSeg.PATHSEG_MOVETO_REL:\n                     return new SVGPathSegMovetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_MOVETO_ABS:\n                     return new SVGPathSegMovetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_REL:\n                     return new SVGPathSegLinetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_ABS:\n                     return new SVGPathSegLinetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                     return new SVGPathSegLinetoHorizontalRel(owningPathSegList, this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                     return new SVGPathSegLinetoHorizontalAbs(owningPathSegList, this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                     return new SVGPathSegLinetoVerticalRel(owningPathSegList, this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                     return new SVGPathSegLinetoVerticalAbs(owningPathSegList, this._parseNumber());\n                 case SVGPathSeg.PATHSEG_CLOSEPATH:\n                     this._skipOptionalSpaces();\n                     return new SVGPathSegClosePath(owningPathSegList);\n                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoCubicRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoCubicAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                     var points = {x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoCubicSmoothRel(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                     var points = {x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoCubicSmoothAbs(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoQuadraticRel(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoQuadraticAbs(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n                     return new SVGPathSegCurvetoQuadraticSmoothRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n                     return new SVGPathSegCurvetoQuadraticSmoothAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_ARC_REL:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegArcRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                 case SVGPathSeg.PATHSEG_ARC_ABS:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegArcAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                 default:\n                     throw \"Unknown path seg type.\"\n                 }\n             }\n\n             var builder = new Builder();\n             var source = new Source(string);\n\n             if (!source.initialCommandIsMoveTo())\n                 return [];\n             while (source.hasMoreData()) {\n                 var pathSeg = source.parseSegment();\n                 if (!pathSeg)\n                     return [];\n                 builder.appendSegment(pathSeg);\n             }\n\n             return builder.pathSegList;\n         }\n     }\n    }());\n\n    /* jshint ignore:end */\n\n    if (typeof define === 'function' && define.amd) {\n        define(\"c3\", [\"d3\"], function () { return c3; });\n    } else if ('undefined' !== typeof exports && 'undefined' !== typeof module) {\n        module.exports = c3;\n    } else {\n        window.c3 = c3;\n    }\n\n})(window);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/c3/c3.js\n// module id = 736\n// module chunks = 0 2 4","import { Component, OnInit } from '@angular/core';\nimport * as c3 from 'c3';\ndeclare var $:any;\n\n@Component({\n  selector: 'app-home',\n  template: require('./home.component.html'),\n  styles: [require('./home.component.scss')]\n})\n\nexport class HomeComponent implements OnInit {\n\tngOnInit() {\n\t\tvar vmap: any = $('#vmap');\n\t\tvmap.vectorMap({\n\t\t\tmap: 'world_en',\n\t\t\tbackgroundColor: '#FFF',\n\t\t\tborderColor: '#D9D9D9',\n\t\t\tborderOpacity: 0.25,\n\t\t\tborderWidth: 1,\n\t\t\tcolor: '#CCCCCC',\n\t\t\tenableZoom: true,\n\t\t\thoverColor: '#63B4E6',\n\t\t\thoverOpacity: null,\n\t\t\tnormalizeFunction: 'linear',\n\t\t\tscaleColors: ['#b6d6ff', '#005ace'],\n\t\t\tselectedColor: '#63B4E6',\n\t\t\tselectedRegions: [],\n\t\t\tshowTooltip: true,\n\t\t\tonRegionClick: function(element: any, code: any, region: any) {\n\t\t\t\tvar message = 'You clicked \"'\n\t\t\t\t+ region\n\t\t\t\t+ '\" which has the code: '\n\t\t\t\t+ code.toUpperCase();\n\t\t\t\tconsole.log(message);\n\t\t\t}\n\t\t});\n\t\tc3.generate({\n\t\t\tbindto: '#lineChart',\n\t\t\tdata: {\n\t\t\t\tcolumns: [\n\t\t\t\t['Newuser', 30, 200, 100, 400, 150, 250],\n\t\t\t\t['Returning user', 50, 120, 210, 140, 115, 425],\n\t\t\t\t['Referral user', 40, 150, 98, 300, 175, 100]\n\t\t\t\t]\n\t\t\t},\n\t\t\tcolor: {\n\t\t\t\tpattern: ['#3CA2E0', '#5CB85C', '#F1B35B']\n\t\t\t},\n\t\t\taxis: {\n\t\t\t\tx: {\n\t\t\t\t\tshow: false\n\t\t\t\t},\n\t\t\t\ty: {\n\t\t\t\t\tshow: false\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tc3.generate({\n\t\t\tbindto: '#cbar',\n\t\t\tdata: {\n\t\t\t\tcolumns: [\n\t\t\t\t[10, 40, 20, 90, 35, 70, 10, 50, 20, 80, 60, 10, 20, 40, 70, 65]\n\t\t\t\t],\n\t\t\t\ttype: 'bar'\n\t\t\t},\n\t\t\tbar: {\n\t\t\t\twidth: {\n          \t\t\tratio: 0.5 // this makes bar width 50% of length between ticks\n          \t\t}\n          \t},\n          \tcolor: {\n          \t\tpattern: ['#DB5B57']\n          \t},\n          \tlegend: {\n          \t\tshow: false\n          \t},\n          \taxis: {\n          \t\tx: {\n          \t\t\tshow: false\n          \t\t},\n          \t\ty: {\n          \t\t\tshow: false\n          \t\t}\n          \t}\n        });\n\t\tc3.generate({\n\t\t\tbindto: '#pie',\n\t\t\tdata: {\n\t\t\t\tcolumns: [\n\t\t\t\t['data1', 11],\n\t\t\t\t['data2', 23],\n\t\t\t\t['data3', 66]\n\t\t\t\t],\n\t\t\t\ttype: 'pie'\n\t\t\t},\n\t\t\tcolor: {\n\t\t\t\tpattern: ['#5CB85C', '#F0AD4E', '#3CA2E0']\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\tshow: false\n\t\t\t}\n\t\t});\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/angular2-template-loader!C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/home/home.component.ts","import {Component, Input} from '@angular/core';\n\n@Component({\n\tselector: 'stats-cmp',\n\ttemplate: require('./stats.component.html')\n})\nexport class StatsComponent {\n\t@Input() public icon: string;\n\t@Input() public value: string;\n\t@Input() public text: string;\n\t@Input() public bgclass: string;\n\t@Input() public link: string;\n\t@Input() public progressValue: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/angular2-template-loader!C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/widgets/stats/stats.component.ts","import {Component, OnInit} from '@angular/core';\ndeclare var $:any;\n\n@Component({\n\tselector: 'todo-cmp',\n\ttemplate: require('./todo.component.html')\n})\n\nexport class TodoComponent implements OnInit {\n\tnewName: string;\n\tnameList: any = [\n\t\t'Meeting with Nabindar Singh.',\n\t\t'Exercise at 6:pm with Nicholas.',\n\t\t'Avengers Age of Ultron.',\n\t\t'Henna birthday at Mezbaan.'\n\t];\n\taddName(): boolean {\n\t\tthis.nameList.unshift(this.newName);\n\t\tthis.newName = '';\n\t\treturn true;\n\t}\n\tngOnInit() {\n\t\tvar todoListWraper: any = $('.todo-list-wrap');\n\t\ttodoListWraper.perfectScrollbar({});\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/angular2-template-loader!C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/widgets/todo/todo.component.ts","import { Route, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home.component';\n\nconst homeRoutes: Route[] = [\n\t{ path: '', component: HomeComponent }\n];\n\nexport default RouterModule.forChild(homeRoutes)\n\n\n// WEBPACK FOOTER //\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/angular2-template-loader!C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/home/home.routes.ts","import { NgModule } from '@angular/core';\nimport { StatsComponent } from './stats.component';\n\n@NgModule({\n\timports: [],\n\tdeclarations: [StatsComponent],\n\texports: [StatsComponent],\n})\n\nexport class StatsModule {}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/angular2-template-loader!C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/widgets/stats/stats.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TodoComponent } from './todo.component';\n\n@NgModule({\n\timports: [CommonModule, CommonModule, FormsModule],\n\tdeclarations: [TodoComponent],\n\texports: [TodoComponent],\n})\n\nexport class TodoModule {}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/angular2-template-loader!C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/widgets/todo/todo.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/home/home.component.scss\n// module id = 899\n// module chunks = 0 2","module.exports = \"<div class=\\\"animate\\\">\\n  <div class=\\\"row home-row\\\">\\n    <div class=\\\"col-lg-4 col-xl-3\\\">\\n      <div class=\\\"home-stats\\\">\\n        <stats-cmp icon=\\\"cloud-upload\\\" value=\\\"88%\\\" text=\\\"Server Uptime\\\" bgclass=\\\"info\\\" link=\\\"c3chart\\\" progressValue=\\\"88\\\"></stats-cmp>\\n        <stats-cmp icon=\\\"heartbeat\\\" value=\\\"94%\\\" text=\\\"Positive feedback\\\" bgclass=\\\"success\\\" link=\\\"c3chart\\\" progressValue=\\\"94\\\" ></stats-cmp>\\n        <stats-cmp icon=\\\"flag\\\" value=\\\"12,351\\\" text=\\\"Posts flagged\\\" bgclass=\\\"danger\\\" link=\\\"inbox\\\" progressValue=\\\"72\\\"></stats-cmp>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-4 col-xl-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-block\\\">\\n          <div class=\\\"chart-comment clearfix\\\">\\n            <div class=\\\"text-primary pull-left\\\">\\n              <b>\\n                <span class=\\\"comment-header\\\">56%</span><br />\\n                <span class=\\\"comment-comment\\\">Referral User&nbsp;</span>\\n              </b>\\n            </div>\\n            <div class=\\\"text-success pull-left m-l\\\">\\n              <b>\\n                <span class=\\\"comment-header\\\">25%</span><br />\\n                <span class=\\\"comment-comment\\\">Returning User&nbsp;</span>\\n              </b>\\n            </div>\\n            <div class=\\\"text-warning pull-left m-l\\\">\\n              <b>\\n                <span class=\\\"comment-header\\\">20%</span><br />\\n                <span class=\\\"comment-comment\\\">New User</span>\\n              </b>\\n            </div>\\n          </div>\\n          <div id=\\\"lineChart\\\" style=\\\"height:221px\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-4 col-xl-3\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"\\\">\\n          <div id=\\\"cbar\\\" style=\\\"height:150px; padding-top:7px;\\\"></div>\\n        </div>\\n      </div>\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-block\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-6 text-left\\\">\\n              <div class=\\\"padder\\\">\\n                <span class=\\\"heading\\\">Totol View :</span><br />\\n                <strong class=\\\"text-primary\\\">22068</strong>\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-6\\\">\\n              <div id=\\\"pie\\\" style=\\\"height:125px; margin:-9px 0px -15px\\\"></div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-xl-8\\\">\\n      <div class=\\\"card card-block\\\">\\n        <div id=\\\"vmap\\\" style=\\\"width: 100%; height: 321px;\\\"></div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 col-xl-4\\\">\\n      <todo-cmp></todo-cmp>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/home/home.component.html\n// module id = 925\n// module chunks = 0 2","module.exports = \"<a class=\\\"stat card hvr-wobble-horizontal\\\">\\n\\t<div class=\\\" stat-icon\\\">\\n\\t\\t<i class=\\\"fa fa-{{icon}} fa-4x text-{{bgclass}}\\\"></i>\\n\\t</div>\\n\\t<div class=\\\" stat-label\\\">\\n\\t\\t<div class=\\\"label-header\\\">\\n\\t\\t\\t{{value}}\\n\\t\\t</div>\\n\\t\\t<progress class=\\\"progress progress-{{bgclass}}\\\" max=\\\"100\\\" value=\\\"{{progressValue}}\\\">{{progressValue}}%</progress>\\n\\t\\t<div class=\\\"clearfix stat-detail\\\">\\n\\t\\t\\t<div class=\\\"label-body\\\">\\n\\t\\t\\t\\t<i class=\\\"fa fa-arrow-circle-o-right pull-right text-muted\\\"></i> {{ text }}\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</a>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/widgets/stats/stats.component.html\n// module id = 942\n// module chunks = 0 2","module.exports = \"<div class=\\\"todo-container card card-danger\\\">\\n\\t<div class=\\\"card-header\\\">\\n\\t\\t<div class=\\\"todo-header text-xs-center\\\">\\n\\t\\t\\t<h4><i class=\\\"fa fa-tasks\\\"></i>&nbsp;To do Tasks</h4>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"card-block\\\" style=\\\"padding-bottom: 0;\\\">\\n\\t\\t<div class=\\\"todo-body\\\">\\n\\t\\t\\t<div class=\\\"todo-list-wrap\\\">\\n\\t\\t\\t\\t<ul class=\\\"todo-list\\\">\\n\\t\\t\\t\\t\\t<li *ngFor=\\\"let name of nameList\\\">\\n\\t\\t\\t\\t\\t\\t<label class=\\\"checkbox1 animated bounceInDown\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\">\\n\\t\\t\\t\\t\\t\\t\\t<span></span>\\n\\t\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"done animated bounceInRight\\\">{{name}}</span>\\n\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t</div>\\n\\t\\t\\t<form class=\\\"todo-from-bottom\\\" (submit)=\\\"addName()\\\">\\n\\t\\t\\t\\t<p class=\\\"input-group\\\">\\n\\t\\t            <input [(ngModel)]=\\\"newName\\\" name=\\\"newName\\\" class=\\\"form-control\\\">\\n\\t\\t            <span class=\\\"input-group-btn\\\">\\n\\t\\t            \\t<button type=\\\"submit\\\" class=\\\"btn btn-danger\\\">Add</button>\\n\\t\\t            </span>\\n\\t            </p>\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/widgets/todo/todo.component.html\n// module id = 943\n// module chunks = 0 2"],"sourceRoot":""}