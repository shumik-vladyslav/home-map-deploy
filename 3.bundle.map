{"version":3,"sources":["webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/charts/chart-js/chart-js.module.ts?a69c","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/charts/chart-js/chart-js.component.ts?8cfe","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/charts/chart-js/chart-js.routes.ts?c0b4","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/ng2-charts/components/charts/charts.js?b941","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/ng2-charts/ng2-charts.js?01f8","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/charts/chart-js/chart-js.component.scss?b4b7","webpack:///C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/charts/chart-js/chart-js.component.html?de29"],"names":[],"mappings":"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G,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAEM,uCAAY,GAAnB,UAAoB,CAAM;QACtB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAjEL;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,QAAQ,EAAE,mBAAO,CAAC,GAA2B,CAAC;YAC9C,MAAM,EAAE,CAAC,mBAAO,CAAC,GAA2B,CAAC,CAAC;SAC/C,CAAC;;wBAAA;IA8DF,uBAAC;AAAD,CAAC;;;;;;;;;;;ACpEoD;AACE;AAEvD,IAAM,aAAa,GAAY;IAC3B,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,6EAAgB,EAAE;CAC5C,CAAC;AAEF,4CAAe,qEAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;;;;;;;;;ACPpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA,uCAAuC,+BAA+B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,iBAAiB;AACjB;AACA;AACA,6BAA6B,oCAAoC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iCAAiC,gCAAgC,IAAI;AAC9E;AACA;AACA;AACA,SAAS,2BAA2B;AACpC;AACA;AACA,kBAAkB,qBAAqB;AACvC,sBAAsB,qBAAqB;AAC3C,oBAAoB,qBAAqB;AACzC,qBAAqB,qBAAqB;AAC1C,uBAAuB,qBAAqB;AAC5C,oBAAoB,qBAAqB;AACzC,oBAAoB,qBAAqB;AACzC,wBAAwB,sBAAsB;AAC9C,wBAAwB,sBAAsB;AAC9C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,yBAAyB,EAAE;AACjF,6CAA6C,eAAe,EAAE;AAC9D,2DAA2D,uBAAuB,EAAE;AACpF,kDAAkD,eAAe,EAAE;AACnE,gEAAgE,uBAAuB,EAAE;AACzF,4DAA4D,uBAAuB,EAAE;AACrF;AACA;AACA;AACA;AACA,sDAAsD,yBAAyB,EAAE;AACjF,kDAAkD,uBAAuB,EAAE;AAC3E,2DAA2D,yBAAyB,EAAE;AACtF,uDAAuD,uBAAuB,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;ACjQA;AACA;AACA;AACA;AACA;;;;;;;;ACJA,mB;;;;;;;ACAA,kkH","file":"3.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChartsModule as Chart} from 'ng2-charts/ng2-charts';\nimport { ChartJsComponent } from './chart-js.component';\nimport chartJsRoutes from './chart-js.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    Chart,\n    chartJsRoutes\n  ],\n  declarations: [ChartJsComponent]\n})\nexport default class ChartJsModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/angular2-template-loader!C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/charts/chart-js/chart-js.module.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-chart-js',\n  template: require('./chart-js.component.html'),\n  styles: [require('./chart-js.component.scss')]\n})\n\nexport class ChartJsComponent {\n\t// lineChart\n    public lineChartData: Array<any> = [\n        {data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A'},\n        {data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B'},\n        {data: [18, 48, 77, 9, 100, 27, 40], label: 'Series C'}\n    ];\n    public lineChartLabels: Array<any> = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n    public lineChartOptions: any = {\n        animation: false,\n        responsive: true\n    };\n    public lineChartLegend: boolean = true;\n    public lineChartType: string = 'line';\n\n    // bar chart\n    public barChartOptions: any = {\n        scaleShowVerticalLines: false,\n        responsive: true\n    };\n    public barChartLabels: string[] = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n    public barChartType: string = 'bar';\n    public barChartLegend: boolean = true;\n    public barChartData: any[] = [\n        {data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A'},\n        {data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B'}\n    ];\n\n    // Doughnut chart\n    public doughnutChartLabels: string[] = ['Download Sales', 'In-Store Sales', 'Mail-Order Sales'];\n    public doughnutChartData: number[] = [350, 450, 100];\n    public doughnutChartType: string = 'doughnut';\n\n    // Radar\n    public radarChartLabels: string[] = ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'];\n    public radarChartData: any = [\n        {data: [65, 59, 90, 81, 56, 55, 40], label: 'Series A'},\n        {data: [28, 48, 40, 19, 96, 27, 100], label: 'Series B'}\n    ];\n    public radarChartType: string = 'radar';\n\n    // Pie\n    public pieChartLabels: string[] = ['Download Sales', 'In-Store Sales', 'Mail Sales'];\n    public pieChartData: number[] = [300, 500, 100];\n    public pieChartType: string = 'pie';\n\n    // PolarArea\n    public polarAreaChartLabels: string[] = ['Download Sales', 'In-Store Sales', 'Mail Sales', 'Telesales', 'Corporate Sales'];\n    public polarAreaChartData: number[] = [300, 500, 100, 40, 120];\n    public polarAreaLegend: boolean = true;\n    public polarAreaChartType: string = 'polarArea';\n\n    // common events for all type of chart\n    public chartClicked(e: any): void {\n        console.log(e);\n    }\n\n    public chartHovered(e: any): void {\n        console.log(e);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/angular2-template-loader!C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/charts/chart-js/chart-js.component.ts","import { Route, RouterModule } from '@angular/router';\nimport { ChartJsComponent } from './chart-js.component';\n\nconst chartJsRoutes: Route[] = [\n    { path: '', component: ChartJsComponent }\n];\n\nexport default RouterModule.forChild(chartJsRoutes);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/angular2-template-loader!C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/charts/chart-js/chart-js.routes.ts","\"use strict\";\nvar core_1 = require('@angular/core');\n/* tslint:disable-next-line */\nvar BaseChartDirective = (function () {\n    function BaseChartDirective(element) {\n        this.labels = [];\n        this.options = {};\n        this.chartClick = new core_1.EventEmitter();\n        this.chartHover = new core_1.EventEmitter();\n        this.initFlag = false;\n        this.element = element;\n    }\n    BaseChartDirective.prototype.ngOnInit = function () {\n        this.ctx = this.element.nativeElement.getContext('2d');\n        this.cvs = this.element.nativeElement;\n        this.initFlag = true;\n        if (this.data || this.datasets) {\n            this.refresh();\n        }\n    };\n    BaseChartDirective.prototype.ngOnChanges = function (changes) {\n        if (this.initFlag) {\n            // Check if the changes are in the data or datasets\n            if (changes.hasOwnProperty('data') || changes.hasOwnProperty('datasets')) {\n                this.chart.data.datasets = this.getDatasets();\n                if (changes.hasOwnProperty('labels')) {\n                    this.chart.data.labels = this.labels;\n                }\n                this.chart.update();\n            }\n            else {\n                this.refresh();\n            }\n        }\n    };\n    BaseChartDirective.prototype.ngOnDestroy = function () {\n        if (this.chart) {\n            this.chart.destroy();\n            this.chart = void 0;\n        }\n    };\n    BaseChartDirective.prototype.getChartBuilder = function (ctx /*, data:Array<any>, options:any*/) {\n        var _this = this;\n        var datasets = this.getDatasets();\n        var options = Object.assign({}, this.options);\n        if (this.legend === false) {\n            options.legend = { display: false };\n        }\n        // hock for onHover and onClick events\n        options.hover = options.hover || {};\n        if (!options.hover.onHover) {\n            options.hover.onHover = function (active) {\n                if (active && !active.length) {\n                    return;\n                }\n                _this.chartHover.emit({ active: active });\n            };\n        }\n        if (!options.onClick) {\n            options.onClick = function (event, active) {\n                _this.chartClick.emit({ event: event, active: active });\n            };\n        }\n        var opts = {\n            type: this.chartType,\n            data: {\n                labels: this.labels,\n                datasets: datasets\n            },\n            options: options\n        };\n        if (typeof Chart === 'undefined') {\n            throw new Error('ng2-charts configuration issue: Embedding Chart.js lib is mandatory');\n        }\n        return new Chart(ctx, opts);\n    };\n    BaseChartDirective.prototype.getDatasets = function () {\n        var _this = this;\n        var datasets = void 0;\n        // in case if datasets is not provided, but data is present\n        if (!this.datasets || !this.datasets.length && (this.data && this.data.length)) {\n            if (Array.isArray(this.data[0])) {\n                datasets = this.data.map(function (data, index) {\n                    return { data: data, label: _this.labels[index] || \"Label \" + index };\n                });\n            }\n            else {\n                datasets = [{ data: this.data, label: \"Label 0\" }];\n            }\n        }\n        if (this.datasets && this.datasets.length ||\n            (datasets && datasets.length)) {\n            datasets = (this.datasets || datasets)\n                .map(function (elm, index) {\n                var newElm = Object.assign({}, elm);\n                if (_this.colors && _this.colors.length) {\n                    Object.assign(newElm, _this.colors[index]);\n                }\n                else {\n                    Object.assign(newElm, getColors(_this.chartType, index, newElm.data.length));\n                }\n                return newElm;\n            });\n        }\n        if (!datasets) {\n            throw new Error(\"ng-charts configuration error, \\n      data or datasets field are required to render char \" + this.chartType);\n        }\n        return datasets;\n    };\n    BaseChartDirective.prototype.refresh = function () {\n        // if (this.options && this.options.responsive) {\n        //   setTimeout(() => this.refresh(), 50);\n        // }\n        // todo: remove this line, it is producing flickering\n        this.ngOnDestroy();\n        this.chart = this.getChartBuilder(this.ctx /*, data, this.options*/);\n    };\n    BaseChartDirective.defaultColors = [\n        [255, 99, 132],\n        [54, 162, 235],\n        [255, 206, 86],\n        [231, 233, 237],\n        [75, 192, 192],\n        [151, 187, 205],\n        [220, 220, 220],\n        [247, 70, 74],\n        [70, 191, 189],\n        [253, 180, 92],\n        [148, 159, 177],\n        [77, 83, 96]\n    ];\n    BaseChartDirective.decorators = [\n        { type: core_1.Directive, args: [{ selector: 'canvas[baseChart]' },] },\n    ];\n    /** @nocollapse */\n    BaseChartDirective.ctorParameters = [\n        { type: core_1.ElementRef, },\n    ];\n    BaseChartDirective.propDecorators = {\n        'data': [{ type: core_1.Input },],\n        'datasets': [{ type: core_1.Input },],\n        'labels': [{ type: core_1.Input },],\n        'options': [{ type: core_1.Input },],\n        'chartType': [{ type: core_1.Input },],\n        'colors': [{ type: core_1.Input },],\n        'legend': [{ type: core_1.Input },],\n        'chartClick': [{ type: core_1.Output },],\n        'chartHover': [{ type: core_1.Output },],\n    };\n    return BaseChartDirective;\n}());\nexports.BaseChartDirective = BaseChartDirective;\nfunction rgba(colour, alpha) {\n    return 'rgba(' + colour.concat(alpha).join(',') + ')';\n}\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfunction formatLineColor(colors) {\n    return {\n        backgroundColor: rgba(colors, 0.4),\n        borderColor: rgba(colors, 1),\n        pointBackgroundColor: rgba(colors, 1),\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: rgba(colors, 0.8)\n    };\n}\nfunction formatBarColor(colors) {\n    return {\n        backgroundColor: rgba(colors, 0.6),\n        borderColor: rgba(colors, 1),\n        hoverBackgroundColor: rgba(colors, 0.8),\n        hoverBorderColor: rgba(colors, 1)\n    };\n}\nfunction formatPieColors(colors) {\n    return {\n        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),\n        borderColor: colors.map(function () { return '#fff'; }),\n        pointBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),\n        pointBorderColor: colors.map(function () { return '#fff'; }),\n        pointHoverBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),\n        pointHoverBorderColor: colors.map(function (color) { return rgba(color, 1); })\n    };\n}\nfunction formatPolarAreaColors(colors) {\n    return {\n        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),\n        borderColor: colors.map(function (color) { return rgba(color, 1); }),\n        hoverBackgroundColor: colors.map(function (color) { return rgba(color, 0.8); }),\n        hoverBorderColor: colors.map(function (color) { return rgba(color, 1); })\n    };\n}\nfunction getRandomColor() {\n    return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n}\n/**\n * Generate colors for line|bar charts\n * @param index\n * @returns {number[]|Color}\n */\nfunction generateColor(index) {\n    return BaseChartDirective.defaultColors[index] || getRandomColor();\n}\n/**\n * Generate colors for pie|doughnut charts\n * @param count\n * @returns {Colors}\n */\nfunction generateColors(count) {\n    var colorsArr = new Array(count);\n    for (var i = 0; i < count; i++) {\n        colorsArr[i] = BaseChartDirective.defaultColors[i] || getRandomColor();\n    }\n    return colorsArr;\n}\n/**\n * Generate colors by chart type\n * @param chartType\n * @param index\n * @param count\n * @returns {Color}\n */\nfunction getColors(chartType, index, count) {\n    if (chartType === 'pie' || chartType === 'doughnut') {\n        return formatPieColors(generateColors(count));\n    }\n    if (chartType === 'polarArea') {\n        return formatPolarAreaColors(generateColors(count));\n    }\n    if (chartType === 'line' || chartType === 'radar') {\n        return formatLineColor(generateColor(index));\n    }\n    if (chartType === 'bar' || chartType === 'horizontalBar') {\n        return formatBarColor(generateColor(index));\n    }\n    return generateColor(index);\n}\nvar ChartsModule = (function () {\n    function ChartsModule() {\n    }\n    ChartsModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    declarations: [\n                        BaseChartDirective\n                    ],\n                    exports: [\n                        BaseChartDirective\n                    ],\n                    imports: []\n                },] },\n    ];\n    /** @nocollapse */\n    ChartsModule.ctorParameters = [];\n    return ChartsModule;\n}());\nexports.ChartsModule = ChartsModule;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/ng2-charts/components/charts/charts.js\n// module id = 886\n// module chunks = 0 3","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./components/charts/charts'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/~/ng2-charts/ng2-charts.js\n// module id = 887\n// module chunks = 0 3","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/charts/chart-js/chart-js.component.scss\n// module id = 911\n// module chunks = 0 3","module.exports = \"<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-6\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-header card-primary card-inverse\\\">\\n\\t\\t\\t\\t<h3 class=\\\"card-title\\\">Line Chart</h3>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t<canvas baseChart\\n\\t\\t\\t\\t\\t[datasets]=\\\"lineChartData\\\"\\n\\t\\t\\t\\t\\t[labels]=\\\"lineChartLabels\\\"\\n\\t\\t\\t\\t\\t[options]=\\\"lineChartOptions\\\"\\n\\t\\t\\t\\t\\t[legend]=\\\"lineChartLegend\\\"\\n\\t\\t\\t\\t\\t[chartType]=\\\"lineChartType\\\"\\n\\t\\t\\t\\t\\t(chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t\\t\\t\\t(chartClick)=\\\"chartClicked($event)\\\"\\n\\t\\t\\t\\t\\theight=\\\"140\\\" >\\n\\t\\t\\t\\t</canvas>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-header card-primary card-inverse\\\">\\n\\t\\t\\t\\t<h3 class=\\\"card-title\\\">Bar Chart</h3>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t<canvas baseChart\\n\\t\\t            [datasets]=\\\"barChartData\\\"\\n\\t\\t            [labels]=\\\"barChartLabels\\\"\\n\\t\\t            [options]=\\\"barChartOptions\\\"\\n\\t\\t            [legend]=\\\"barChartLegend\\\"\\n\\t\\t            [chartType]=\\\"barChartType\\\"\\n\\t\\t            (chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t            (chartClick)=\\\"chartClicked($event)\\\"\\n\\t\\t            height=\\\"140\\\" >\\n\\t\\t        </canvas>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-6\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-header card-primary card-inverse\\\">\\n\\t\\t\\t\\t<h3 class=\\\"card-title\\\">Doughnut Chart</h3>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t<canvas baseChart\\n\\t\\t\\t\\t\\t[data]=\\\"doughnutChartData\\\"\\n\\t\\t\\t\\t\\t[labels]=\\\"doughnutChartLabels\\\"\\n\\t\\t\\t\\t\\t[chartType]=\\\"doughnutChartType\\\"\\n\\t\\t\\t\\t\\t(chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t\\t\\t\\t(chartClick)=\\\"chartClicked($event)\\\" \\n\\t\\t\\t\\t\\theight=\\\"140\\\" >\\n\\t\\t\\t\\t</canvas>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-header card-primary card-inverse\\\">\\n\\t\\t\\t\\t<h3 class=\\\"card-title\\\">Radar Chart</h3>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t<canvas baseChart\\n\\t\\t\\t\\t\\t[datasets]=\\\"radarChartData\\\"\\n\\t\\t\\t\\t\\t[labels]=\\\"radarChartLabels\\\"\\n\\t\\t\\t\\t\\t[chartType]=\\\"radarChartType\\\"\\n\\t\\t\\t\\t\\t(chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t\\t\\t\\t(chartClick)=\\\"chartClicked($event)\\\"\\n\\t\\t\\t\\t\\theight=\\\"140\\\" >\\n\\t\\t\\t\\t</canvas>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-6\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-header card-primary card-inverse\\\">\\n\\t\\t\\t\\t<h3 class=\\\"card-title\\\">Pie Chart</h3>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t<canvas baseChart\\n\\t\\t\\t\\t\\t[data]=\\\"pieChartData\\\"\\n\\t\\t\\t\\t\\t[labels]=\\\"pieChartLabels\\\"\\n\\t\\t\\t\\t\\t[chartType]=\\\"pieChartType\\\"\\n\\t\\t\\t\\t\\t(chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t\\t\\t\\t(chartClick)=\\\"chartClicked($event)\\\"\\n\\t\\t\\t\\t\\theight=\\\"140\\\" >\\n\\t\\t\\t\\t</canvas>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-header card-primary card-inverse\\\">\\n\\t\\t\\t\\t<h3 class=\\\"card-title\\\">Polar Area Chart</h3>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t<canvas baseChart\\n\\t\\t\\t\\t\\t[data]=\\\"polarAreaChartData\\\"\\n\\t\\t\\t\\t\\t[labels]=\\\"polarAreaChartLabels\\\"\\n\\t\\t\\t\\t\\t[legend]=\\\"polarAreaLegend\\\"\\n\\t\\t\\t\\t\\t[chartType]=\\\"polarAreaChartType\\\"\\n\\t\\t\\t\\t\\t(chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t\\t\\t\\t(chartClick)=\\\"chartClicked($event)\\\"\\n\\t\\t\\t\\t\\theight=\\\"140\\\" >\\n\\t\\t\\t\\t</canvas>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/shumi/Documents/Ani-theme-angular2-bootstrap4/src/app/dashboard/charts/chart-js/chart-js.component.html\n// module id = 937\n// module chunks = 0 3"],"sourceRoot":""}